<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel>
        <title>Alex Lu's Blog Feed</title>
        <link>https://op8867555.github.io</link>
        <description><![CDATA[Alex Lu's Blog Feed]]></description>
        <atom:link href="https://op8867555.github.io/feed.xml" rel="self"
                   type="application/rss+xml" />
        <lastBuildDate>Sun, 11 Feb 2018 00:00:00 UT</lastBuildDate>
        <item>
    <title>[en] Notes on Thinkpad X1 Carbon 2017 + Arch Linux</title>
    <link>https://op8867555.github.io/posts/2017-06-11-X1C5-notes.html</link>
    <description><![CDATA[<section id="changelogs" class="level3">
<h3>changelogs</h3>
<ul>
<li>2018/02/11 add a note for recall experience and thunderbolt 3 failures.</li>
<li>2018/01/12 update info.</li>
<li>2017/08/22 update kernel to 4.12; add a WWAN section.</li>
<li>2017/07/22 rewrite the post in English, remove some outdated information.</li>
</ul>
</section>
<section id="quick-summary" class="level1">
<h1>Quick Summary</h1>
<p>I‚Äôm running Arch Linux (kernel 4.14) on a Thinkpad X1 Carbon 5th Gen (X1C5).</p>
<p>Most stuff works out of box,</p>
<ul>
<li>wifi</li>
<li>backlit keyboard</li>
<li>LEDs on keyboard (caps lock/mute/mic mute)</li>
<li>TrackPoint - slow speed but works.</li>
<li>TrackPad - not so precise but works.</li>
<li>Thunderbolt 3 - USB-C to HDMI / USB-C Hub<span><label for="sn-1" class="margin-toggle sidenote-number"></label><input type="checkbox" id="sn-1" class="margin-toggle"/><span class="sidenote">I wrote a <a href="/posts/2017-07-21-adam-usb-c-dock.html">blog post</a> in Traditional Chinese üáπüáº about the hub.<br />
<br />
</span></span> works.</li>
<li>Bluetooth - works with a FC30 game controller.</li>
<li>WWAN - works with ModemManager.</li>
<li>mini-Ethernet - works.</li>
</ul>
<p>Things <em>not</em> working,</p>
<ul>
<li>Fingerprint reader</li>
</ul>
<p>I haven‚Äôt tried,</p>
<ul>
<li>micro SD reader</li>
<li>hibernation - I don‚Äôt setup a swap partition.</li>
</ul>
</section>
<section id="hardware" class="level1">
<h1>Hardware</h1>
<section id="trackpoint" class="level2">
<h2>TrackPoint</h2>
<section id="alps-or-elantech" class="level3">
<h3>ALPS or Elantech?</h3>
<p>X1C5 comes with two versions<span><label for="sn-2" class="margin-toggle sidenote-number"></label><input type="checkbox" id="sn-2" class="margin-toggle"/><span class="sidenote"><a href="https://patchwork.kernel.org/patch/9768231/" class="uri">https://patchwork.kernel.org/patch/9768231/</a><br />
<br />
</span></span> of TrackPoint: ALPS and Elantech. I confirmed mine has an Elantech one using <a href="http://pcsupport.lenovo.com/tw/zh/products/laptops-and-netbooks/thinkpad-x-series-laptops/thinkpad-x1-carbon-type-20hr-20hq/downloads/ds122148">TrackPointDetect.exe</a>.</p>
<pre><code>TouchPad-Flash Utility
2017-06-08 20:42:27
Command Line: &quot;C:\Users\alexlu\Desktop\FW_Updater_1.0.0.9\TrackPointDetect.exe&quot;
OS: 64-bit
Pst Vendor : Elan
[ERROR]: This TrackPoint is Elan (ID:03)</code></pre>
</section>
<section id="cursor-speed-trackpoint-cap" class="level3">
<h3>Cursor Speed &amp; TrackPoint Cap</h3>
<p>I took a plastic adapter<span><label for="sn-3" class="margin-toggle sidenote-number"></label><input type="checkbox" id="sn-3" class="margin-toggle"/><span class="sidenote"><img src="https://i.imgur.com/qyS29cDl.jpg" title="fig:" alt="The plastic adapter from previous Thinkpad" /><br />
<br />
</span></span> from my previous laptop - a Thinkpad E130 and trimmed a Soft Rim Cap to fit ‚ÄúSuper Low Profile‚Äù. The cursor speed and acceleration gets much better.</p>
<figure>
<img src="https://i.imgur.com/cxoY1AOl.jpg" alt="IMHO, a soft rim is much better than a soft dome." /><figcaption>IMHO, a soft rim is <em>much better</em> than a soft dome.</figcaption>
</figure>
</section>
</section>
<section id="trackpad" class="level2">
<h2>TrackPad</h2>
<p>It works with libinput and pressure-based palm detection are functional. But it is still unresponsive to small movements for current release. <span><label for="sn-4" class="margin-toggle sidenote-number"></label><input type="checkbox" id="sn-4" class="margin-toggle"/><span class="sidenote"><a href="https://bugs.freedesktop.org/show_bug.cgi?id=98839" class="uri">https://bugs.freedesktop.org/show_bug.cgi?id=98839</a><br />
<br />
</span></span></p>
<p><span><label for="sn-5" class="margin-toggle">&#8853;</label><input type="checkbox" id="sn-5" class="margin-toggle"/><span class="marginnote"> There is a different device according to <a href="https://www.reddit.com/r/thinkpad/comments/6wimb8/doing_some_research_on_x1c5_touchpad_issues/">this thread</a>.<br />
<br />
</span></span></p>
<p><code>dmesg</code> output:</p>
<pre><code>rmi4_smbus 0-002c: registering SMbus-connected sensor
rmi4_f01 rmi4-00.fn01: found RMI device, manufacturer: Synaptics, product: TM3289-002, fw id: 2492434</code></pre>
</section>
<section id="fingerprint-reader" class="level2">
<h2>Fingerprint Reader</h2>
<p>X1C5 have a Validity Sensor 138a:0097. There is no driver for it.</p>
<p>There is an open source reverse engineered driver working in progress<span><label for="sn-6" class="margin-toggle sidenote-number"></label><input type="checkbox" id="sn-6" class="margin-toggle"/><span class="sidenote"><a href="https://github.com/nmikhailov/Validity90" class="uri">https://github.com/nmikhailov/Validity90</a><br />
<br />
</span></span><span><label for="sn-7" class="margin-toggle sidenote-number"></label><input type="checkbox" id="sn-7" class="margin-toggle"/><span class="sidenote"><a href="https://bugs.freedesktop.org/show_bug.cgi?id=94536" class="uri">https://bugs.freedesktop.org/show_bug.cgi?id=94536</a><br />
<br />
</span></span>.</p>
</section>
<section id="wwan" class="level2">
<h2>WWAN</h2>
<p>X1C5 (WWAN) comes with a Sierra EM7455 LTE Modem (1199:9079).</p>
<p>It works out of box using latest ModemManager.</p>
</section>
<section id="thunderbolt-3" class="level2">
<h2>Thunderbolt 3</h2>
<section id="firmware-failures" class="level3">
<h3>Firmware Failures</h3>
<p>My X1C5‚Äôs usb-c port dies sometime after I plug-in and out my usb-c hub, it was unable to charge and connect any devices, and it sometimes just ‚Äúrecovered‚Äù itself. I initially guess it is a hardware failure and sent the laptop once to repair center, but the technician can‚Äôt reproduce the issue.</p>
<p>Later I found there is a new <a href="https://pcsupport.lenovo.com/us/zh/products/laptops-and-netbooks/thinkpad-x-series-laptops/thinkpad-x1-carbon-type-20hr-20hq/downloads/ds120382">Thunderbolt 3 firmware update</a>, which says it:</p>
<ul>
<li>Fixed an issue where system might not be charged after repeating AC plug-in and out.</li>
</ul>
<p>It is not happen again after firmware updated so far. Intel WTF.</p>
</section>
</section>
<section id="recall-for-loose-screws" class="level2">
<h2>Recall for loose screws</h2>
<p>Lenovo recently(2018/02/06) recalls X1C5 made before 2017/11 and Mine is unfortunately affected. I went to nearest Lenovo Service Center(around 4km) and it took 15~20 minutes for the technician to check. There is no loose screws at last.</p>
</section>
</section>
<section id="software" class="level1">
<h1>Software</h1>
<p>I‚Äôm using i3-gaps without a desktop environment.</p>
<section id="hardware-video-acceleration" class="level2">
<h2>Hardware Video Acceleration</h2>
<p>It is possible to use the integrated graphic card to decode/encode videos, and this helps power-saving a lot.</p>
<p><span><label for="sn-8" class="margin-toggle">&#8853;</label><input type="checkbox" id="sn-8" class="margin-toggle"/><span class="marginnote"> See this <a href="https://wiki.archlinux.org/index.php/Hardware_video_acceleration">article</a> on ArchWiki for more info.<br />
<br />
</span></span></p>
<p>There are two spec/implement/API: VAAPI (by Intel) and VDPAU (by Nvidia). Since most software supports VAAPI, I just need to install <code>libva-intel-driver</code> pacakge.</p>
</section>
<section id="libva-intel-driver" class="level2">
<h2>libva-intel-driver</h2>
<p>Current release version has a bug<span><label for="sn-9" class="margin-toggle sidenote-number"></label><input type="checkbox" id="sn-9" class="margin-toggle"/><span class="sidenote"><a href="https://github.com/01org/intel-vaapi-driver/issues/297" class="uri">https://github.com/01org/intel-vaapi-driver/issues/297</a><br />
<br />
</span></span> when decoding VP9 videos, <code>libva-intel-driver-git</code> package should fixes that.</p>
</section>
<section id="chromium-vaapi" class="level2">
<h2>chromium-vaapi</h2>
<p>There is a VAAPI implementation for Chromium OS, and there is also a patch<span><label for="sn-10" class="margin-toggle sidenote-number"></label><input type="checkbox" id="sn-10" class="margin-toggle"/><span class="sidenote"><a href="https://chromium-review.googlesource.com/c/chromium/src/+/532294" class="uri">https://chromium-review.googlesource.com/c/chromium/src/+/532294</a><br />
<br />
</span></span> to enable that on Linux. The <code>chromium-vaapi-bin</code> package on AUR provides prebuilt binary, or you can build <code>chromium-vaapi</code> by yourself (It takes about 6 hrs first time, you can use ccache to speed up if you want to build it more than one time).</p>
</section>
</section>
<section id="references" class="level1">
<h1>References</h1>
<ul>
<li><a href="https://gist.github.com/gdamjan/141bb0def5f80257fae2b233ec16f3c2">gdamjan‚Äôs Note</a></li>
<li><a href="http://fredrik.wendt.se/2017/04/26/lenovo-thinkpad-x1-carbon-5th-generation/">Fredrik‚Äôs Note</a></li>
<li><a href="https://forums.lenovo.com/t5/forums/v3_1/forumtopicpage/board-id/tp02_en/thread-id/75464/page/29">discussion about TrackPad</a></li>
</ul>
</section>
<section id="outdated" class="level1">
<h1>Outdated</h1>
<p>These issues/tricks/workarounds are mostly outdated(linux kernel ‚â§ 4.12). Maybe I should just remove this section someday‚Ä¶</p>
<section id="trackpoint-1" class="level2">
<h2>TrackPoint</h2>
<section id="issues" class="level3">
<h3>Issues</h3>
<ul>
<li><p>Recognized as a ‚ÄúPS/2 Generic Mouse‚Äù<br />
‚áí No palm-detection during trackpoint use</p></li>
<li><p>Since kernel driver doesn‚Äôt support the new trackpoint, both of sensitivity and speed aren‚Äôt adjustable.<br />
‚áí The default speed/sensitivity is too slow to use.</p></li>
</ul>
</section>
<section id="mark-it-as-a-pointing-stick" class="level3">
<h3>Mark it as a pointing stick</h3>
<p>I found I can making libinput treat the ‚ÄúPS/2 Generic Mouse‚Äù as a trackpoint using a custom udev hwdb entry.</p>
<p><em>Note: this should not be used anymore once trackpoint gets kernel driver supports</em></p>
<pre><code>evdev:name:PS/2 Generic Mouse:dmi:*svnLENOVO*:pvrThinkPadX1Carbon5th*
  ID_INPUT_POINTINGSTICK=1</code></pre>
</section>
<section id="better-trackpoint-acceleration" class="level3">
<h3>Better TrackPoint Acceleration</h3>
<p>There is a <a href="https://bugs.freedesktop.org/show_bug.cgi?id=91369#c48">patch</a> which solves speed issue.</p>
<p>I get my trackpoint much usable by setting up:</p>
<ul>
<li><code>LIBINPUT_ATTR_TRACKPOINT_RANGE=10</code> in hwdb</li>
<li><code>xinput set-prop &quot;PS/2 Generic Mouse&quot; &quot;libinput Accel Speed&quot; -0.25</code> in my .xinitrc</li>
</ul>
</section>
</section>
<section id="trackpad-1" class="level2">
<h2>TrackPad</h2>
<p>The trackpad is <ins>able to</ins> use rmi4 over smbus for now(4.12).</p>
<p>Turn it on by creating a <code>psmouse.conf</code> in <code>/etc/modprobe.d/</code></p>
<pre><code>options psmouse synaptics_intertouch=1</code></pre>
<section id="palm-detection" class="level3">
<h3>Palm Detection</h3>
<ul>
<li>pressure-based palm-detection works great (libinput ‚â• 1.8)</li>
<li>palm-detection during trackpoint use requires <a href="#mark-it-as-a-pointing-stick">mark it as a pointing stick</a>.</li>
</ul>
</section>
</section>
<section id="new-hotkeys" class="level2">
<h2>New Hotkeys</h2>
<p>Before linux-4.12, You needs <a href="https://patchwork.kernel.org/patch/9596129/">these</a> <a href="https://patchwork.kernel.org/patch/9596131/">patches</a> to get these buttons works.</p>
</section>
</section>]]></description>
    <pubDate>Sun, 11 Feb 2018 00:00:00 UT</pubDate>
    <guid>https://op8867555.github.io/posts/2017-06-11-X1C5-notes.html</guid>
    <dc:creator>Alex Lu</dc:creator>
</item>
<item>
    <title>Ê©üÂô®Â¶Ç‰ΩïË®àÁÆóÂæÆÂàÜ/ÂÅèÂæÆÂàÜÔºà‰∏ãÔºâ</title>
    <link>https://op8867555.github.io/posts/2018-01-11-autodiff-reverse-mode.html</link>
    <description><![CDATA[<section>
<p><a href="/posts/2017-12-17-autodiff.html">Ââç‰∏ÄÁØáÊñáÁ´†</a>ÁöÑÊúÄÂæå‰ªãÁ¥π‰∫Ü Forward-Mode Automatic Differential ÈÄôÂÄãÊáâÁî® Chain Rule ÁöÑÊäÄÂ∑ßÔºåÈÄô‰∏ÄÁØáË¶Å‰æÜ‰ªãÁ¥π‰∏ÄÂÄãÂèçÈÅé‰æÜÁöÑÁâàÊú¨ Reverse-Mode Automatic Differential„ÄÇ</p>
</section>
<section id="recap-forward-mode-ad" class="level1">
<h1>Recap: Forward-Mode AD</h1>
<p>Ë®àÁÆó Foward-Mode AD ÁöÑÊôÇÂÄôÔºåÂÅáË®≠Ë¶ÅÊ±Ç <span class="math inline">\(f(x, y) = sin(x) + x √ó y\)</span> Âú® <span class="math inline">\((3, 1)\)</span> Â∞ç <span class="math inline">\(x\)</span> ÁöÑÂÅèÂæÆÂàÜ <span class="math inline">\(\frac{\partial Y}{\partial x}\)</span>ÔºåÊàëÂÄëÊúÉÂÉèÈÄôÊ®£Áî±‰∏äÂà∞‰∏ãË®àÁÆóÔºö</p>
<p><span><label for="sn-1" class="margin-toggle">&#8853;</label><input type="checkbox" id="sn-1" class="margin-toggle"/><span class="marginnote"> <a href="https://upload.wikimedia.org/wikipedia/commons/a/a4/ForwardAccumulationAutomaticDifferentiation.png"><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/a/a4/ForwardAccumulationAutomaticDifferentiation.png/512px-ForwardAccumulationAutomaticDifferentiation.png" /></a> Forward-Mode AD Âú® <a href="https://en.wikipedia.org/wiki/Automatic_differentiation">Wikipedia</a> ‰∏äÁöÑÁ§∫ÊÑèÂúñ<br />
<br />
</span></span></p>
<p><span class="math display">\[\begin{array}{cl}
\frac{‚àÇ}{‚àÇ x} x&amp;= 1\\[0.5em]
\frac{‚àÇ}{‚àÇ x} sin(x) &amp;= cos(x) \\[0.5em]
\frac{‚àÇ}{‚àÇ x} x \cdot y  &amp;= 1\\[0.5em]
\frac{‚àÇ}{‚àÇ x} sin(x) + x \cdot y  &amp;= \frac{‚àÇ sin(x)}{‚àÇ x} +
\frac{‚àÇ x \cdot y}{‚àÇ x} = cos(x) + 1
\end{array}\]</span></p>
<p>‰πüÂ∞±ÊòØÂ¶ÇÊûú‰ªäÂ§©ÊúâÂÄã <span class="math inline">\(f\)</span>ÔºåËÄåÂ∞á <span class="math inline">\(x_i\)</span> ‰ª•Â§ñÁöÑËº∏ÂÖ•ÈÉΩÊòØÁÇ∫Â∏∏Êï∏ÁöÑË©±ÔºåÂæóÂà∞ <span class="math inline">\(f_{x_i} = g_1 \circ g_2 \circ \cdots \circ g_n\)</span>Ôºå</p>
<ol type="1">
<li>Âæû <span class="math inline">\(\frac{\partial x_i}{\partial x_i} = 1\)</span>Ôºå‰∏¶Â∞áÂÖ∂‰ªñËÆäÊï∏ <span class="math inline">\(x_j\)</span> Ë¶ñÁÇ∫Â∏∏Êï∏Ôºå</li>
<li>ÁÖßËëóËÆäÊï∏<span class="math inline">\(x_i\)</span> ÁöÑË®àÁÆóÈÅéÁ®ãË®àÁÆó <span class="math inline">\(g(x_i)\)</span> ÁöÑÂÅèÂæÆÂàÜÔºàÈÄôÂÄã‰æãÂ≠êÁöÑÁ¨¨‰∏ÄÂÄã <span class="math inline">\(g\)</span> ÊòØ <span class="math inline">\(sin\)</span> ÊàñÊòØ <span class="math inline">\(x \cdot y\)</span>Ôºâ<span><label for="sn-2" class="margin-toggle">&#8853;</label><input type="checkbox" id="sn-2" class="margin-toggle"/><span class="marginnote"> ÊàëÂÄëÂèØ‰ª•Â∞á <span class="math inline">\(\cdot\)</span> ÁúãÊàê <span class="math inline">\(mul(x, y)\)</span>ÔºåËÄåÂõ†ÁÇ∫ <span class="math inline">\(y\)</span> Ë¢´Ë¶ñÁÇ∫Â∏∏Êï∏ÔºåÊâÄ‰ª•ÂèàÂèØ‰ª•ÁúãÊàê‰∏ÄÂÄãÂñÆËÆäÊï∏ÂáΩÊï∏ <span class="math inline">\(mul_{1}(x) = 1\)</span>„ÄÇ<br />
<br />
</span></span></li>
<li>ÊúÄÂæåÊ±ÇÂæó <span class="math inline">\(\frac{\partial}{\partial x_i}f(..., x_i, ...)\)</span></li>
</ol>
<p>Â¶ÇÊûúË¶ÅË®àÁÆóÊØèÂÄãËÆäÊï∏ <span class="math inline">\(x_i\)</span> ÁöÑÂÅèÂæÆÂàÜÁöÑË©±ÔºåÊàëÂÄëÂ∞±ÂøÖÈ†àÈáçË§áÈÄôÊ®£ÁöÑÂãï‰Ωú <span class="math inline">\(N\)</span> Ê¨°ÔºåËÄåË®àÁÆóÊ¢ØÂ∫¶ÊôÇÂ∞±ÊúÉÈÅáÂà∞ÈÄôÂÄãÂõ∞Â¢É„ÄÇ</p>
</section>
<section id="reverse-mode-ad" class="level1">
<h1>Reverse-Mode AD</h1>
<p>Reverse-Mode AD ÂâáÊòØÂèçÈÅé‰æÜË®àÁÆóÔºö</p>
<p><span><label for="sn-3" class="margin-toggle">&#8853;</label><input type="checkbox" id="sn-3" class="margin-toggle"/><span class="marginnote"> <a href="https://commons.wikimedia.org/wiki/File%3AReverseaccumulationAD.png"><img src="https://upload.wikimedia.org/wikipedia/commons/a/a0/ReverseaccumulationAD.png" /></a> Rerverse-Mode AD Âú® <a href="https://en.wikipedia.org/wiki/Automatic_differentiation">Wikipedia</a> ‰∏äÁöÑÁ§∫ÊÑèÂúñ<br />
<br />
</span></span></p>
<p><span class="math display">\[\begin{array}{cll}
\frac{‚àÇ Y}{‚àÇ Y} &amp;= \frac{‚àÇ Y}{‚àÇ sin(x) + x \cdot y} &amp;= 1 \\[0.5em]
\frac{‚àÇ Y}{‚àÇ sin(x)} &amp;=
\frac{‚àÇ Y}{‚àÇ sin(x) + x \cdot y}\frac{‚àÇ sin(x) + x \cdot y}{‚àÇ sin(x)} &amp;=
1 \cdot 1
\\[0.5em]
\frac{‚àÇ Y}{‚àÇ x \cdot y} &amp;=
\frac{‚àÇ Y}{‚àÇ sin(x) + x \cdot y}\frac{‚àÇ sin(x) + x \cdot y}{‚àÇ x \cdot y} &amp;=
1 \cdot 1
\\[0.5em]
\frac{‚àÇ Y}{‚àÇ x} &amp;=
\frac{‚àÇ Y}{‚àÇ sin(x)}\frac{‚àÇ sin(x)}{‚àÇ x} +
\frac{‚àÇ Y}{‚àÇ x \cdot y}\frac{‚àÇ x \cdot y}{‚àÇ x} &amp;=
1 \cdot cos(x) + 1 \cdot y
\\[0.5em]
\frac{‚àÇ Y}{‚àÇ y} &amp;=
\frac{‚àÇ Y}{‚àÇ x \cdot y}\frac{‚àÇ x \cdot y}{‚àÇ y} &amp;=
1 \cdot x
\end{array}\]</span></p>
<p>Forward-Mode AD Âæû <span class="math inline">\(\frac{‚àÇ \color{red}x}{‚àÇ x} = 1\)</span> ÈñãÂßã<strong>ÁµÑÂêà</strong>ÔºåÂà∞ <span class="math inline">\(\frac{‚àÇ \color{red}Y}{‚àÇ x}\)</span> ÁµêÊùüÔºõ Reverse-Mode AD Âæû <span class="math inline">\(\frac{‚àÇ Y}{‚àÇ \color{red}Y} = 1\)</span> ÈñãÂßã<strong>ÂàÜËß£</strong>ÔºåÂà∞ <span class="math inline">\(\frac{‚àÇ Y}{‚àÇ \color{red}x}\)</span> ÁµêÊùü„ÄÇ</p>
<section id="back-propagation" class="level2">
<h2>Back Propagation</h2>
<p><span><label for="sn-4" class="margin-toggle">&#8853;</label><input type="checkbox" id="sn-4" class="margin-toggle"/><span class="marginnote"> <a href="/images/autodiff-neuron.svg"><img src="/images/autodiff-neuron.svg" /></a> È°ûÁ•ûÁ∂ìÁöÑÁ•ûÁ∂ìÂÖÉÁ§∫ÊÑèÂúñ<br />
<br />
</span></span></p>
<p>ÊâÄ‰ª•ÈÄôÊòØÂ¶Ç‰ΩïË∑üÈ°ûÁ•ûÁ∂ìÁ∂≤Ë∑ØÈóúËÅØÊé•‰∏ÄËµ∑ÁöÑÔºü‰∏ÄÂÄãÁ∞°ÂñÆÁöÑÈ°ûÁ•ûÁ∂ìÁ∂≤Ë∑Ø<span><label for="sn-5" class="margin-toggle sidenote-number"></label><input type="checkbox" id="sn-5" class="margin-toggle"/><span class="sidenote">ÁÇ∫‰∫ÜÁ∞°ÂåñÔºåÊàëÁúÅÂéª‰∫Ü Bias term <span class="math inline">\(b^{(l)}\)</span>„ÄÇ<br />
<br />
</span></span>ÂèØ‰ª•ÈÄôÊ®£Ë°®Á§∫<span><label for="sn-6" class="margin-toggle sidenote-number"></label><input type="checkbox" id="sn-6" class="margin-toggle"/><span class="sidenote">ÊàëÈÄôÈÇä‰ΩøÁî® <span class="math inline">\(a\)</span> Ë°®Á§∫ summation, <span class="math inline">\(z\)</span> Ë°®Á§∫ activation ÁöÑËº∏Âá∫ÔºåÊúâ‰∫õÊñáÁ´†ÊúÉÊé°Áî®ÂèçÈÅé‰æÜÁöÑË°®Á§∫ÊñπÂºè„ÄÇ<br />
<br />
</span></span>Ôºö</p>
<p><span class="math display">\[\begin{aligned}
a_i^{(1)} &amp;= \sum_j w^{(1)}_{ij} \cdot x_i
&amp; z_i^{(1)} &amp;= f(a_i^{(1)}) \\
a_i^{(2)} &amp;= \sum_j w^{(2)}_{ij} \cdot z_j^{(1)}
&amp; z_1^{(2)} &amp;= f(a_i^{(2)}) \\
&amp;\cdots &amp; &amp; \cdots \\
a_i^{(l)} &amp;= \sum_j w^{(l)}_{ij} \cdot z_j^{(l-1)}
 &amp;z_i^{(l)} &amp;= f(a_i^{(l)})
\end{aligned}\]</span></p>
<p>Êé•ËëóÊàëÂÄëÊúÉÂÆöÁæ© cost function (ÊàñÁ®±ÁÇ∫ loss function)ÔºåÊØîÊñπË™™ Mean Squared ErrorÔºö</p>
<p><span class="math display">\[C(Y, \hat Y) = \frac{1}{n} \sum_i^n \left(Y_i - \hat{Y}_i\right)^2\]</span></p>
<p>È°ûÁ•ûÁ∂ìÁöÑ Forward Propagation Â∞±ÊòØÂ∏∂ÂÖ•Ë≥áÊñô <span class="math inline">\(X\)</span> Ë∑üÊ¨äÈáç <span class="math inline">\(w\)</span> Ë®àÁÆóÂá∫È†êÊ∏¨ÂÄº <span class="math inline">\(z_i^{(l)}\)</span>ÔºåËÄå Back Propagation Â∞±ÊòØÂà©Áî® cost ‰æÜÊâæÂá∫‰∏ÄÁµÑÊõ¥Â•Ω <span class="math inline">\(w_{ij}\)</span> ‰æÜ‰ΩøÁöÑ <span class="math inline">\(C\)</span> Êõ¥Â∞è„ÄÇ</p>
<p>ÊÄéÈ∫ºÂÅöÔºüÂæû <span class="math inline">\(\frac{‚àÇ C}{‚àÇ \color{red}C} = 1\)</span> ÈñãÂßã„ÄÅ <span class="math inline">\(\frac{‚àÇ C}{‚àÇ \color{red}z_i^{(l)}}, \frac{‚àÇ C}{‚àÇ \color{red}a_i^{(l)}}, \frac{‚àÇ C}{‚àÇ \color{red}w_{ij}^{(l)}}, \frac{‚àÇ C}{‚àÇ \color{red}z_i^{(l-1)}} ...\frac{‚àÇ C}{‚àÇ \color{red}a_i^{(1)}}\)</span>ÔºåÊúÄÂæåÁÆóÂà∞ <span class="math inline">\(\frac{‚àÇ C}{‚àÇ \color{red}w_{ij}^{(1)}}\)</span>ÔºåÊ±ÇÂá∫ÊØè‰∏ÄÂÄã <span class="math inline">\(\frac{‚àÇ C}{‚àÇ w_{ij}}\)</span> ‰πãÂæåÊàëÂÄëÂ∞±ÂèØ‰ª•Âà©Áî® Gradient Descent Ê≥ï‰æÜÊâæÂá∫Êõ¥Â•ΩÁöÑ <span class="math inline">\(w_{ij}\)</span></p>
<p><span class="math display">\[w_{ij} \leftarrow w_{ij} - \eta \frac{‚àÇ C}{‚àÇ w_{ij}}\]</span></p>
<p>Ê≥®ÊÑèÂà∞‰∫ÜÂóéÔºüÈÄôË∑üÂâçÈù¢ÊâÄÊïòËø∞ÁöÑ Reverse-Mode AD ÊòØ<strong>‰∏ÄÊ®£ÁöÑË®àÁÆóÈÅéÁ®ã</strong>ÔºåÈÄô‰ª£Ë°®ÊàëÂÄëÂèØ‰ª•Âà©Áî®ÂÆÉ‰æÜÂèñ‰ª£<span><label for="sn-7" class="margin-toggle sidenote-number"></label><input type="checkbox" id="sn-7" class="margin-toggle"/><span class="sidenote">Back Propagation Ë∑ü AD ÈÉΩÊáâÁî®‰∫Ü chain rule ‰æÜË®àÁÆóÔºå‰∏çÂêåÁöÑÊòØ‰ΩøÁî® AD ÁöÑÊäÄÂ∑ßÂæå‰∏çÂÜçÈúÄË¶ÅÊé®Â∞éÂÖ¨Âºè„ÄÇ<br />
<br />
</span></span>ÊâãÂãïÊé®Â∞éÁöÑ Back Propagation ÊºîÁÆóÊ≥ï„ÄÇ</p>
</section>
<section id="ÁÇ∫‰ªÄÈ∫ºÈ°ûÁ•ûÁ∂ìË¶ÅÁî®-reverse-mode-ad" class="level2">
<h2>ÁÇ∫‰ªÄÈ∫ºÈ°ûÁ•ûÁ∂ìË¶ÅÁî® Reverse-Mode AD?</h2>
<p>Jacobian matrix ÊòØ‰∏ÄÂÄã <span class="math inline">\(f: ‚Ñù^n \rightarrow ‚Ñù^m\)</span> ÁöÑÊâÄÊúâÂÅèÂ∞éÊï∏ÊâÄÁµÑÂêàËÄåÊàêÁöÑÁü©Èô£Ôºö</p>
<p><span class="math display">\[\mathbf {J} =
\begin{bmatrix}
\frac {\partial f_{1}}{\partial x_{1}} &amp; \cdots &amp; \frac {\partial f_{1}}{\partial x_{n}}\\[0.5em]
\vdots &amp;\ddots &amp;\vdots \\[0.5em]
\frac {\partial f_{m}}{\partial x_{1}} &amp; \cdots &amp; \frac {\partial f_{m}}{\partial x_{n}}
\end{bmatrix}\]</span></p>
<p>Reverse-Mode AD Â∞±ÊòØ‰∏ÄÊ¨°ÁÆó‰∏ÄÂÄã rowÔºåForward-Mode AD ÂâáÊòØ‰∏ÄÊ¨°ÁÆó‰∏ÄÂÄã column„ÄÇÁî±ÊñºÈ°ûÁ•ûÁ∂ìÁ∂≤Ë∑ØÊòØ‰∏ÄÂÄã <span class="math inline">\(n \gg m\)</span> ÁöÑÂáΩÊï∏ÔºåÁî® Reverse-Mode AD ÊúâÊïàÁéá‰∫Ü‰∏çÂ∞ë„ÄÇ</p>
</section>
</section>
<section id="implementation" class="level1">
<h1>Implementation</h1>
<p>Reverse-Mode AD ÁöÑÂØ¶‰ΩúÊØîËµ∑ Forward-Mode AD Ë§áÈõú‰∫ÜÈªûÔºåÂÖàÂõû‰æÜÁúãÁúãÂâçÈù¢ÁöÑ<span class="math inline">\(\frac{‚àÇ Y}{‚àÇ x}\)</span>Ôºö</p>
<p><span class="math display">\[\frac{‚àÇ Y}{‚àÇ x} =
\textcolor{blue}{\frac{‚àÇ Y}{‚àÇ sin(x)}}
\textcolor{green}{\frac{‚àÇ sin(x)}{‚àÇ x}} +
\textcolor{blue}{\frac{‚àÇ Y}{‚àÇ x \cdot y}}
\textcolor{green}{\frac{‚àÇ x \cdot y}{‚àÇ x}}\]</span></p>
<p>ÂèØ‰ª•ËßÄÂØüÂà∞Ôºö</p>
<ol type="1">
<li><span class="math inline">\(\color{blue}\text{ËóçËâ≤}\)</span>ÁöÑÈÉ®‰ªΩË∑üË®àÁÆóÈÅéÁ®ãÊòØ<strong>Áõ∏ÂèçÈ†ÜÂ∫èÁöÑ</strong><span><label for="sn-8" class="margin-toggle sidenote-number"></label><input type="checkbox" id="sn-8" class="margin-toggle"/><span class="sidenote">‰ª•Ë®àÁÆó <span class="math inline">\(Y = (f \circ g \circ h) (x)\)</span> ÁöÑÂæÆÂàÜ <span class="math inline">\(\frac{‚àÇ Y}{‚àÇ x}\)</span> ÁÇ∫‰æãÔºåÊàëÂÄëÈúÄË¶ÅÂæûÂæåÈù¢Âà∞ÂâçÈù¢Âú∞Ê±ÇÂá∫ <span class="math inline">\(\frac{‚àÇ Y}{‚àÇ f}, \frac{‚àÇ Y}{‚àÇ g}, \frac{‚àÇ Y}{‚àÇ h}\)</span>Ôºå<br />
<br />
</span></span></li>
<li><span class="math inline">\(\color{green}\text{Á∂†Ëâ≤}\)</span>ÁöÑÈÉ®‰ªΩË∑üË®àÁÆóÈÅéÁ®ãÊòØ<strong>Áõ∏ÂêåÈ†ÜÂ∫èÁöÑ</strong><span><label for="sn-9" class="margin-toggle sidenote-number"></label><input type="checkbox" id="sn-9" class="margin-toggle"/><span class="sidenote">ÁπºÁ∫å‰∏äÈù¢ÁöÑ‰æãÂ≠êÔºåË®àÁÆóÁ∂†Ëâ≤ÁöÑÈÉ®‰ªΩÈúÄË¶ÅÂæûÂâçÈù¢Âà∞ÂæåÈù¢ÁöÑÊ±ÇÂá∫ <span class="math inline">\(\frac{‚àÇ h(x)}{‚àÇ x}, \frac{‚àÇ g(h(x))}{‚àÇ h(x)}, \frac{‚àÇ f(g(h(x)))}{‚àÇ g(h(x))}\)</span>„ÄÇ<br />
<br />
</span></span></li>
<li>ÊàëÂÄëÈúÄË¶ÅËøΩËπ§‰∏ÄÂÄãËÆäÊï∏Ë¢´Âú®Âì™‰∫õÂú∞ÊñπÔºå‰∏äÈù¢ <span class="math inline">\(Y = sin(x) + x \cdot y\)</span> ÁöÑ‰æãÂ≠ê <span class="math inline">\(x\)</span> Â∞±Ë¢´Áî® <span class="math inline">\(sin(x)\)</span> Ë∑ü <span class="math inline">\(x \cdot y\)</span> ÂÖ©Ëôï„ÄÇ</li>
</ol>
<section id="wengert-tape" class="level2">
<h2>Wengert Tape</h2>
<p>ÂÖ∂‰∏≠‰∏ÄÂÄã‰ΩúÊ≥ïÊòØ‰ΩøÁî® Wengert Tape ÔºåÈÄôÂÄãË≥áÊñôÁµêÊßãËøΩËπ§È†ÜÂêëË®àÁÆóÁöÑÈÅéÁ®ãÔºåReverse-Mode AD ÊôÇÂâáÊòØÊúÉÂèçÈÅé‰æÜË®àÁÆó„ÄÇ</p>
<p>ÁÇ∫‰∫ÜÁ∞°ÂåñÔºåÈÄôÈÇäÂ∞áË®àÁÆóÁöÑÈÅéÁ®ãÊé®Âª£Êàê‰∏âÁ®ÆÂΩ¢ÂºèÔºö ËÆäÊï∏„ÄÅÂñÆËÆäÊï∏ÂáΩÊï∏„ÄÅÈõôËÆäÊï∏ÂáΩÊï∏„ÄÇ<span><label for="sn-10" class="margin-toggle sidenote-number"></label><input type="checkbox" id="sn-10" class="margin-toggle"/><span class="sidenote">ÈÄôÈÇäÁöÑÂØ¶‰ΩúÂèÉËÄÉËá™ Edward Kmett ÊâÄÂØ´ÁöÑ <a href="https://github.com/ekmett/ad"><code>ad</code></a> Ëá™ÂãïÂæÆÂàÜÂáΩÂºèÂ∫´„ÄÇ<br />
<br />
</span></span><span><label for="sn-11" class="margin-toggle sidenote-number"></label><input type="checkbox" id="sn-11" class="margin-toggle"/><span class="sidenote">Ê≥®ÊÑèÔºöÁÇ∫‰∫ÜÊñπ‰æøÂØ¶‰ΩúË∑üËß£ÈáãÔºåÊàëÁöÑÂØ¶‰ΩúÊúâÁ®çÂæÆËÆäÂåñÈÅé„ÄÇ<br />
<br />
</span></span></p>
<ul>
<li><code>x</code> ÔºàÊàñÊòØ <code>y</code>Ôºâ Ë°®Á§∫ÈÄôÂÄãË®àÁÆóÁöÑËº∏ÂÖ•ÁØÄÈªû <span class="math inline">\(x, y\)</span>ÔºàÂèçÂêëÁöÑÈÅîÂà∞‰∫ÜÂâçËø∞Á¨¨ 3 ÈªûÔºâ</li>
<li><code>dx</code> ÔºàÊàñÊòØ <code>dy</code>Ôºâ Ë°®Á§∫Ëº∏ÂÖ•Â∞çÈÄôÂÄãË®àÁÆóÁöÑÂΩ±Èüø <span class="math inline">\(\frac{‚àÇf}{‚àÇx}, \frac{‚àÇf}{‚àÇy}\)</span>Ôºå‰πüÂ∞±ÊòØÂâçËø∞Á¨¨ 2 ÈªûÁöÑ<span class="math inline">\(\color{green}\text{Á∂†Ëâ≤}\)</span>ÈÉ®‰ªΩ„ÄÇ</li>
<li><code>ss</code> Ë°®Á§∫ÈÄôÂÄãË®àÁÆóÂ∞çÊñºÊï¥ÂÄãË®àÁÆóÁöÑÂΩ±Èüø <span class="math inline">\(\frac{‚àÇ Y}{‚àÇ f}\)</span>Ôºå‰πüÂ∞±ÊòØÂâçËø∞Á¨¨ 1 ÈªûÁöÑ<span class="math inline">\(\color{blue}\text{ËóçËâ≤}\)</span>ÈÉ®‰ªΩ„ÄÇ</li>
</ul>
<div class="sourceCode" id="cb1"><pre class="sourceCode python example"><code class="sourceCode python"><a class="sourceLine" id="cb1-1" data-line-number="1"><span class="im">from</span> collections <span class="im">import</span> namedtuple</a>
<a class="sourceLine" id="cb1-2" data-line-number="2">Var <span class="op">=</span> namedtuple(<span class="st">&#39;Var&#39;</span>, [<span class="st">&#39;ss&#39;</span>])</a>
<a class="sourceLine" id="cb1-3" data-line-number="3">Un  <span class="op">=</span> namedtuple(<span class="st">&#39;Un&#39;</span>,  [<span class="st">&#39;x&#39;</span>, <span class="st">&#39;dx&#39;</span>, <span class="st">&#39;ss&#39;</span>])</a>
<a class="sourceLine" id="cb1-4" data-line-number="4">Bin <span class="op">=</span> namedtuple(<span class="st">&#39;Bin&#39;</span>, [<span class="st">&#39;x&#39;</span>, <span class="st">&#39;y&#39;</span>, <span class="st">&#39;dx&#39;</span>, <span class="st">&#39;dy&#39;</span>, <span class="st">&#39;ss&#39;</span>])</a></code></pre></div>
<p>ÈÄôÊ®£Â∞±ÂèØ‰ª•‰∏ãÈù¢ÁöÑÈÄôÊÆµÁ®ãÂºè‰æÜË°®ÈÅî <span class="math inline">\(sin(x) + x \cdot y \bigg\vert_{x = 3, y = 1}\)</span> ÁöÑÈ†ÜÂêëË®àÁÆóÈÅéÁ®ã<span><label for="sn-12" class="margin-toggle sidenote-number"></label><input type="checkbox" id="sn-12" class="margin-toggle"/><span class="sidenote">ÁÇ∫‰∫ÜÁ∞°ÂåñÔºåÊàëÁúÅÂéª‰∫ÜÁï∂‰∏ãË®àÁÆóÁöÑËº∏Âá∫Êï∏ÂÄº<code>v</code>(<span class="math inline">\(f(x)\)</span>)<br />
<br />
</span></span></p>
<p><span><label for="sn-13" class="margin-toggle">&#8853;</label><input type="checkbox" id="sn-13" class="margin-toggle"/><span class="marginnote"> ÈÄôÈÇäÊàëÂ∞èÂ∞èÁöÑ‰ΩúÂºä‰∫Ü‰∏Ä‰∏ãÔºåÁõ¥Êé•‰ΩøÁî® <code>Dict</code> ‰æÜÊñπ‰æøÊõ¥Êñ∞ <code>ss</code> ÁöÑÂÄº„ÄÇ<br />
<br />
</span></span></p>
<p><span><label for="sn-14" class="margin-toggle">&#8853;</label><input type="checkbox" id="sn-14" class="margin-toggle"/><span class="marginnote"> <a href="/images/autodiff-forward-ad.svg"><img src="/images/autodiff-forward-ad.svg" /></a> ÈÄôÂºµÂúñË°®Á§∫È†ÜÂêëË®àÁÆóÊôÇÊâÄÁ¥ØË®àÁöÑÊï∏ÂÄº<br />
<br />
</span></span></p>
<p><span><label for="sn-15" class="margin-toggle">&#8853;</label><input type="checkbox" id="sn-15" class="margin-toggle"/><span class="marginnote"> <a href="/images/autodiff-tape.svg"><img src="/images/autodiff-tape.svg" /></a> ÈÄôÂºµÂúñË°®Á§∫ÁØÄÈªû‰πãÈñìÁöÑÁõ∏‰æùÈóú‰øÇ<br />
<br />
</span></span></p>
<div class="sourceCode" id="cb2"><pre class="sourceCode python example"><code class="sourceCode python"><a class="sourceLine" id="cb2-1" data-line-number="1"><span class="im">from</span> math <span class="im">import</span> <span class="op">*</span></a>
<a class="sourceLine" id="cb2-2" data-line-number="2"><span class="kw">def</span> box(v<span class="op">=</span><span class="dv">0</span>):</a>
<a class="sourceLine" id="cb2-3" data-line-number="3">    <span class="cf">return</span> {<span class="st">&#39;value&#39;</span>: v}</a>
<a class="sourceLine" id="cb2-4" data-line-number="4"></a>
<a class="sourceLine" id="cb2-5" data-line-number="5">x <span class="op">=</span> Var(box())</a>
<a class="sourceLine" id="cb2-6" data-line-number="6">y <span class="op">=</span> Var(box())</a>
<a class="sourceLine" id="cb2-7" data-line-number="7">sin_x <span class="op">=</span> Un(x, cos(<span class="dv">1</span>), box())</a>
<a class="sourceLine" id="cb2-8" data-line-number="8">x_times_y <span class="op">=</span> Bin(x, y, <span class="dv">1</span>, <span class="dv">3</span>, box())</a>
<a class="sourceLine" id="cb2-9" data-line-number="9">Y <span class="op">=</span> Bin(sin_x, x_times_y, <span class="dv">1</span>, <span class="dv">1</span>, box())</a></code></pre></div>
<p>Wengert Tape Â∞±ÊòØÁ¥ÄÈåÑËº∏ÂÖ•ËÆäÊï∏ÂèäÈÄô‰∏ÄÈÄ£Á∫åÁöÑË®àÁÆóÈÅéÁ®ã„ÄÇ</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode python example"><code class="sourceCode python"><a class="sourceLine" id="cb3-1" data-line-number="1">tape <span class="op">=</span> [x, y, sin_x, x_times_y, Y]</a></code></pre></div>
<p>Áï∂Ë®àÁÆó Reverse-Mode ADÊôÇÔºåÊàëÂÄëÊúÉÂ∞á tape ÂèçÈÅé‰æÜÁ¥ØË®àÔºö<span><label for="sn-16" class="margin-toggle">&#8853;</label><input type="checkbox" id="sn-16" class="margin-toggle"/><span class="marginnote"> Ê≥®ÊÑèÂà∞ÈÄôÈÇäÁöÑÂØ¶‰ΩúÂ∑≤Á∂ìÂú®ÂâçÈù¢Âª∫ÊßãÈÄô‰∫õÁØÄÈªûÁöÑÂêåÊôÇÔºåÂ∞áÈ†ÜÂêëË®àÁÆóÁöÑÈÅéÁ®ãÁµ¶ÂµåÈÄ≤Âéª‰∫Ü„ÄÇ<br />
<br />
</span></span></p>
<div class="sourceCode" id="cb4"><pre class="sourceCode python example"><code class="sourceCode python"><a class="sourceLine" id="cb4-1" data-line-number="1">Y.ss[<span class="st">&#39;value&#39;</span>] <span class="op">=</span> <span class="dv">1</span> <span class="co"># Âæû ‚àÇY/‚àÇY = 1 ÈñãÂßã</span></a>
<a class="sourceLine" id="cb4-2" data-line-number="2"><span class="cf">for</span> cell <span class="kw">in</span> <span class="bu">reversed</span>(tape):</a>
<a class="sourceLine" id="cb4-3" data-line-number="3">    <span class="cf">if</span> <span class="bu">isinstance</span>(cell, Bin):</a>
<a class="sourceLine" id="cb4-4" data-line-number="4">        cell.x.ss[<span class="st">&#39;value&#39;</span>] <span class="op">+=</span> cell.ss[<span class="st">&#39;value&#39;</span>] <span class="op">*</span> cell.dx</a>
<a class="sourceLine" id="cb4-5" data-line-number="5">        cell.y.ss[<span class="st">&#39;value&#39;</span>] <span class="op">+=</span> cell.ss[<span class="st">&#39;value&#39;</span>] <span class="op">*</span> cell.dy</a>
<a class="sourceLine" id="cb4-6" data-line-number="6">    <span class="cf">elif</span> <span class="bu">isinstance</span>(cell, Un):</a>
<a class="sourceLine" id="cb4-7" data-line-number="7">        cell.x.ss[<span class="st">&#39;value&#39;</span>] <span class="op">+=</span> cell.ss[<span class="st">&#39;value&#39;</span>] <span class="op">*</span> cell.dx</a></code></pre></div>
<p>Reverse Mode AD Â∞±ÂÉèÈÄôÊ®£Âú®‰∏ÄÂÄã pass Â∞±ËÉΩÁÆóÂá∫ÊâÄÊúâËº∏ÂÖ•ÁöÑÂÅèÂ∞éÊï∏</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode python example"><code class="sourceCode python"><a class="sourceLine" id="cb5-1" data-line-number="1"><span class="op">&gt;&gt;&gt;</span> x.ss[<span class="st">&#39;value&#39;</span>], y.ss[<span class="st">&#39;value&#39;</span>]</a>
<a class="sourceLine" id="cb5-2" data-line-number="2">(<span class="fl">0.010007503399554585</span>, <span class="dv">3</span>)</a></code></pre></div>
<p>Ââ©‰∏ãÁöÑÂ∞±ÊòØÂØ¶‰Ωú‰∏ÄÂÄãÊòìÁî®ÁöÑÁïåÈù¢Áµ¶‰ΩøÁî®ËÄÖ‰∫ÜÔºå‰πüÂ∞±ÊòØÂè™ÈúÄË¶ÅÊåáÂÆöÈ†ÜÂêëË®àÁÆóÁöÑÈÅéÁ®ã„ÄÇ</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode python"><code class="sourceCode python"><a class="sourceLine" id="cb6-1" data-line-number="1"><span class="op">&gt;&gt;&gt;</span> x <span class="op">=</span> var(<span class="dv">3</span>)</a>
<a class="sourceLine" id="cb6-2" data-line-number="2"><span class="op">&gt;&gt;&gt;</span> y <span class="op">=</span> var(<span class="dv">1</span>)</a>
<a class="sourceLine" id="cb6-3" data-line-number="3"><span class="op">&gt;&gt;&gt;</span> Y <span class="op">=</span> sin(x) <span class="op">+</span> x <span class="op">*</span> y</a>
<a class="sourceLine" id="cb6-4" data-line-number="4"><span class="op">&gt;&gt;&gt;</span> Y.value</a>
<a class="sourceLine" id="cb6-5" data-line-number="5"><span class="fl">3.1411200080598674</span></a>
<a class="sourceLine" id="cb6-6" data-line-number="6"><span class="op">&gt;&gt;&gt;</span> Y.tape</a>
<a class="sourceLine" id="cb6-7" data-line-number="7">Tape([<span class="op">&lt;</span>Var <span class="bu">object</span> at <span class="bn">0x7f84dbfed198</span><span class="op">&gt;</span>,</a>
<a class="sourceLine" id="cb6-8" data-line-number="8"> <span class="op">&lt;</span>Unary <span class="bu">object</span> at <span class="bn">0x7f84e6968c50</span><span class="op">&gt;</span>,</a>
<a class="sourceLine" id="cb6-9" data-line-number="9"> <span class="op">&lt;</span>Var <span class="bu">object</span> at <span class="bn">0x7f84e3e567b8</span><span class="op">&gt;</span>,</a>
<a class="sourceLine" id="cb6-10" data-line-number="10"> <span class="op">&lt;</span>Binary <span class="bu">object</span> at <span class="bn">0x7f84e0dff4e0</span><span class="op">&gt;</span>,</a>
<a class="sourceLine" id="cb6-11" data-line-number="11"> <span class="op">&lt;</span>Binary <span class="bu">object</span> at <span class="bn">0x7f84dbfed630</span><span class="op">&gt;</span>])</a>
<a class="sourceLine" id="cb6-12" data-line-number="12"><span class="op">&gt;&gt;&gt;</span> Y.backprop()</a>
<a class="sourceLine" id="cb6-13" data-line-number="13"><span class="op">&gt;&gt;&gt;</span> x.sensitivity</a>
<a class="sourceLine" id="cb6-14" data-line-number="14"><span class="fl">0.010007503399554585</span></a></code></pre></div>
<section id="ÂÖ∂‰ªñËÆäÂåñ" class="level3">
<h3>ÂÖ∂‰ªñËÆäÂåñ</h3>
<ul>
<li>Âè¶Â§ñ‰∏ÄÂÄãÂÅöÊ≥ïÊòØÂ∞áÊâÄÊúâÁØÄÈªûË°®Á§∫Êàê‰∏ÄÂÄãÊúâÂêëÁÑ°Áí∞ÂúñÔºàDAG; Directed Acyclic GraphÔºâÔºåÊé•ËëóÂÅö Topological sort ‰æÜË®àÁÆóÂá∫È†ÜÂêëË∑üÂèçÂêëÁöÑË®àÁÆóÈ†ÜÂ∫è„ÄÇ</li>
<li>ÂèØ‰ª•ÈÅ∏ÊìáÂ∞áË®ò‰ΩèË®àÁÆóÁöÑÂáΩÊï∏ÂèäËº∏ÂÖ•Ëº∏Âá∫ÔºåËÄåÈùûÂÅèÂ∞éÊï∏ÁöÑÊï∏ÂÄº <span><label for="sn-17" class="margin-toggle sidenote-number"></label><input type="checkbox" id="sn-17" class="margin-toggle"/><span class="sidenote">Â¶ÇÊûúÊàëÊ≤íÂºÑÈåØÁöÑË©±Ôºå tensorflow Â∞±ÊòØ‰ª• DAG Ë°®Á§∫ÔºåÁî® DFS ‰æÜÊâæÂá∫Ë®àÁÆóÈ†ÜÂ∫èÔºå‰∏¶Êé°Áî®Âè™ÂÑ≤Â≠òÂáΩÊï∏Êú¨Ë∫´Ë∑üËº∏ÂÖ•Ëº∏Âá∫ÁöÑÂÅöÊ≥ï„ÄÇ<br />
<br />
</span></span>„ÄÇ</li>
<li>ÂèØ‰ª•Âú®ËÆäÊï∏ÁØÄÈªûË®ò‰∏ãÂêçÁ®±ÔºåÊñπ‰æø‰∫ãÂæåËßÄÂØü„ÄÇ</li>
</ul>
</section>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>ÈÄôÁØáÊñáÁ´†‰ªãÁ¥π‰∫Ü Reverse-Mode AD ‰ª•ÂèäÂØ¶‰ΩúÁöÑÊñπÊ≥ïÔºåÂ≠∏ÊúÉÈÄô‰∫õÁ¥∞ÁØÄÈõñÁÑ∂Ê≤íÊúâËÆìÊàëÊõ¥ÊúÉË®ìÁ∑¥È°ûÁ•ûÁ∂ìÁ∂≤Ë∑ØÔºå‰ΩÜ‰πüÊòØÊõ¥‰∫ÜËß£ÈÄô‰∫õÈªëÁõíÂ≠êÂ∫ï‰∏ãÂà∞Â∫ïÂú®ÂÅö‰∫õ‰ªÄÈ∫º„ÄÇ</p>
</section>
<section id="appendix" class="level1">
<h1>Appendix</h1>
<section id="example-softmax-regression" class="level2">
<h2>Example: Softmax Regression</h2>
<p><span><label for="sn-18" class="margin-toggle">&#8853;</label><input type="checkbox" id="sn-18" class="margin-toggle"/><span class="marginnote"> ÊàëÁöÑ„ÄåÁé©ÂÖ∑Áâà„Äç Reverse-Mode AD ÂØ¶‰ΩúÂáΩÊï∏Â∫´ÊîæÂú®<a href="https://gist.github.com/op8867555/59d246a54188fe0d282656fe83e84a65">ÈÄôÈÇä</a>„ÄÇ<br />
<br />
</span></span></p>
<p>ÈÄôÊ¨°‰ª• ML Â∏∏Áî®ÁöÑ iris Ë≥áÊñôÈõÜ‰ΩúÁÇ∫ÁØÑ‰æãÔºåÂª∫Êßã‰∏ÄÂÄã Softmax Regression ‰æÜÂàÜÈ°ûÈÄô‰∫õËä±Êúµ„ÄÇ</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode python example"><code class="sourceCode python"><a class="sourceLine" id="cb7-1" data-line-number="1"><span class="im">from</span> reverse_ad <span class="im">import</span> <span class="op">*</span></a>
<a class="sourceLine" id="cb7-2" data-line-number="2"><span class="im">from</span> sklearn.datasets <span class="im">import</span> load_iris</a>
<a class="sourceLine" id="cb7-3" data-line-number="3"><span class="im">from</span> sklearn.model_selection <span class="im">import</span> train_test_split</a>
<a class="sourceLine" id="cb7-4" data-line-number="4"></a>
<a class="sourceLine" id="cb7-5" data-line-number="5">iris <span class="op">=</span> load_iris()</a>
<a class="sourceLine" id="cb7-6" data-line-number="6">X <span class="op">=</span> iris[<span class="st">&#39;data&#39;</span>]</a>
<a class="sourceLine" id="cb7-7" data-line-number="7">Y <span class="op">=</span> iris[<span class="st">&#39;target&#39;</span>]</a>
<a class="sourceLine" id="cb7-8" data-line-number="8">X_train, X_test, Y_train, Y_test <span class="op">=</span> train_test_split(X, Y)</a></code></pre></div>
<p>ÈÄôÈÇä‰ΩøÁî® Softmax Regression ÂÅöÂàÜÈ°ûÔºåÁî® Cross Entropy ÂÅöÁÇ∫ loss function„ÄÇ<span><label for="sn-19" class="margin-toggle">&#8853;</label><input type="checkbox" id="sn-19" class="margin-toggle"/><span class="marginnote"> <span class="math display">\[\begin{gathered}
  Softmax(X_i) = \frac{exp(X_i)}{\sum_k exp(X_i)} \\
  f(X; W, B) = Softmax(W \times X + B) \\
  Cost(Y, \hat Y) = \frac{-1}{|Y|}\sum_{y} \sum_{k} y_k \log(\hat{y}_k)
  \end{gathered}\]</span><br />
<br />
</span></span></p>
<div class="sourceCode" id="cb8"><pre class="sourceCode python example"><code class="sourceCode python"><a class="sourceLine" id="cb8-1" data-line-number="1"><span class="kw">def</span> softmax(z):</a>
<a class="sourceLine" id="cb8-2" data-line-number="2">    z_exp <span class="op">=</span> [exp(i) <span class="cf">for</span> i <span class="kw">in</span> z]</a>
<a class="sourceLine" id="cb8-3" data-line-number="3">    sum_z_exp <span class="op">=</span> <span class="bu">sum</span>(z_exp)</a>
<a class="sourceLine" id="cb8-4" data-line-number="4">    <span class="cf">return</span> [i <span class="op">/</span> sum_z_exp <span class="cf">for</span> i <span class="kw">in</span> z_exp]</a>
<a class="sourceLine" id="cb8-5" data-line-number="5"></a>
<a class="sourceLine" id="cb8-6" data-line-number="6"><span class="kw">def</span> reg(xs, w, b):</a>
<a class="sourceLine" id="cb8-7" data-line-number="7">    <span class="cf">return</span> softmax([<span class="bu">sum</span>(w[i][j] <span class="op">*</span> x <span class="cf">for</span> j, x <span class="kw">in</span> <span class="bu">enumerate</span>(xs)) <span class="op">+</span> b[i]</a>
<a class="sourceLine" id="cb8-8" data-line-number="8">                    <span class="cf">for</span> i <span class="kw">in</span> <span class="bu">range</span>(<span class="dv">3</span>)])</a>
<a class="sourceLine" id="cb8-9" data-line-number="9"></a>
<a class="sourceLine" id="cb8-10" data-line-number="10"><span class="kw">def</span> categorical_cross_entropy(Y, Y_):</a>
<a class="sourceLine" id="cb8-11" data-line-number="11">    loss <span class="op">=</span> <span class="bu">sum</span>(<span class="bu">sum</span>(k <span class="op">*</span> log(k_) <span class="cf">for</span> k, k_ <span class="kw">in</span> <span class="bu">zip</span>(y, y_)) <span class="cf">for</span> y, y_ <span class="kw">in</span> <span class="bu">zip</span>(Y, Y_))</a>
<a class="sourceLine" id="cb8-12" data-line-number="12">    <span class="cf">return</span> <span class="dv">-1</span> <span class="op">*</span> loss <span class="op">/</span> <span class="bu">len</span> (Y_)</a></code></pre></div>
<p>Áî® Gradient Descent ‰æÜÊâæÂà∞Êõ¥Â•ΩÁöÑ <span class="math inline">\(W\)</span> Ë∑ü <span class="math inline">\(B\)</span></p>
<p><span><label for="sn-20" class="margin-toggle">&#8853;</label><input type="checkbox" id="sn-20" class="margin-toggle"/><span class="marginnote"> ÈÄôÈÇäÈúÄË¶ÅÂÖàÂ∞çÊ®ôÁ±§ÂÅö one-hot encoding ÊâçÊúÉÊúâË∑üÂÖ¨ÂºèËº∏Âá∫‰∏ÄËá¥ÁöÑÁ∂≠Â∫¶„ÄÇ<br />
<br />
</span></span></p>
<div class="sourceCode" id="cb9"><pre class="sourceCode python example"><code class="sourceCode python"><a class="sourceLine" id="cb9-1" data-line-number="1"><span class="im">from</span> sklearn.metrics <span class="im">import</span> accuracy_score</a>
<a class="sourceLine" id="cb9-2" data-line-number="2">Y_encoded <span class="op">=</span> OneHotEncoder().fit_transform(Y_train.reshape(<span class="op">-</span><span class="dv">1</span>, <span class="dv">1</span>)).todense().tolist()</a>
<a class="sourceLine" id="cb9-3" data-line-number="3">w <span class="op">=</span> [[var(<span class="dv">0</span>) <span class="cf">for</span> _ <span class="kw">in</span> <span class="bu">range</span>(<span class="dv">4</span>)] <span class="cf">for</span> _ <span class="kw">in</span> <span class="bu">range</span>(<span class="dv">3</span>)]</a>
<a class="sourceLine" id="cb9-4" data-line-number="4">b <span class="op">=</span> [var(<span class="dv">0</span>) <span class="cf">for</span> _ <span class="kw">in</span> <span class="bu">range</span>(<span class="dv">3</span>)]</a>
<a class="sourceLine" id="cb9-5" data-line-number="5">lr <span class="op">=</span> <span class="fl">0.1</span></a></code></pre></div>
<p><span><label for="sn-21" class="margin-toggle">&#8853;</label><input type="checkbox" id="sn-21" class="margin-toggle"/><span class="marginnote"> ‰ΩøÁî® Reverse Mode AD Â∞±‰∏çÂÜçÈúÄË¶ÅÊØè‰∏ÄÂÄãÂèÉÊï∏ÈÉΩÂÜçË®àÁÆó‰∏ÄÊ¨°„ÄÇ<br />
<br />
</span></span></p>
<div class="sourceCode" id="cb10"><pre class="sourceCode python example"><code class="sourceCode python"><a class="sourceLine" id="cb10-1" data-line-number="1"><span class="cf">for</span> epoch <span class="kw">in</span> <span class="bu">range</span>(<span class="dv">1000</span>):</a>
<a class="sourceLine" id="cb10-2" data-line-number="2">    Y_predicted <span class="op">=</span> [reg(x, w<span class="op">=</span>w, b<span class="op">=</span>b) <span class="cf">for</span> x <span class="kw">in</span> X_train]</a>
<a class="sourceLine" id="cb10-3" data-line-number="3">    loss <span class="op">=</span> categorical_cross_entropy(Y_encoded, Y_predicted)</a>
<a class="sourceLine" id="cb10-4" data-line-number="4">    loss.backprop()</a>
<a class="sourceLine" id="cb10-5" data-line-number="5">    <span class="cf">for</span> i <span class="kw">in</span> <span class="bu">range</span>(<span class="dv">3</span>):</a>
<a class="sourceLine" id="cb10-6" data-line-number="6">        b[i] <span class="op">-=</span> lr <span class="op">*</span> b[i].sensitivity</a>
<a class="sourceLine" id="cb10-7" data-line-number="7">        <span class="cf">for</span> j <span class="kw">in</span> <span class="bu">range</span>(<span class="dv">4</span>):</a>
<a class="sourceLine" id="cb10-8" data-line-number="8">            w[i][j] <span class="op">-=</span> lr <span class="op">*</span> w[i][j].sensitivity</a>
<a class="sourceLine" id="cb10-9" data-line-number="9">    <span class="cf">if</span> epoch <span class="op">%</span> <span class="dv">10</span> <span class="op">==</span> <span class="dv">0</span>:</a>
<a class="sourceLine" id="cb10-10" data-line-number="10">        accuracy <span class="op">=</span> accuracy_score(Y_test, [tolabel(reg(x, w<span class="op">=</span>w, b<span class="op">=</span>b)) <span class="cf">for</span> x <span class="kw">in</span> X_test])</a>
<a class="sourceLine" id="cb10-11" data-line-number="11">        <span class="bu">print</span>(<span class="ss">f&#39;</span><span class="sc">{</span>epoch<span class="sc">: 5d}</span><span class="ss"> loss </span><span class="sc">{</span>loss<span class="sc">.</span>value<span class="sc">}</span><span class="ss"> acc </span><span class="sc">{</span>accuracy<span class="sc">}</span><span class="ss">&#39;</span>)</a></code></pre></div>
<p>Ë∑ëËµ∑‰æÜÊàêÊûúÂÉèÊòØÈÄôÊ®£Ôºö</p>
<pre><code>    0 loss 1.098612288668108   acc 0.34210526315789475
   10 loss 0.84323472659183    acc 0.6578947368421053
   20 loss 0.716723873894274   acc 0.6578947368421053
   30 loss 0.6493242141034026  acc 0.6578947368421053
   40 loss 0.6030807982006535  acc 0.6578947368421053
   50 loss 0.5661515656844388  acc 0.6578947368421053
   60 loss 0.5340659822896819  acc 0.6578947368421053
   70 loss 0.5047568856139167  acc 0.6578947368421053
   80 loss 0.4771475569375817  acc 0.6578947368421053
   90 loss 0.45064476873213055 acc 0.6578947368421053
  100 loss 0.42493012219412674 acc 0.6578947368421053
  110 loss 0.39987107522910936 acc 0.7105263157894737
  120 loss 0.37549205547113373 acc 0.7105263157894737
  130 loss 0.3519881981460512  acc 0.7368421052631579
  140 loss 0.3297816399879364  acc 0.7631578947368421
  150 loss 0.30960905639139913 acc 0.868421052631579
  160 loss 0.2925264903210591  acc 0.9210526315789473</code></pre>
<!--

example :: Diagram B
example = nodes # applyAll [connectOutside a b | (a, b) <- names]
                # padX 1.2 # padY 1.1
                # centerXY
    where names = concat [ zip inputsNames weightsNames
                         , zip weightsNames (repeat "sum")
                         , [("sum", "act"), ("act", "out")]
                         ]

nodes = foldl1 (|||)  [ vsep 1 inputs # centerY
                      , strutX 3
                      , vsep 1 weights # centerY
                      , strutX 3
                      , sum_ # centerY
                      , strutX 1.5
                      , text "a" # translateY 0.5
                      , strutX 1.5
                      , act # centerY
                      , strutX 1
                      , out
                      ]
withText = replicate 5 (text "√ó" # translateY 0.5)

inputsNames = map (("input_"++) . show) [1..5]
weightsNames = map (("weight_"++) . show) [1..5]
inputs  = (\x -> mconcat [ text "z‚ÅΩÀ°‚Åª¬π‚Åæ"
                         , circle 1.25 # named x
                         , text "√ó" # translate (r2 (3, 0.5))
                         ]) <$> inputsNames
weights = map (\x -> text "w" <> circle 1.25 # named x) weightsNames
sum_    = text "Œ£" <> circle 1.25 # named "sum"
act     = text "f" <> circle 1.25 # named "act"
out     = text "z‚ÅΩÀ°‚Åæ"
-->
</section>
</section>]]></description>
    <pubDate>Sun, 28 Jan 2018 00:00:00 UT</pubDate>
    <guid>https://op8867555.github.io/posts/2018-01-11-autodiff-reverse-mode.html</guid>
    <dc:creator>Alex Lu</dc:creator>
</item>
<item>
    <title>Ê©üÂô®Â¶Ç‰ΩïË®àÁÆóÂæÆÂàÜ/ÂÅèÂæÆÂàÜÔºà‰∏äÔºâ</title>
    <link>https://op8867555.github.io/posts/2017-12-17-autodiff.html</link>
    <description><![CDATA[<section>
<p>ÊèêÂà∞ËøëÂπ¥‰æÜÁÜ±ÈñÄÁöÑÈ°ûÁ•ûÁ∂ìÁ∂≤Ë∑ØÊ®°ÂûãÔºåÂèçÂÇ≥Â∞é(back propagation)ÊòØ‰∏ÄÂÄãÁõ∏Áï∂ÈáçË¶ÅÁöÑÈÅéÁ®ãÔºåÂÖ∂‰∏≠ÊáâÁî®ÁöÑÂ∞±ÊòØË®àÁÆóÊ¢ØÂ∫¶ÔºàgradientÔºåÂ∞±ÊòØÊØèÂÄãÂèÉÊï∏ÁöÑÂÅèÂæÆÂàÜÔºâ‰øÆÊ≠£Á•ûÁ∂ìÂèÉÊï∏‰æÜÈÅîÂà∞„ÄåÂ≠∏Áøí„ÄçÁöÑÊïàÊûúÔºåÈ°ûÁ•ûÁ∂ìÁ∂≤Ë∑ØÁöÑÁµêÊßãË∂ä‰æÜË∂äË§áÈõúÔºå‰ΩøÂæó‰∫∫Â∑•Êé®Â∞éÊ¢ØÂ∫¶ÂÖ¨ÂºèË∂ä‰æÜË∂ä‰∏çÂèØË°åÔºåÂ¶Ç‰ΩïÊáâÁî®ÈõªËÖ¶Ë®àÁÆóÂæÆÂàÜËÆäÊàê‰∫Ü‰∏ÄÂÄãÈáçË¶ÅÁöÑÂïèÈ°å„ÄÇ</p>
</section>
<div class="fullwidth">
<figure>
<img src="https://i.imgur.com/R5QzZY4.png" alt="ÈÄôÂºµÂúñÁ∞°ÂñÆÂú∞Ëß£Èáã‰∫ÜË®àÁÆóÂæÆÂàÜÁöÑÂπæÁ®Æ‰ΩúÊ≥ï„ÄÇÊëòËá™‚ÄúAutomatic Differentiation of Algorithms for Machine Learning‚Äù" /><figcaption>ÈÄôÂºµÂúñÁ∞°ÂñÆÂú∞Ëß£Èáã‰∫ÜË®àÁÆóÂæÆÂàÜÁöÑÂπæÁ®Æ‰ΩúÊ≥ï„ÄÇÊëòËá™‚ÄúAutomatic Differentiation of Algorithms for Machine Learning‚Äù</figcaption>
</figure>
</div>
<section id="numerical-differential" class="level1">
<h1>Numerical Differential</h1>
<p><span><label for="sn-1" class="margin-toggle">&#8853;</label><input type="checkbox" id="sn-1" class="margin-toggle"/><span class="marginnote"> <img src="https://upload.wikimedia.org/wikipedia/commons/1/18/Derivative.svg" /> Êï∏ÂÄºÂæÆÂàÜÔºå By Olivier Cleynen (Own work) [CC0], via Wikimedia Commons<br />
<br />
</span></span></p>
<p>Êï∏ÂÄºÂæÆÂàÜÂ∞±ÊòØÁî® <span class="math inline">\(\frac{f(x + h) - f(x)}{h}\)</span> Ë∑ü‰∏ÄÂÄãÂæàÂ∞èÁöÑ <span class="math inline">\(h\)</span> ‰æÜ<strong>Ëøë‰ºº</strong> <span class="math inline">\(\lim_{h \rightarrow 0}\frac{f(x + h) - f(x)}{h}\)</span>ÔºåÂØ¶‰Ωú‰∏ä‰πüÂè™ÊòØË®àÁÆóÁî®‰∏çÂêåÁöÑÂèÉÊï∏‰æÜË®àÁÆóÂáΩÊï∏ <span class="math inline">\(f\)</span> ÁöÑÂ∑ÆÁï∞Ôºå‰ΩÜÊòØ <span class="math inline">\(f\)</span> ÁöÑË®àÁÆóÊàêÊú¨ÂèØËÉΩ‰∏ç‰ΩéÔºåËÄå‰∏îÂæàÂÆπÊòìÈÅáÂà∞ÊµÆÈªûÊï∏Ë®àÁÆóÁöÑ round-off error Ë∑ü truncating errorÔºåÊâÄ‰ª•ÂØ¶Âãô‰∏ä‰∏¶‰∏çÂØ¶Áî®„ÄÇ</p>
<section id="ÂØ¶‰Ωú" class="level2">
<h2>ÂØ¶‰Ωú</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode python"><code class="sourceCode python"><a class="sourceLine" id="cb1-1" data-line-number="1"><span class="im">from</span> math <span class="im">import</span> <span class="op">*</span></a>
<a class="sourceLine" id="cb1-2" data-line-number="2"><span class="kw">def</span> diff(f, x, epilson<span class="op">=</span><span class="fl">0.00001</span>):</a>
<a class="sourceLine" id="cb1-3" data-line-number="3">    <span class="cf">return</span> (f(x<span class="op">+</span>epilson) <span class="op">-</span> f(x))<span class="op">/</span>epilson</a>
<a class="sourceLine" id="cb1-4" data-line-number="4"></a>
<a class="sourceLine" id="cb1-5" data-line-number="5">diff(sin, pi) <span class="co"># -0.9999999999898844</span></a>
<a class="sourceLine" id="cb1-6" data-line-number="6"></a>
<a class="sourceLine" id="cb1-7" data-line-number="7"><span class="kw">def</span> f(x, y):</a>
<a class="sourceLine" id="cb1-8" data-line-number="8">    <span class="cf">return</span> sin(x) <span class="op">+</span> x <span class="op">*</span> y</a>
<a class="sourceLine" id="cb1-9" data-line-number="9"></a>
<a class="sourceLine" id="cb1-10" data-line-number="10"><span class="co"># Ë®àÁÆóÂÅèÂæÆÂàÜÂ∞±ÊòØÊää‰∏çÈóúÂøÉÁöÑÂèÉÊï∏Ë¶ñÁÇ∫Â∏∏Êï∏</span></a>
<a class="sourceLine" id="cb1-11" data-line-number="11"><span class="im">from</span> functools <span class="im">import</span> partial</a>
<a class="sourceLine" id="cb1-12" data-line-number="12">diff(partial(f, y<span class="op">=</span><span class="dv">2</span>), <span class="dv">3</span>) <span class="co"># 1.0100067978413563 (df(2,3)dx)</span></a></code></pre></div>
</section>
</section>
<section id="symbolic-differential" class="level1">
<h1>Symbolic Differential</h1>
<p>Á¨¶ËôüÂæÆÂàÜÊòØÁ¨¶ËôüË®àÁÆó (Symbolic Computing) ÁöÑ‰∏ÄÂÄãÁ∂ìÂÖ∏‰æãÂ≠êÔºö‰∏çÂéªË®àÁÆóÊï∏ÂÄºÔºåËÄåÊòØ <em>Ë∑ü‰∫∫È°û‰∏ÄÊ®£</em> Áõ¥Êé•ËôïÁêÜÈÄô‰∫õÁ¨¶Ëôü„ÄÇ<span><label for="sn-2" class="margin-toggle">&#8853;</label><input type="checkbox" id="sn-2" class="margin-toggle"/><span class="marginnote"> ÊàëÊúÄÊó©ÊòØÂú® SICP ‰∏ÄÊõ∏ÁúãË¶ãÈÄôÂÄã‰ΩúÊ≥ïÔºåÂèØ‰ª•ÂøçÂèóÂæàÂ§öÊã¨ËôüÁöÑËÆÄËÄÖÂèØ‰ª•ÂéªÁúã‰∏Ä‰∏ã <a href="https://mitpress.mit.edu/sicp/full-text/book/book-Z-H-16.html#%_sec_2.3.2">¬ß2.3.2</a> ÁöÑ‰ªãÁ¥π„ÄÇ<br />
<br />
</span></span> Âú®‰øÆÁøíÂæÆÁ©çÂàÜË™≤Á®ãÊôÇÔºå‰∏ÄÂÆöÊúÉÊèêÂà∞Â¶Ç‰ΩïÂà©Áî® <a href="https://en.wikipedia.org/wiki/Differentiation_rules">Differentiation rules</a> ‰æÜÊ±ÇÂá∫Â∞éÊï∏ÔºåÂÉèÊòØ:</p>
<ul>
<li><span class="math inline">\((a \cdot f)&#39; = af&#39;\)</span></li>
<li><span class="math inline">\((f + g)&#39; = f&#39; + g&#39;\)</span></li>
<li><span class="math inline">\((f(x) \cdot g(x))&#39; = f&#39;(x)g(x) + f(x)g&#39;(x)\)</span></li>
<li><span class="math inline">\((f(g(x)))&#39; = f&#39;(g(x)) g&#39;(x)\)</span></li>
</ul>
<p>ËÄå Symbolic Differential Â∞±ÊòØÊé°Áî®Ë∑ü‰∫∫È°û‰∏ÄÊ®£ÁöÑÊñπÊ≥ïÔºåÂ∞çËëó expression tree ‰∏çÊñ∑ÁöÑÂÅö pattern matching Ë∑ü rewrite„ÄÇÈÄôÂÄãÊñπÊ≥ïÂæàÂ•ΩÂØ¶‰ΩúÔºåÂè™ÈúÄË¶ÅÁÖßËëó Differential rules ÊîπÂØ´‰æøÊòØÔºåËÄå‰∏îÂèØ‰ª•ÂæóÂà∞<strong>ÁúüÊ≠£ÁöÑ</strong><span><label for="sn-3" class="margin-toggle sidenote-number"></label><input type="checkbox" id="sn-3" class="margin-toggle"/><span class="sidenote">Exact DerivativeÔºå‰πüÂ∞±ÊòØË∑üÊâãÂãïÊé®Â∞éÁöÑÁµêÊûú‰∏ÄËá¥ÔºåNumerical Differential Âõ†ÁÇ∫ÊµÆÈªûÊï∏ÁöÑÁâπÊÄßÔºåÊúÉÁî¢ÁîüË™§Â∑ÆËÄåÁÑ°Ê≥ïÁÆóÂá∫ÁúüÊ≠£ÁöÑÂ∞éÊï∏/ÂÅèÂ∞éÊï∏<br />
<br />
</span></span>Â∞éÊï∏/ÂÅèÂ∞éÊï∏„ÄÇ</p>
<p>‰ΩÜÊòØÈÄôÂÄãÊñπÊ≥ïÊúÄÂ§ßÁöÑÂïèÈ°åÊòØÂú®ÊîπÂØ´ÁöÑÈÅéÁ®ã‰∏≠ÔºåÊúÉÂá∫ÁèæÂæàÂ§öÂÜóÊñºÁöÑÂºèÂ≠êÔºö <span class="math inline">\(x \times 1\)</span>, <span class="math inline">\(x + 0\)</span> ‰πãÈ°ûÁöÑÔºåÂõ†Ê≠§ÂæàÂÆπÊòìÁî¢ÁîüÂá∫Â∑®Â§ßÁöÑÔºàÊ≤íÊïàÁéáÔºâÁöÑÁµêÊûú„ÄÇ<span><label for="sn-4" class="margin-toggle sidenote-number"></label><input type="checkbox" id="sn-4" class="margin-toggle"/><span class="sidenote">‚ÄúAutomatic Differentiation in Machine Learning: a Survey‚Äù ‰∏ÄÊñá‰∏≠Ëàâ‰æãÂà∞Ôºö <span class="math display">\[f(x) = 64x(1 - x)(1 - 2x)^2(1 - 8x + 8x^2)^2\]</span> Âú®Ê≤íÊúâÂåñÁ∞°ÁöÑÊÉÖÊ≥ÅÂÅöÁ¨¶ËôüÂæÆÂàÜÊúÉÂæóÂà∞ <span class="math display">\[\begin{gathered}
  128x(1 - x)(-8 + 16x)(1 - 2x)^2(1 - 8x+8x^2) \\
  + 64(1-x)(1-2x)^2 (1-8x+ 8x^2)^2\\
  - 64x(1-2x)^2 (1-8x+8x^2)^2 \\
  - 256x(1 - x)(1 - 2x)(1 - 8x + 8x^2)^2
  \end{gathered} \]</span> ÈÄôÊ¢ùÂæàË§áÈõúÁöÑÂºèÂ≠êÔºå‰ΩÜÊòØÁ∂ìÈÅéÂåñÁ∞°ÂâáÂè™Ââ©‰∏ã <span class="math display">\[\begin{gathered}
  64(1 - 42x + 504x^2 - 2640x^3  \\
  + 7040x^4 -9984x^5 + 7168x^6 -2048x^7)
  \end{gathered}\]</span>ÔºåËÄåÈö®ËëóÂéüÂºè<span class="math inline">\(f\)</span>ÁöÑË§áÈõúÂ∫¶‰∏äÂçáÔºåÊ≤íÂÅöÂ•ΩÁ∞°ÂåñÁöÑÁ¨¶ËôüÂæÆÂàÜÊúÉËÜ®ËÑπÈùûÂ∏∏Âø´„ÄÇ<br />
<br />
</span></span></p>
<p>‰ª• Python ‰æÜË™™ÔºåSymPy Â∞±ÂØ¶‰Ωú‰∫ÜÁ¨¶ËôüÁ©çÂàÜÔºåÂèØ‰ª•ÁúãÂà∞ <code>diff</code> ÊúÉÁî¢Âá∫‰∏ÄÂÄãÊñ∞ÁöÑÈÅãÁÆóÂºè„ÄÇ</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode python"><code class="sourceCode python"><a class="sourceLine" id="cb2-1" data-line-number="1"><span class="im">from</span> sympy <span class="im">import</span> <span class="op">*</span></a>
<a class="sourceLine" id="cb2-2" data-line-number="2">x <span class="op">=</span> var(<span class="st">&#39;x&#39;</span>)</a>
<a class="sourceLine" id="cb2-3" data-line-number="3">expr <span class="op">=</span> diff(sin(x)) <span class="co"># cos(x)</span></a>
<a class="sourceLine" id="cb2-4" data-line-number="4">expr.evalf(subs<span class="op">=</span>{<span class="st">&#39;x&#39;</span>: pi}) <span class="co"># -1.000000000000</span></a>
<a class="sourceLine" id="cb2-5" data-line-number="5"></a>
<a class="sourceLine" id="cb2-6" data-line-number="6">expr2 <span class="op">=</span> diff(sin(x)<span class="op">+</span> x <span class="op">*</span> y, x)</a>
<a class="sourceLine" id="cb2-7" data-line-number="7">expr2.evalf(subs<span class="op">=</span>{<span class="st">&#39;x&#39;</span>: <span class="dv">3</span>, <span class="st">&#39;y&#39;</span>: <span class="dv">2</span>}) <span class="co"># 1.0100075033995546</span></a></code></pre></div>
<!--

Â∑¶ÂúñÁÇ∫$f(x, y) = sin(x) + x*y$ÁöÑÁ§∫ÊÑèÂúñÔºåÂè≥ÂúñÁÇ∫‰ª•Á¨¶ËôüË®àÁÆó$\frac{df}{dx}$ÁöÑÁ§∫ÊÑèÂúñÔºö


~~~~
        f(x, y)    |         dfdx
          +-+      |         +-+
          |+|      |         |+|
          +-+      |         +-+
         /  \      |        /  \
        /    \     |       /    \
    +---+     +-+  |   +---+     +-+
    |sin|     |√ó|  |   |cos|     |0|
    +---+     +-+  |   +---+     +-+
      |       /|   |     |
      | _____/ |   |     |
      |/       |   |     |
     +-+      +-+  |    +-+
     |x|      |y|  |    |x|
     +-+      +-+  |    +-+
~~~~~
-->
</section>
<section id="forward-mode-automatic-differential" class="level1">
<h1>Forward-Mode Automatic Differential</h1>
<p>Ëá™ÂãïÂæÆÂàÜÔºàADÔºâÁöÑÂêçÁ®±ÂèñÂæóÂæàÂÆπÊòìËÆì‰∫∫Ë™§Ëß£ÔºåÂÖ∂ÂØ¶Â∞±ÊòØÊáâÁî® chain rule Ë∑ü‰∏Ä‰∫õË™ûË®ÄÁâπÊÄßÊàñÊòØÂéüÂßãÁ¢ºËΩâÊèõÂ∑•ÂÖ∑Ôºå‰æÜÈÅîÊàê‰∏çÁî®ÊâãÂØ´Â∞éÊï∏ÁöÑÁ®ãÂºèÔºåËÄåÂèØ‰ª•Âú®Ë®àÁÆóÂáΩÊï∏ÁöÑÂêåÊôÇÔºà‰πüÂ∞±ÊòØ overhead ‰∏çÂ§ßÔºâÂæóÂá∫<strong>ÁúüÊ≠£ÁöÑ</strong>Â∞éÊï∏/ÂÅèÂ∞éÊï∏„ÄÇ</p>
<p>Ëá™ÂãïÂæÆÂàÜÊ†πÊìöË®àÁÆóÁöÑÈ†ÜÂ∫èÔºåÂèØ‰ª•ÂàÜÁÇ∫ Forward Mode Ë∑ü Reverse ModeÔºåÈÄôÊ¨°ÂÖà‰ªãÁ¥πÊØîËºÉÁ∞°ÂñÆÁöÑ Forward Mode„ÄÇ</p>
<p><span><label for="sn-5" class="margin-toggle">&#8853;</label><input type="checkbox" id="sn-5" class="margin-toggle"/><span class="marginnote"> Forward Mode AD Â∞á‰∏ÄÂÄãÂáΩÊï∏ <span class="math inline">\(y = f(... , x, ...) = (w_m \circ w_{m-1} ... \circ w_1)(..., x, ...)\)</span> Â∞ç <span class="math inline">\(x\)</span> ÁöÑÂæÆÂàÜÔºåÊãÜËß£Êàê <span class="math display">\[
  \begin{aligned}
  \frac {\partial y}{\partial x} =&amp;\frac {\partial y}{\partial w_{m-1}}{\frac {\partial w_{m-1}}{\partial x}} \\
  =&amp;\frac {\partial y}{\partial w_{m-1}}\left({\frac {\partial w_{m-1}}{\partial w_{m-2}}}{\frac {\partial w_{m-2}}{\partial x}}\right) \\
  =&amp;\frac {\partial y}{\partial w_{m-1}}\left({\frac {\partial w_{m-1}}{\partial w_{m-2}}}\left({\frac {\partial w_{m-2}}{\partial w_{m-3}}}{\frac {\partial w_{m-3}}{\partial x}}\right)\right) \\
  =&amp;{\frac {\partial y}{\partial w_{m-1}}} \left( \frac {\partial w_{m-1}}{\partial w_{m-2}} \cdots
  \left(\frac {\partial w_{2}}{\partial w_{1}}  \frac {\partial w_{1}}{\partial x} \right)\right)\\
  \end{aligned}
  \]</span> ÁÑ∂ÂæåÂæû <span class="math inline">\(\frac{\partial x}{\partial x} = 1\)</span> ÈñãÂßãÔºå Áî± <span class="math inline">\(\frac{\partial w_1}{\partial x}\)</span> ÈñãÂßãË®àÁÆóÂà∞ <span class="math inline">\(\frac{\partial w_m}{x}\)</span>ÔºàÁî±ÂÖßËÄåÂ§ñÔºâ„ÄÇ<br />
<br />
</span></span></p>
<p>ÈÄôÈÇäÁπºÁ∫å‰ΩøÁî®‰∏äÈù¢ÁöÑ <span class="math inline">\(Y = f(x, y) = sin(x) + x √ó y\)</span> ÁöÑ‰æãÂ≠êÔºå</p>
<p>ÊàëÂÄëÂèØ‰ª•Êää <span class="math inline">\(Y\)</span> ÊãÜËß£Êàê‰∏ãÂúñÔºàÂ∑¶Ôºâ</p>
<p><span class="math display">\[
\begin{array}{rl|rl}
  Y &amp; =  w_5       &amp; \dot{Y} &amp; = \dot{w_5} \\
w_5 &amp; =  w_3 + w_4 &amp; \dot{w_5} &amp; = \dot{w_3} + \dot{w_4} \\
w_4 &amp; =  w_1 √ó w_2 &amp; \dot{w_4} &amp; = w_2 √ó \dot{w_1} + w_1 √ó \dot{w_2}\\
w_3 &amp; =  sin(w_1)  &amp; \dot{w_3} &amp; = cos(w_1) \\
w_2 &amp; =  y         &amp; \dot{w_2} &amp; = 0\\
w_1 &amp; =  x         &amp; \dot{w_1} &amp; = 1\\
\end{array}
\]</span></p>
<p>ÁÑ∂ÂæåÊàëÂÄëÂ∞±ÂèØ‰ª•Âæû <span class="math inline">\(\frac{\partial x}{\partial x} = 1, \frac{\partial y}{\partial x} = 0\)</span> ÈñãÂßãÔºåÊ±ÇÂá∫ <span class="math inline">\(\frac{\partial w_i}{\partial x} \big \vert_{i = 1 \cdots 5}\)</span>ÔºåÊúÄÂæåÊ±ÇÂá∫<span class="math inline">\(\frac{\partial Y}{\partial x}\)</span> ÔºàÂ¶Ç‰∏äÂúñÔºàÂè≥ÔºâÔºåÈÄôÈÇäÁî® <span class="math inline">\(\dot{X}\)</span> ‰æÜË°®Á§∫ <span class="math inline">\(\frac{\partial X}{\partial x}\)</span>Ôºâ„ÄÇ</p>
<p>ÂæûË®àÁÆóÈ†ÜÂ∫è‰∏äÔºåForward-Mode AD Ë∑üÂéüÂÖàÂáΩÊï∏ÊòØ‰∏ÄÊ®£ÁöÑÔºåÊâÄ‰ª•Ë¢´Á®±ÁÇ∫ Forward Mode„ÄÇ</p>
<section id="ÂØ¶‰Ωú-1" class="level2">
<h2>ÂØ¶‰Ωú</h2>
<p>‰∏ÄÂÄãÂ∏∏Ë¶ãÁöÑÂØ¶‰ΩúÊñπÊ≥ïÊòØÂÆöÁæ©‰∏ÄÂÄãÊñ∞ÁöÑË≥áÊñôÁµêÊßã Dual NumberÔºåË∑üÂà©Áî® operator overloading ‰æÜÂØ¶‰ΩúÂÖ∂ÁÆóË°ìÁ≥ªÁµ±„ÄÇ‰∏ãÈù¢‰ΩøÁî® Python Ëàâ‰æã<span><label for="sn-6" class="margin-toggle sidenote-number"></label><input type="checkbox" id="sn-6" class="margin-toggle"/><span class="sidenote">ËºÉÂÆåÊï¥ÁöÑ Dual Number ÂÆöÁæ©ÂèØ‰ª•Âú® <a href="https://en.wikipedia.org/wiki/Automatic_differentiation#Automatic_differentiation_using_dual_numbers">Wikipedia</a> ÊâæÂà∞„ÄÇÂ¶ÇÂêåÊñá‰∏≠ÂØ´Âà∞ÔºåÊàëÂÄëÂèØ‰ª•‰ΩøÁî® <span class="math inline">\(g(\langle u,u&#39; \rangle , \langle v,v&#39; \rangle )  = \langle g(u,v) , g_u(u,v) u&#39; + g_v(u,v) v&#39; \rangle\)</span> ‰æÜÂÆöÁæ©ÈÄô‰∫õ primitive functions(<span class="math inline">\(sin, cos, \cdots\)</span>)„ÄÇ<br />
<br />
</span></span><span><label for="sn-7" class="margin-toggle sidenote-number"></label><input type="checkbox" id="sn-7" class="margin-toggle"/><span class="sidenote">ÁÇ∫‰∫ÜÂèØ‰ª•ÂØ´Âá∫ÂÉèÊòØ <code class="sourceCode python"><span class="dv">4</span> <span class="op">*</span> Dual(<span class="dv">1</span>, <span class="dv">1</span>)</code> ÈÄôÊ®£Ê∑∑ÂêàËëó <code>float</code> Ë∑ü <code>Dual</code> ÁöÑÁ®ãÂºèÔºåÂèØ‰ª•ÂèÉËÄÉ <a href="https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types">Python Reference ¬ß3.3.7</a> ‰ΩøÁî® <code>__radd__</code> Á≥ªÂàóÁöÑ method ‰æÜÂØ¶‰Ωú„ÄÇ<br />
<br />
</span></span>Ôºö</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode python"><code class="sourceCode python"><a class="sourceLine" id="cb3-1" data-line-number="1"><span class="im">from</span> collections <span class="im">import</span> namedtuple</a>
<a class="sourceLine" id="cb3-2" data-line-number="2"><span class="im">import</span> math</a>
<a class="sourceLine" id="cb3-3" data-line-number="3"></a>
<a class="sourceLine" id="cb3-4" data-line-number="4"><span class="kw">class</span> Dual(namedtuple(<span class="st">&quot;Dual&quot;</span>, [<span class="st">&quot;x&quot;</span>, <span class="st">&quot;dx&quot;</span>])):</a>
<a class="sourceLine" id="cb3-5" data-line-number="5">    <span class="co">&#39;&#39;&#39;dx ËøΩËπ§ x ÁöÑËÆäÂåñÂ∞çÁï∂‰∏ãËº∏Âá∫ÁöÑÂΩ±Èüø&#39;&#39;&#39;</span></a>
<a class="sourceLine" id="cb3-6" data-line-number="6">    <span class="kw">def</span> <span class="fu">__add__</span>(<span class="va">self</span>, other):</a>
<a class="sourceLine" id="cb3-7" data-line-number="7">        <span class="cf">return</span> Dual(<span class="va">self</span>.x <span class="op">+</span> other.x, <span class="va">self</span>.dx <span class="op">+</span> other.dx)</a>
<a class="sourceLine" id="cb3-8" data-line-number="8">    <span class="kw">def</span> <span class="fu">__mul__</span>(<span class="va">self</span>, other):</a>
<a class="sourceLine" id="cb3-9" data-line-number="9">        <span class="cf">return</span> Dual(<span class="va">self</span>.x <span class="op">*</span> other.x, other.x <span class="op">*</span> <span class="va">self</span>.dx <span class="op">+</span> <span class="va">self</span>.x <span class="op">*</span> other.dx)</a>
<a class="sourceLine" id="cb3-10" data-line-number="10">    <span class="co"># ‰∏ãÁï•</span></a>
<a class="sourceLine" id="cb3-11" data-line-number="11"></a>
<a class="sourceLine" id="cb3-12" data-line-number="12"><span class="kw">def</span> sin(dual):</a>
<a class="sourceLine" id="cb3-13" data-line-number="13">    <span class="co"># inline chain rule here</span></a>
<a class="sourceLine" id="cb3-14" data-line-number="14">    <span class="cf">return</span> Dual(math.sin(dual.x), dual.dx <span class="op">*</span> math.cos(dual.x))</a>
<a class="sourceLine" id="cb3-15" data-line-number="15"><span class="co"># ÈÄôÈÇäÁúÅÁï•ÂÖ∂‰ªñÂáΩÊï∏</span></a></code></pre></div>
<p>Ëàâ‰æã‰æÜË™™ÔºåÊàëÂÄëÂèØ‰ª•ÈÄèÈÅéÊéßÂà∂<code>Dual(x, dx)</code>ÁöÑ<code>dx</code>‰æÜÂàÜÂà•Ë®àÁÆó <span class="math inline">\(\frac{\partial f}{\partial x}\)</span> Ë∑ü <span class="math inline">\(\frac{\partial f}{\partial y}\)</span></p>
<p><span><label for="sn-8" class="margin-toggle">&#8853;</label><input type="checkbox" id="sn-8" class="margin-toggle"/><span class="marginnote"> <a href="https://upload.wikimedia.org/wikipedia/commons/a/a4/ForwardAccumulationAutomaticDifferentiation.png"><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/a/a4/ForwardAccumulationAutomaticDifferentiation.png/512px-ForwardAccumulationAutomaticDifferentiation.png" /></a> ÈÄôÊòØ Wikipedia ‰∏äÈù¢Â∞ç <span class="math inline">\(Y = f(x,y) = sin(x) + x √ó y\)</span> ÂÅö forward-mode AD ÁöÑÁ§∫ÊÑèÂúñ„ÄÇ<br />
By Berland at English Wikipedia [Public domain], via Wikimedia Commons<br />
<br />
</span></span></p>
<p><span class="math display">\[f(x,y) = sin(x) + x*y\]</span></p>
<p>Ôºà<code class="sourceCode python">Dual(x, <span class="dv">1</span>)</code> Â∞çÊáâÂà∞ <span class="math inline">\(\frac{dx}{dx} = 1\)</span>Ôºõ<code class="sourceCode python">Dual(c, <span class="dv">0</span>)</code> Â∞çÊáâÂà∞ <span class="math inline">\(\frac{dc}{dx} = 0\)</span>Ôºâ</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode python"><code class="sourceCode python"><a class="sourceLine" id="cb4-1" data-line-number="1"><span class="co"># Ë¶ÅË®àÁÆóÂÅèÂ∞éÊï∏ÁöÑÂáΩÊï∏ÂèØ‰ª•Áî®Êú¨‰æÜÁöÑÂØ´Ê≥ïÔºåËÄå‰∏çÁî®Ëá™ÂππÔºåÊúâÊ≤íÊúâÊÑüË¶∫Âà∞„ÄåËá™Âãï„ÄçÔºü</span></a>
<a class="sourceLine" id="cb4-2" data-line-number="2"><span class="kw">def</span> f(x, y):</a>
<a class="sourceLine" id="cb4-3" data-line-number="3">  <span class="cf">return</span> sin(x) <span class="op">+</span> x<span class="op">*</span>y</a>
<a class="sourceLine" id="cb4-4" data-line-number="4"></a>
<a class="sourceLine" id="cb4-5" data-line-number="5">f(Dual(<span class="dv">3</span>, <span class="dv">1</span>), Dual(<span class="dv">2</span>, <span class="dv">0</span>))</a>
<a class="sourceLine" id="cb4-6" data-line-number="6"><span class="co"># Dual(x=6.141120008059867, dx=1.0100075033995546)</span></a>
<a class="sourceLine" id="cb4-7" data-line-number="7"></a>
<a class="sourceLine" id="cb4-8" data-line-number="8">f(Dual(<span class="dv">3</span>, <span class="dv">0</span>), Dual(<span class="dv">2</span>, <span class="dv">1</span>))</a>
<a class="sourceLine" id="cb4-9" data-line-number="9"><span class="co"># Dual(x=6.141120008059867, dx=3.0)</span></a></code></pre></div>
<p>ÈÄôÊòØÊÄéÈ∫ºËæ¶Âà∞ÁöÑÔºüÊàëÂÄëÂèØ‰ª•Áî®È°û‰ºº Equational Reasoning<span><label for="sn-9" class="margin-toggle sidenote-number"></label><input type="checkbox" id="sn-9" class="margin-toggle"/><span class="sidenote">Equational Reasoning Â∞±ÂÉèÊï∏Â≠∏Ë≠âÊòé‰∏ÄÊ®£ÔºåÊØîËºÉÂ∏∏Áî®Âú® Pure Functional ÁöÑÁ®ãÂºèË™ûË®Ä‰∏äÔºå‰∏çÈÅéÊó¢ÁÑ∂ÈÄôÂÄã‰æãÂ≠ê‰πüÂπæ‰πéÊòØ Pure Functional ÁöÑÔºåÂú®ÈÄôÈÇäÂ∞±‰ΩøÁî®ÈÄôÂÄãÊäÄÂ∑ß‰æÜË™™Êòé„ÄÇ<br />
<br />
</span></span> ÁöÑÊñπÂºè‰æÜÂ±ïÈñãÔºö</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode python"><code class="sourceCode python"><a class="sourceLine" id="cb5-1" data-line-number="1">(  f(Dual(<span class="dv">3</span>, <span class="dv">1</span>), Dual(<span class="dv">2</span>,<span class="dv">0</span>))</a>
<a class="sourceLine" id="cb5-2" data-line-number="2"><span class="op">==</span> sin(Dual(<span class="dv">3</span>, <span class="dv">1</span>)) <span class="op">+</span> Dual(<span class="dv">3</span>, <span class="dv">1</span>) <span class="op">*</span> Dual(<span class="dv">2</span>,<span class="dv">0</span>)                        <span class="co"># definition of f</span></a>
<a class="sourceLine" id="cb5-3" data-line-number="3"><span class="op">==</span> Dual(math.sin(<span class="dv">3</span>), <span class="dv">1</span> <span class="op">*</span> math.cos(<span class="dv">3</span>)) <span class="op">+</span> Dual(<span class="dv">3</span>, <span class="dv">1</span>) <span class="op">*</span> Dual(<span class="dv">2</span>,<span class="dv">0</span>)     <span class="co"># definition of sin</span></a>
<a class="sourceLine" id="cb5-4" data-line-number="4"><span class="op">==</span> Dual(math.sin(<span class="dv">3</span>), <span class="dv">1</span> <span class="op">*</span> math.cos(<span class="dv">3</span>)) <span class="op">+</span> Dual(<span class="dv">3</span> <span class="op">*</span> <span class="dv">2</span>, <span class="dv">2</span> <span class="op">*</span> <span class="dv">1</span> <span class="op">+</span> <span class="dv">3</span> <span class="op">*</span> <span class="dv">0</span>) <span class="co"># definition of __mul__</span></a>
<a class="sourceLine" id="cb5-5" data-line-number="5"><span class="op">==</span> Dual(math.sin(<span class="dv">3</span>) <span class="op">+</span> <span class="dv">3</span> <span class="op">*</span> <span class="dv">2</span>, <span class="dv">1</span> <span class="op">*</span> math.cos(<span class="dv">3</span>) <span class="op">+</span> <span class="dv">2</span> <span class="op">*</span> <span class="dv">1</span> <span class="op">+</span> <span class="dv">3</span> <span class="op">*</span> <span class="dv">0</span>)      <span class="co"># definition of __add__</span></a>
<a class="sourceLine" id="cb5-6" data-line-number="6"><span class="op">==</span> Dual(x<span class="op">=</span><span class="fl">6.141120008059867</span>, dx<span class="op">=</span><span class="fl">1.0100075033995546</span>)  )</a>
<a class="sourceLine" id="cb5-7" data-line-number="7"><span class="co"># returns True since this is a valid python expression.</span></a></code></pre></div>
<p>È†ÜÂ∏∂‰∏ÄÊèêÔºåÊàëÂÄë‰∏çÈúÄË¶ÅÈ°çÂ§ñÂØ¶‰Ωú Chain RuleÔºåÂõ†ÁÇ∫ÂÆÉÂ∑≤Á∂ìÂåÖÂê´Âú® Dual Number ÁöÑÁÆóË°ìÁ≥ªÁµ±ÂÖß‰∫Ü„ÄÇ</p>
<p><span><label for="sn-10" class="margin-toggle">&#8853;</label><input type="checkbox" id="sn-10" class="margin-toggle"/><span class="marginnote"> ÂèØ‰ª•ÁúãÂà∞Á¨¨ 3 Ë°åÁöÑ <code>dx</code> Ê≠£Â•ΩÁ≠âÊñºÊáâÁî® Chain Rule Ê±ÇÂá∫ÁöÑ <span class="math inline">\(\frac{\partial sin(sin(x))}{\partial x} = cos(x) √ó cos(sin(x))\)</span>„ÄÇ<br />
ÈÄôÊòØÂõ†ÁÇ∫Âú® <code>sin(dual)</code> ÁöÑÂÆöÁæ©‰∏≠ <code class="sourceCode python">Dual(math.sin(dual.x), dual.dx <span class="op">*</span> math.cos(dual.x))</code> Ë£°Èù¢Â∞±Â∑≤Á∂ì <em>inline</em> chain rule ‰∫Ü<br />
<br />
</span></span></p>
<div class="sourceCode" id="cb6"><pre class="sourceCode numberSource python numberLines"><code class="sourceCode python"><a class="sourceLine" id="cb6-1" data-line-number="1">(  sin(sin(Dual(<span class="dv">1</span>, <span class="dv">1</span>)))</a>
<a class="sourceLine" id="cb6-2" data-line-number="2"><span class="op">==</span> sin(Dual(math.sin(<span class="dv">1</span>), <span class="dv">1</span> <span class="op">*</span> math.cos(<span class="dv">1</span>)))                          <span class="co"># definition of sin</span></a>
<a class="sourceLine" id="cb6-3" data-line-number="3"><span class="op">==</span> Dual(math.sin(math.sin(<span class="dv">1</span>)), math.cos(<span class="dv">1</span>) <span class="op">*</span> math.cos(math.sin(<span class="dv">1</span>))) <span class="co"># definition of sin</span></a>
<a class="sourceLine" id="cb6-4" data-line-number="4"><span class="op">==</span> Dual(x<span class="op">=</span><span class="fl">0.7456241416655579</span>, dx<span class="op">=</span><span class="fl">0.36003948908962097</span>) )</a></code></pre></div>
<!--

Â∑¶ÂúñÁÇ∫$f = sin(x) + x * y$ÁöÑÁ§∫ÊÑèÂúñÔºåÂè≥ÈÇäÁÇ∫‰ª• Dual Number ÂØ¶‰ΩúÁöÑÁ§∫ÊÑèÂúñÔºö

~~~~
        f(x, y)    |       f(x, y); dfdx                      f(3,2); dfdx
          +-+      |          +---+---+                       +-----+-----+
          |+|      |          | + | + |                       |6.14 | 1.01|
          +-+      |          +---+---+                       +-----+-----+
         /  \      |          /       \                        /       \
        /    \     |         /         \                      /         \
    +---+     +-+  |  +------+------+  +--+----------+   +----+-----+   +--+--+
    |sin|     |√ó|  |  |sin(a)|cos(a)|  |√ó | a*db+b*db|   |0.14|-0.98|   | 6| 2|
    +---+     +-+  |  +------+------+  +--+----------+   +----+-----+   +--+--+
      |       /|   |        |           / |                   |          / |
      | _____/ |   |        |  ________/  |                   |  _______/  |
      |/       |   |        | /           |                   | /          |
     +-+      +-+  |     +--+--+       +--+--+             +--+--+      +--+--+
     |x|      |y|  |     |x | 1|       |y | 0|             |3 | 1|      |2 | 0|
     +-+      +-+  |     +--+--+       +--+--+             +--+--+      +--+--+
~~~~

-->
<p>ÈÄôÂÄãÊñπÊ≥ïÁöÑÂïèÈ°åÊòØÊØè‰∏ÄÂÄãÂèÉÊï∏<span class="math inline">\(x_i\)</span>ÈÉΩÂøÖÈ†àÁÆóÈÅé‰∏ÄÊ¨°ÔºåÈ°ûÁ•ûÁ∂ìÁöÑÊ¢ØÂ∫¶‰æÜË™™ÈúÄË¶Å<span class="math inline">\(O(n)\)</span>ÁöÑÊôÇÈñìÊâçËÉΩÁÆóÂÆåÔºà<span class="math inline">\(n\)</span>ÊòØÂèÉÊï∏ÁöÑÂÄãÊï∏ÔºâÔºå‰∏¶‰∏çÊòØÂæàÈÅ©ÂêàÈ°ûÁ•ûÁ∂ìÁ∂≤Ë∑ØË®àÁÆóÊ¢ØÂ∫¶ÔºàÂõ†ÁÇ∫<span class="math inline">\(n\)</span>ÈÄöÂ∏∏ÈÉΩ‰∏çÂ∞èÔºâ„ÄÇ</p>
</section>
</section>
<section id="Â∞èÁµê" class="level1">
<h1>Â∞èÁµê</h1>
<p>Êú¨Êñá‰ªãÁ¥π‰∫Ü</p>
<ul>
<li>Numerical DifferentialÔºåÁî®Ëøë‰ººÁöÑÊñπÊ≥ïË®àÁÆóÔºåÂÖ∂ÂÑ™ÈªûÊòØÂØ¶‰ΩúÊúÄÁ∞°ÂñÆÔºåÁº∫ÈªûÊòØË®àÁÆóË™§Â∑ÆÂ§ßÂà∞‰∏çÂ§†ÂØ¶Áî®</li>
<li>Symbolic DifferentialÔºåÂÖ∂ÂØ¶Â∞±ÊòØÊää‰∫∫È°ûË®àÁÆóÂæÆÂàÜÁöÑÈÅéÁ®ãÁî®ÈõªËÖ¶ÂØ¶‰ΩúÔºåÂèØ‰ª•ÂæóÂà∞Ê≠£Á¢∫ÁöÑÊï∏ÂÄºÔºå‰ΩÜÊòØÊúÉÈÅáÂà∞ÁÆóÂºèËÜ®ËÑπÁöÑÂïèÈ°å</li>
<li>Forward-Mode Automatic DifferentialÔºåÊáâÁî®‰∫Ü chain ruleÔºåÂú®Ë®àÁÆóÁöÑÈÅéÁ®ã‰πüÂèØ‰ª•Á∞°ÂñÆÁöÑÁÆóÂá∫Ê≠£Á¢∫ÁöÑÂÅèÂ∞éÊï∏Ôºå‰ΩÜÊòØ‰∏çÈÅ©ÂêàË®àÁÆóÊ¢ØÂ∫¶„ÄÇ</li>
</ul>
<p>‰∏ã‰∏ÄÁØáÊñáÁ´†ÊúÉ‰ªãÁ¥π Reverse-Mode Automatic DifferentialÔºåÊòØ Forward-Mode Áõ∏ÂèçÊñπÂêëÁöÑÁâàÊú¨ÔºåÂêåÊôÇ‰πüÊòØ back propagation ÁöÑ general ÁâàÊú¨„ÄÇ</p>
</section>
<section id="references" class="level1">
<h1>References</h1>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Automatic_differentiation">Automatic differentiation on Wikipedia</a></li>
<li><a href="https://idontgetoutmuch.wordpress.com/2013/10/13/backpropogation-is-just-steepest-descent-with-automatic-differentiation-2">Backpropogation is Just Steepest Descent with Automatic Differentiation</a></li>
<li><a href="https://arxiv.org/pdf/1502.05767.pdf">Automatic Differentiation in Machine Learning: a Survey</a></li>
<li><a href="https://arxiv.org/pdf/1404.7456.pdf">Automatic Differentiation of Algorithms for Machine Learning</a></li>
</ul>
</section>
<section id="appendix" class="level1">
<h1>Appendix</h1>
<section id="example-logistic-regression" class="level2">
<h2>Example: Logistic Regression</h2>
<p>ÈÄôÈÇäÁî®ÊåëÊà∞ËÄÖËôüÁöÑOÂûãÁí∞Â§±ÊïàË≥áÊñô<span><label for="sn-11" class="margin-toggle">&#8853;</label><input type="checkbox" id="sn-11" class="margin-toggle"/><span class="marginnote"> ÈÅ∏ÈÄô‰ªΩË≥áÊñôÊòØÂõ†ÁÇ∫ÊàëÊúÄËøëÂú®ËÆÄ ‚ÄúProbabilistic Programming &amp; Bayesian Methods for Hackers‚Äù ÂâõÂ•Ω‰ªãÁ¥πÂà∞ÈÄô‰∏Ä‰ªΩ<a href="https://raw.githubusercontent.com/CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers/master/Chapter2_MorePyMC/data/challenger_data.csv">Ë≥áÊñôÈõÜ</a>„ÄÇ<br />
<br />
</span></span>‰ΩúÁÇ∫ÁØÑ‰æãÔºå‰ª•‰∏äËø∞ÁöÑ Forward-Mode AD<span><label for="sn-12" class="margin-toggle">&#8853;</label><input type="checkbox" id="sn-12" class="margin-toggle"/><span class="marginnote"> <strong>Ê≥®ÊÑè:</strong> ÈÄôÈÇäÁöÑ <code>forwardad</code> Â∑≤Á∂ìÊúâÂØ¶‰Ωú <code>__radd__</code>, <code>exp</code>, <code>log</code>‚Ä¶Á≠âÊªøË∂≥‰∏ãÈù¢Á®ãÂºèÊâÄÈúÄÁöÑÊúÄÂ∞èÈúÄÊ±Ç„ÄÇ<br />
<br />
</span></span> ÂØ¶‰Ωú Gradient Descent ‰æÜÈÄ≤Ë°å Logistic Regression„ÄÇ</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode python example"><code class="sourceCode python"><a class="sourceLine" id="cb7-1" data-line-number="1"><span class="im">from</span> forwardad <span class="im">import</span> <span class="op">*</span></a>
<a class="sourceLine" id="cb7-2" data-line-number="2"><span class="im">import</span> pandas <span class="im">as</span> pd</a>
<a class="sourceLine" id="cb7-3" data-line-number="3"><span class="im">from</span> io <span class="im">import</span> StringIO</a>
<a class="sourceLine" id="cb7-4" data-line-number="4"></a>
<a class="sourceLine" id="cb7-5" data-line-number="5">data <span class="op">=</span> StringIO(<span class="st">&#39;Date,Temperature,Damage Incident</span><span class="ch">\n</span><span class="st">04/12/1981,66,0.0</span><span class="ch">\n</span><span class="st">11/12/1981,70,1.0</span><span class="ch">\n</span><span class="st">3/22/82,69,0.0</span><span class="ch">\n</span><span class="st">6/27/82,80,</span><span class="ch">\n</span><span class="st">01/11/1982,68,0.0</span><span class="ch">\n</span><span class="st">04/04/1983,67,0.0</span><span class="ch">\n</span><span class="st">6/18/83,72,0.0</span><span class="ch">\n</span><span class="st">8/30/83,73,0.0</span><span class="ch">\n</span><span class="st">11/28/83,70,0.0</span><span class="ch">\n</span><span class="st">02/03/1984,57,1.0</span><span class="ch">\n</span><span class="st">04/06/1984,63,1.0</span><span class="ch">\n</span><span class="st">8/30/84,70,1.0</span><span class="ch">\n</span><span class="st">10/05/1984,78,0.0</span><span class="ch">\n</span><span class="st">11/08/1984,67,0.0</span><span class="ch">\n</span><span class="st">1/24/85,53,1.0</span><span class="ch">\n</span><span class="st">04/12/1985,67,0.0</span><span class="ch">\n</span><span class="st">4/29/85,75,0.0</span><span class="ch">\n</span><span class="st">6/17/85,70,0.0</span><span class="ch">\n</span><span class="st">7/29/85,81,0.0</span><span class="ch">\n</span><span class="st">8/27/85,76,0.0</span><span class="ch">\n</span><span class="st">10/03/1985,79,0.0</span><span class="ch">\n</span><span class="st">10/30/85,75,1.0</span><span class="ch">\n</span><span class="st">11/26/85,76,0.0</span><span class="ch">\n</span><span class="st">01/12/1986,58,1.0</span><span class="ch">\n</span><span class="st">1/28/86,31,1.0</span><span class="ch">\n</span><span class="st">&#39;</span>)</a>
<a class="sourceLine" id="cb7-6" data-line-number="6">df <span class="op">=</span> pd.read_csv(data).dropna()</a>
<a class="sourceLine" id="cb7-7" data-line-number="7">X <span class="op">=</span> df[<span class="st">&#39;Temperature&#39;</span>].tolist()</a>
<a class="sourceLine" id="cb7-8" data-line-number="8">Y <span class="op">=</span> df[<span class="st">&#39;Damage Incident&#39;</span>].tolist()</a></code></pre></div>
<p>ÈÄôÈÇä‰ΩøÁî® logistic function ÂÅöÊ®°ÂûãÔºåbinary cross-entropy ‰ΩúÁÇ∫ loss function„ÄÇ</p>
<p><span class="math display">\[
\begin{gathered}
f(x) = \frac{1}{1+ exp(\beta x + \alpha)} \\
Cost(y, \hat y) = -\frac{1}{N}\sum_{i=1}^N \bigg[ y_i \log(\hat{y}_i)+(1-y_i) \log(1-\hat{y}_i) \bigg]
\end{gathered}
\]</span> <span><label for="sn-13" class="margin-toggle">&#8853;</label><input type="checkbox" id="sn-13" class="margin-toggle"/><span class="marginnote"> ÈÄôÈÇäÂèØ‰ª•ÁúãÂà∞ÔºåÂØ´Âá∫‰æÜÁöÑÁ®ãÂºèÂπæ‰πéÊ≤íÊúâÁÇ∫‰∫ÜË®àÁÆóÂæÆÂàÜËÄåÊîπËÆäÔºåËÄåÊòØÁÖßËëóÊú¨‰æÜÁöÑÂÆöÁæ©Âú®ÂØ´„ÄÇ<br />
<br />
</span></span></p>
<div class="sourceCode" id="cb8"><pre class="sourceCode python example"><code class="sourceCode python"><a class="sourceLine" id="cb8-1" data-line-number="1"><span class="kw">def</span> f(alpha, beta, x):</a>
<a class="sourceLine" id="cb8-2" data-line-number="2">    <span class="cf">return</span> <span class="dv">1</span> <span class="op">/</span> (<span class="dv">1</span> <span class="op">+</span> exp(beta <span class="op">*</span> x <span class="op">+</span> alpha))</a>
<a class="sourceLine" id="cb8-3" data-line-number="3"></a>
<a class="sourceLine" id="cb8-4" data-line-number="4"><span class="kw">def</span> cross_entroy(Y, Y_):</a>
<a class="sourceLine" id="cb8-5" data-line-number="5">    loss <span class="op">=</span> <span class="dv">0</span></a>
<a class="sourceLine" id="cb8-6" data-line-number="6">    <span class="cf">for</span> y, y_ <span class="kw">in</span> <span class="bu">zip</span>(Y, Y_):</a>
<a class="sourceLine" id="cb8-7" data-line-number="7">        loss <span class="op">-=</span> y <span class="op">*</span> log(y_) <span class="op">+</span> (<span class="dv">1</span> <span class="op">-</span> y) <span class="op">*</span> log(<span class="dv">1</span> <span class="op">-</span> y_)</a>
<a class="sourceLine" id="cb8-8" data-line-number="8">    <span class="cf">return</span> loss <span class="op">/</span> <span class="bu">len</span>(Y)</a></code></pre></div>
<p>ÊúÄÂæå‰ΩøÁî® Gradient Descent ‰æÜÊâæÂá∫ <span class="math inline">\(\alpha, \beta\)</span>„ÄÇ</p>
<p><span><label for="sn-14" class="margin-toggle">&#8853;</label><input type="checkbox" id="sn-14" class="margin-toggle"/><span class="marginnote"> <code>alpha</code>, <code>beta</code>, <code>lr</code>, <code>n_epoch</code> ÈÄô‰∫õÂèÉÊï∏ÈÉΩÊòØÂèØ‰ª•Ë®≠ÂÆöÁöÑ„ÄÇ<br />
<br />
</span></span></p>
<p><span><label for="sn-15" class="margin-toggle">&#8853;</label><input type="checkbox" id="sn-15" class="margin-toggle"/><span class="marginnote"> ÂèóÈôêÊñº Forward-Mode AD ÂÖàÂ§©‰∏äÁöÑÈôêÂà∂Ôºå<span class="math inline">\(\alpha\)</span> Ë∑ü <span class="math inline">\(\beta\)</span> ÁöÑÂæÆÂàÜÈúÄË¶ÅÂàÜÈñãË®àÁÆó„ÄÇ<br />
<br />
</span></span></p>
<div class="sourceCode" id="cb9"><pre class="sourceCode python example"><code class="sourceCode python"><a class="sourceLine" id="cb9-1" data-line-number="1">alpha <span class="op">=</span> <span class="dv">0</span></a>
<a class="sourceLine" id="cb9-2" data-line-number="2">beta  <span class="op">=</span> <span class="dv">0</span></a>
<a class="sourceLine" id="cb9-3" data-line-number="3">lr <span class="op">=</span> <span class="fl">0.005</span></a>
<a class="sourceLine" id="cb9-4" data-line-number="4">n_epoch <span class="op">=</span> <span class="dv">1000</span></a>
<a class="sourceLine" id="cb9-5" data-line-number="5"></a>
<a class="sourceLine" id="cb9-6" data-line-number="6"><span class="co"># ÁÇ∫‰∫ÜÈÅøÂÖç log(0) ÔºåÈÄôÈÇäÂÖàÁΩÆÊèõÊàê 0 ‚âà 1e-18</span></a>
<a class="sourceLine" id="cb9-7" data-line-number="7">Y <span class="op">=</span> [<span class="fl">1e-18</span> <span class="cf">if</span> x <span class="op">==</span> <span class="dv">0</span> <span class="cf">else</span> x <span class="cf">for</span> x <span class="kw">in</span> Y]</a>
<a class="sourceLine" id="cb9-8" data-line-number="8"></a>
<a class="sourceLine" id="cb9-9" data-line-number="9"><span class="cf">for</span> epoch <span class="kw">in</span> <span class="bu">range</span>(n_epoch):</a>
<a class="sourceLine" id="cb9-10" data-line-number="10">    Y_alpha <span class="op">=</span> [f(Dual(alpha, <span class="dv">1</span>), beta, x) <span class="cf">for</span> x <span class="kw">in</span> X]</a>
<a class="sourceLine" id="cb9-11" data-line-number="11">    Y_beta  <span class="op">=</span> [f(alpha, Dual(beta, <span class="dv">1</span>), x) <span class="cf">for</span> x <span class="kw">in</span> X]</a>
<a class="sourceLine" id="cb9-12" data-line-number="12">    loss_alpha <span class="op">=</span> cross_entroy(Y, Y_alpha)</a>
<a class="sourceLine" id="cb9-13" data-line-number="13">    loss_beta  <span class="op">=</span> cross_entroy(Y, Y_beta)</a>
<a class="sourceLine" id="cb9-14" data-line-number="14">    <span class="cf">if</span> epoch <span class="op">%</span> <span class="dv">100</span> <span class="op">==</span> <span class="dv">0</span>:</a>
<a class="sourceLine" id="cb9-15" data-line-number="15">        <span class="bu">print</span>(<span class="ss">f&#39;</span><span class="sc">{</span>epoch<span class="sc">: 5d}</span><span class="ss"> loss </span><span class="sc">{</span>loss_alpha<span class="sc">.x}</span><span class="ss"> alpha </span><span class="sc">{</span>alpha<span class="sc">}</span><span class="ss"> beta </span><span class="sc">{</span>beta<span class="sc">}</span><span class="ss">&#39;</span>)</a>
<a class="sourceLine" id="cb9-16" data-line-number="16">    alpha <span class="op">-=</span> lr <span class="op">*</span> loss_alpha.dx</a>
<a class="sourceLine" id="cb9-17" data-line-number="17">    beta  <span class="op">-=</span> lr <span class="op">*</span> loss_beta.dx</a></code></pre></div>
<p>ÈÄôÈÇäÊòØ‰∏äÈù¢Á®ãÂºèÂü∑Ë°åÁöÑÁµêÊûúÔºàÈáçÊñ∞ÊéíÁâàÈÅéÔºâÔºåÂèØ‰ª•ÁúãÂà∞ Learning Rate Ë®≠ÂÆöÁöÑÊúâÈªûÂ§™Â§ß‰∫Ü„ÄÇÊúâËààË∂£ÁöÑËÆÄËÄÖÂèØ‰ª•Ë©¶ËëóËá™Â∑±ÂØ¶‰ΩúÁúãÁúã„ÄÇ</p>
<pre><code>    0 loss 0.693147180559945  alpha  0                   beta  0
  100 loss 0.966931426916483  alpha -0.0201008838271800  beta  0.0465418617995232
  200 loss 1.114664696718874  alpha -0.0417346760460772  beta -0.0170795861942109
  300 loss 3.558155059566457  alpha -0.0595466871292758  beta  0.1800165252346373
  400 loss 0.961973323155755  alpha -0.0821799396148940  beta  0.0472951650365717
  500 loss 1.110644944663376  alpha -0.1037522632990092  beta -0.0161308641984885
  600 loss 3.555985812065263  alpha -0.1215047609258659  beta  0.1809462252622945
  700 loss 0.957097575658038  alpha -0.1440822016889158  beta  0.0480494092224557
  800 loss 1.106712443731962  alpha -0.1655931706446121  beta -0.0151865701942648
  900 loss 3.553772437842705  alpha -0.1832862200585766  beta  0.1818707335807102</code></pre>
</section>
</section>]]></description>
    <pubDate>Tue, 09 Jan 2018 00:00:00 UT</pubDate>
    <guid>https://op8867555.github.io/posts/2017-12-17-autodiff.html</guid>
    <dc:creator>Alex Lu</dc:creator>
</item>
<item>
    <title>Êõ¥Êèõ blog ‰∏ªÈ°å‰ª•ËøéÊé• 2018 Âπ¥</title>
    <link>https://op8867555.github.io/posts/2018-01-05-new-style.html</link>
    <description><![CDATA[<section>
<p>ÈÅé‰∫Ü 2017ÔºåÊàëÊ±∫ÂÆöÊèõÊéâ‰πãÂâçÁî® Google ÁöÑ <a href="https://getmdl.io/">Material Design Lite</a> ÊâãÂàªÁöÑ cssÔºåÊîπÁî®‰∫Ü <a href="https://github.com/edwardtufte/tufte-css">Tufte CSS</a> <span><label for="sn-1" class="margin-toggle sidenote-number"></label><input type="checkbox" id="sn-1" class="margin-toggle"/><span class="sidenote">Ê≠£Á¢∫‰æÜË™™ÊòØÂÆÉÁöÑ pandoc Áâà fork ‚Äú<a href="https://github.com/jez/tufte-pandoc-css">tufte-pandoc-css</a>‚Äù<br />
<br />
</span></span> ÈÄôÂ•ó‰ª• Edward Tufte ÁöÑÊõ∏Á±çÂèäÊâãÁ®ø<span><label for="sn-2" class="margin-toggle sidenote-number"></label><input type="checkbox" id="sn-2" class="margin-toggle"/><span class="sidenote">ÊàëÊ≤íÁúãÈÅéÔºå‰ΩÜÊòØÂ∞±ÊòØÊ®£Âà©Áî®ÂÖ©Ê¨ÑË®≠Ë®àÔºåÊää foot note Êîπ‰Ωú side note ÁöÑÈ¢®Ê†º„ÄÇ<br />
<br />
</span></span>ÁöÑÈ¢®Ê†ºÁÇ∫Âü∫Á§éÁöÑ‰∏ªÈ°å„ÄÇ</p>
<p>ÈÄôÈÇäÁâπÂú∞Êà™‰∫ÜÂÖ©ËÄÖÁöÑÊà™Âúñ‰ª•‰ΩúÁÇ∫Á¥ÄÂøµÔºà‰∏çÈÅéÂÖ∂ÂØ¶<code>git checkout</code>‰∏Ä‰∏ã‰πüË°åÔºâ</p>
<p><span><label for="sn-3" class="margin-toggle">&#8853;</label><input type="checkbox" id="sn-3" class="margin-toggle"/><span class="marginnote"> ‰πãÂâçÁöÑ‰∏ªÈ°åËµ∞ Material Design ÁöÑÂç°ÁâáÈ¢®Ê†ºÔºå‰ª•ÁÑ°Ë•ØÁ∑öÁöÑÈªëÈ´îÁÇ∫‰∏ª„ÄÇ <a href="https://i.imgur.com/TQjq0Ju.png"><img src="https://i.imgur.com/TQjq0Ju.png" /></a><br />
<br />
</span></span></p>
<p><a href="https://i.imgur.com/e5mGJpO.png"><img src="https://i.imgur.com/e5mGJpO.png" /></a></p>
<p>Èô§Ê≠§‰πãÂ§ñÔºåÊàëÈÇÑÂÅö‰∫ÜÔºö</p>
<ul>
<li>ÊîπÁî® <a href="https://khan.github.io/KaTeX/"><span class="math inline">\(\KaTeX\)</span></a> ÈÄôÂÄãÂâçÁ´ØÊ∏≤ÊüìÂºïÊìé‰æÜÂëàÁèæ LaTeX ÁöÑÈÅãÁÆóÂºèÔºåÁõ∏ËºÉÊñº‰πãÂâç pandoc ÁöÑÂü∫Êú¨Ê¨æÂØ¶‰ΩúÊîØÊè¥Êõ¥Â§öË™ûÊ≥ïÔºåËÄå‰∏îÊ∏≤ÊüìÁµêÊûú‰πüÂ•ΩÁúã‰∫Ü‰∏çÂ∞ë„ÄÇ</li>
<li>‰ΩøÁî® pandoc ÁöÑ <code>eastAsianLineBreakFilter</code> ‰æÜÊîπÈÄ≤‰∏≠ÊñáÊñ∑Ë°åÁöÑÂëàÁèæ„ÄÇ</li>
</ul>
</section>]]></description>
    <pubDate>Fri, 05 Jan 2018 00:00:00 UT</pubDate>
    <guid>https://op8867555.github.io/posts/2018-01-05-new-style.html</guid>
    <dc:creator>Alex Lu</dc:creator>
</item>
<item>
    <title>Á≠ÜË®òÔºöÂπæÂÄã CLI ÂØ¶Áî®Â∑•ÂÖ∑: ag, fzf, fd, ripgrep</title>
    <link>https://op8867555.github.io/posts/2017-11-27-cli-tools-ag-rg-fzf-fd.html</link>
    <description><![CDATA[<p>Á≠ÜË®òÊúÄËøëÁî®ÁöÑÂπæÂÄã CLI Â∑•ÂÖ∑„ÄÇ</p>
<section id="the-silver-searcher" class="level1">
<h1>The Silver Searcher</h1>
<p><a href="https://github.com/ggreer/the_silver_searcher">The Silver Searcher</a> ÊòØ‰∏ÄÂÄãÈ°û‰ºº ack ÁöÑÊêúÂ∞ãÂ∑•ÂÖ∑Ôºå‰πüÂ∞±ÊòØÊâæÂá∫Âá∫ÁèæÊüêÂ≠ó‰∏≤ÁöÑÊâÄÊúâÊ™îÊ°à„ÄÇ</p>
<ul>
<li>È£õÂ§©Âø´</li>
<li>È†êË®≠ÊéíÈô§ <code>.gitignore</code> <code>.hgignore</code> Ë£°ÁöÑ pattern</li>
<li>ÂÖ∂‰ªñ‰∏çÊÉ≥Ë¶ÅÁöÑ pattern ÂèØ‰ª•ÂØ´Âú® <code>.ignore</code></li>
<li>Áî® c ÂØ¶‰Ωú</li>
<li>Áõ¥Âà∞ <span class="citation" data-cites="caasih">@caasih</span> ÊèêÂà∞‰πãÂâçÊàëÈÉΩÊ≤íÁôºÁèæÂü∑Ë°åÊ™îÂêçÁ®± <code>ag</code> ÊòØÊ∞¥ÈäÄÁöÑÂÖÉÁ¥†Á¨¶Ëôü</li>
</ul>
</section>
<section id="ripgrep" class="level1">
<h1>ripgrep</h1>
<p><a href="https://github.com/BurntSushi/ripgrep">Ripgrep</a> Ë∑üÂâçËø∞ÁöÑ The Silver Searcher ÂäüËÉΩÂ∑Æ‰∏çÂ§ö</p>
<ul>
<li>‰ΩÜÊòØÊØîÈ£õÂ§©Âø´ÈÇÑÂø´</li>
<li>Â∞çÊñº ignore Ê™îÊ°àÁöÑÂØ¶‰ΩúÊõ¥Ê≠£Á¢∫Ôºåag ÊúÉÂ§öÂêê‰∏Ä‰∫õ‰∏çÊáâË©≤Âá∫ÁèæÁöÑÁµêÊûú</li>
<li>regexp ÁöÑÂäüËÉΩÊØîËºÉÂ∞ëÔºàÊØîÊñπË™™ÊàëÂæû‰æÜÊ≤íÁî®ÈÅéÁöÑ lookaround Ë∑ü backreference Â∞±Ê≤íÊúâÂØ¶‰ΩúÔºâ</li>
<li>Áî® rust ÂØ¶‰Ωú</li>
</ul>
</section>
<section id="fd" class="level1">
<h1>fd</h1>
<p><a href="https://github.com/sharkdp/fd">fd</a> ÊòØ‰∏ÄÂÄãÈ°û‰ºº find ÁöÑÊ™îÊ°àÊêúÂ∞ãÂ∑•ÂÖ∑</p>
<ul>
<li>‰πüÊúÉÈ†êË®≠ÊéíÈô§ <code>.gitignore</code></li>
<li>È†êË®≠ÊéíÈô§Èö±ËóèÊ™îÊ°à</li>
<li>‰πüÊòØÈ£õÂ§©Âø´</li>
<li>‰πüÊòØ rust ÂØ¶‰Ωú</li>
</ul>
<section id="ÁØÑ‰æã" class="level2">
<h2>ÁØÑ‰æã</h2>
<ul>
<li><p>Áî® regexp ÊêúÂ∞ã</p>
<pre><code>fd &#39;[0-9]\.jpg$&#39;</code></pre></li>
<li><p>ÊêúÂ∞ãÈö±ËóèÊ™îÊ°àË∑üË¢´ ignore ÁöÑÊ™îÊ°à</p>
<pre><code>fd -H -I &#39;[0-9]\.jpg$&#39;</code></pre></li>
<li><p>ÊêúÂ∞ãÁâπÂÆöÂâØÊ™îÂêç</p>
<pre><code>fd -e jpg</code></pre></li>
<li><p>Â∞çÊêúÂ∞ãÁµêÊûú‰∏ãÊåá‰ª§<strong>Âπ≥Ë°åÂü∑Ë°å</strong></p>
<pre><code>fd -e jpg -x convert {} {.}.png</code></pre>
<table>
<thead>
<tr class="header">
<th>variable</th>
<th style="text-align: left;">example</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>{}</td>
<td style="text-align: left;">documents/images/party.jpg</td>
</tr>
<tr class="even">
<td>{.}</td>
<td style="text-align: left;">documents/images/party</td>
</tr>
<tr class="odd">
<td>{/}</td>
<td style="text-align: left;">party.jpg</td>
</tr>
<tr class="even">
<td>{//}</td>
<td style="text-align: left;">documents/images</td>
</tr>
<tr class="odd">
<td>{/.}</td>
<td style="text-align: left;">party</td>
</tr>
</tbody>
</table></li>
</ul>
</section>
</section>
<section id="fzf" class="level1">
<h1>fzf</h1>
<p><a href="https://github.com/junegunn/fzf">fzf</a> ÊòØ‰∏ÄÂÄã fuzzy finderÔºåÂ∞±ÊòØ cmd+T ÊàñÊòØ ctrl+p ÊàñÊòØ‰ªª‰Ωï‰∏ÄÂÄã ÊñáÂ≠óÁ∑®ËºØÂô®/IDE Ë£°Èù¢‰∏çÁî®ÊâìÂÖ®ÂêçÂ∞±ÂèØ‰ª•ÊâæÊ™îÊ°àÁöÑÈÇ£ÂÄãÂäüËÉΩ</p>
<ul>
<li>Áî® go ÂØ´ÁöÑ</li>
<li><p>È†êË®≠Áî® find ÔºåÊâÄ‰ª•ÂæàÊÖ¢ÔºåÁî®Áí∞Â¢ÉËÆäÊï∏ÂèØ‰ª•ÊèõÁî® fd</p>
<p>export FZF_DEFAULT_COMMAND=‚Äòfd ‚Äìtype f ‚Äìfollow ‚Äìexclude .git‚Äô</p></li>
<li><p>ctrl+r ‰æÜÊêúÂ∞ãÊ≠∑Âè≤</p>
<blockquote class="imgur-embed-pub" lang="en" data-id="IwjCK2l">
<a href="//imgur.com/IwjCK2l">View post on imgur.com</a>
</blockquote>
<script async src="//s.imgur.com/min/embed.js" charset="utf-8"></script></li>
<li><p><code>**&lt;tab&gt;</code> ÂèØ‰ª•ÈÅ∏ÂèñÂ§öÂÄãÊ™îÊ°à</p>
<blockquote class="imgur-embed-pub" lang="en" data-id="ocxqb0C">
<a href="//imgur.com/ocxqb0C">View post on imgur.com</a>
</blockquote>
<script async src="//s.imgur.com/min/embed.js" charset="utf-8"></script></li>
<li><p>ctrl+t ‰æÜÊêúÂ∞ãÊ™îÊ°à</p>
<blockquote class="imgur-embed-pub" lang="en" data-id="SfiGWjD">
<a href="//imgur.com/SfiGWjD">View post on imgur.com</a>
</blockquote>
<script async src="//s.imgur.com/min/embed.js" charset="utf-8"></script></li>
</ul>
</section>]]></description>
    <pubDate>Mon, 27 Nov 2017 00:00:00 UT</pubDate>
    <guid>https://op8867555.github.io/posts/2017-11-27-cli-tools-ag-rg-fzf-fd.html</guid>
    <dc:creator>Alex Lu</dc:creator>
</item>
<item>
    <title>[EN] Use your UNIX toolbox with pandas</title>
    <link>https://op8867555.github.io/posts/2017-10-13-use-your-unix-toolbox-with-pandas.html</link>
    <description><![CDATA[<p>I do analysis on log / csv / json files with a Python + Pandas + Jupyter Notebook stack at work. These files are so large that I usually need to do some pre-processing before loading them into memory.</p>
<p>UNIX tools are powerful to stream processing files: concatenation, filtering, transforming‚Ä¶, but it is annoying to ‚Äúcontext-switch‚Äù between Jupyter Notebook and shell. Also, It‚Äôs generate immediate files that need to remove later manually, quite annoying.</p>
<p>After some stackoverflow-ing, I found a solution<span><label for="sn-1" class="margin-toggle sidenote-number"></label><input type="checkbox" id="sn-1" class="margin-toggle"/><span class="sidenote"><a href="https://stackoverflow.com/questions/13651117/pandas-filter-lines-on-load-in-read-csv/13653490#13653490">pandas: filter lines on load in read_csv</a><br />
<br />
</span></span> says you can read files in chunks:</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode python"><code class="sourceCode python"><a class="sourceLine" id="cb1-1" data-line-number="1">df <span class="op">=</span> pd.concat(process(chunk_df) <span class="co"># do processing in python</span></a>
<a class="sourceLine" id="cb1-2" data-line-number="2">               <span class="cf">for</span> chunk_df <span class="kw">in</span> pd.read_csv(<span class="st">&#39;bigdata.csv&#39;</span>, chunksize<span class="op">=</span><span class="dv">10000</span>))</a></code></pre></div>
<p>But there is a big overhead to create/process immediate data-frames.</p>
<p>Another solution<span><label for="sn-2" class="margin-toggle sidenote-number"></label><input type="checkbox" id="sn-2" class="margin-toggle"/><span class="sidenote"><a href="https://stackoverflow.com/questions/39864304/how-to-use-subprocess-and-cat-to-read-in-data-line-by-line/39864368#39864368">How to use subprocess and ‚Äòcat‚Äô to read in data line by line?</a><br />
<br />
</span></span> says you can use <code>subprocess</code> with PIPE, a clever idea. So I end up with this:</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode python"><code class="sourceCode python"><a class="sourceLine" id="cb2-1" data-line-number="1"><span class="im">import</span> pandas <span class="im">as</span> pd</a>
<a class="sourceLine" id="cb2-2" data-line-number="2"><span class="im">from</span> subprocess <span class="im">import</span> Popen, PIPE</a>
<a class="sourceLine" id="cb2-3" data-line-number="3"></a>
<a class="sourceLine" id="cb2-4" data-line-number="4"><span class="cf">with</span> Popen(<span class="st">&#39;cat bigdata.csv | grep WHAT_I_CARE_ABOUT | some_transformations&#39;</span>,</a>
<a class="sourceLine" id="cb2-5" data-line-number="5">           shell<span class="op">=</span><span class="va">True</span>,</a>
<a class="sourceLine" id="cb2-6" data-line-number="6">           stdout<span class="op">=</span>PIPE) <span class="im">as</span> process:</a>
<a class="sourceLine" id="cb2-7" data-line-number="7">    df <span class="op">=</span> pd.read_csv(process.stdout)</a></code></pre></div>
<p>With this trick, I can now do some bash-fu with pandas in Jupyter-Notebook easily.</p>
<p><strong>Reading multiples files</strong></p>
<pre class="shell"><code>cat stats/2017/*/*.csv</code></pre>
<p><strong>JSON query with jq</strong></p>
<pre class="shell"><code>cat data.json | jq &#39;{.loc = .loc}&#39;</code></pre>
<p><strong>filter lines with awk or grep</strong></p>
<pre class="shell"><code>zcat data.csv.gz | grep &#39;SOME_TAG&#39; | awk &#39;$1 == 2017&#39;</code></pre>
<p><strong>pipe over files in .tar</strong></p>
<div class="sourceCode" id="cb6"><pre class="sourceCode sh"><code class="sourceCode bash"><a class="sourceLine" id="cb6-1" data-line-number="1"><span class="fu">tar</span> -xOf bigdatas.tar.gz --wildcards <span class="st">&quot;*.data.csv&quot;</span></a></code></pre></div>]]></description>
    <pubDate>Fri, 13 Oct 2017 00:00:00 UT</pubDate>
    <guid>https://op8867555.github.io/posts/2017-10-13-use-your-unix-toolbox-with-pandas.html</guid>
    <dc:creator>Alex Lu</dc:creator>
</item>
<item>
    <title>ÊáâÁî® git bisect ÊâæÂá∫ linux kernel ‰∏≠Âá∫ÁèæÂïèÈ°åÁöÑ commit</title>
    <link>https://op8867555.github.io/posts/2017-10-05-bisecting-linux-kernel-bug.html</link>
    <description><![CDATA[<section id="tldr" class="level3">
<h3>TL;DR</h3>
<p>ÈÄôÁØáÊñáÁ´†Á≠ÜË®òÊàë‰ΩøÁî® git bisect ‰æÜÊâæÂá∫ linux kernel (drm/i915) ‰∏≠ÁöÑÂ∞éËá¥Ë°åÁÇ∫Áï∞Â∏∏ÁöÑÊòØÂì™‰∏ÄÂÄã commit ÁöÑÈÅéÁ®ã„ÄÇ</p>
</section>
<section id="Ëµ∑Âõ†" class="level1">
<h1>Ëµ∑Âõ†</h1>
<p>ÊàëÁöÑÁ≠ÜÈõª‰∏äË£ùÁöÑÊòØ Arch LinuxÔºåChromium Âú® linux ‰∏äÊòØ<a href="https://bugs.chromium.org/p/chromium/issues/detail?id=463440">‰∏çÊúÉÊúâÁ°¨È´îÂä†ÈÄüÂäüËÉΩ</a>ÁöÑÔºåÁÇ∫‰∫ÜÊ∏õÂ∞ë CPU Ë≥áÊ∫êÁöÑÊµ™Ë≤ªÔºå‰πüÁÇ∫‰∫ÜÂ¢ûÂä†Á∫åËà™ÂäõÔºåÊàë‰ΩøÁî®ÁöÑÊòØ‰∏ÄÂÄãÈùûÂÆòÊñπÁâàÊú¨ÁöÑ <a href="https://aur.archlinux.org/packages/chromium-vaapi/">chromium-vaapi</a>„ÄÇ</p>
<p>ÊúÄËøëÂÅöÂÆåÁ≥ªÁµ±Êõ¥Êñ∞‰πãÂæåÁôºÁèæÁ°¨È´îÂä†ÈÄüÁöÑÂäüËÉΩÂá∫‰∫Ü‰∫õÁï∞Â∏∏ÔºåÂú®Ë∑ü AUR package ÁöÑ‰ΩøÁî®ËÄÖË®éË´ñÂæåÂæóÁü•Ôºö</p>
<ul>
<li>mesa ÁöÑÁâàÊú¨ÊúÉÂΩ±ÈüøÔºå‰ΩÜÊòØÈôçÁâà‰πãÂæåÊúâ‰∏çÂêåÁöÑÁï∞Â∏∏</li>
<li>ÈÄôÂÄã‰∏çÂêåÁöÑÁï∞Â∏∏Âè™ÊúâÂú®Êí≠Êîæ VP9 Ê†ºÂºèÁöÑÂΩ±ÁâáÊôÇÊúÉÁôºÁîü</li>
<li>Âú®‰∏ÄÁï™‰∫ÇË©¶‰πãÂæåÁôºÁèæÂà∞ kernel ÈôçÂõû 4.12 Â∞±Ê≤í‰∫ã‰∫ÜÔºÅ</li>
</ul>
<p>ÂÅö‰∫Ü‰∏Ä‰∫õÂäüË™≤‰πãÂæåÔºåÊàëË™çÁÇ∫ÈÄôÂÄã bug ÊòØ‰æÜËá™Êñº linux kernel ‰∏≠ DRM/i915 ÁöÑÈÉ®‰ªΩÔºåÊñºÊòØÊàë‰æøÈñãÂßãÂòóË©¶ÂæûËå´Ëå´ commit Êµ∑ÊíàÂá∫ÈÇ£ÂÄãÈáù„ÄÇ</p>
</section>
<section id="ÊâæÂá∫ÂïèÈ°å‰πãÊóÖ" class="level1">
<h1>ÊâæÂá∫ÂïèÈ°å‰πãÊóÖ</h1>
<section id="drm-tip" class="level2">
<h2>drm-tip</h2>
<p>drm-tip ÊòØË£°Èù¢ÂåÖÂê´Ëëó‰∏çÂêåÁöÑÂπæÂÄãÂúòÈöäÊâÄÁ∂≠Ë≠∑ÁöÑ drm ÂØ¶‰ΩúÁöÑ linux kernel</p>
<figure>
<img src="https://01.org/linuxgraphics/gfx-docs/maintainer-tools/_images/drm-intel-flow.svg" alt="ÈÄôÂÄã merge flow ÂæàË§áÈõúÔºåÊàë‰πüÈÇÑÊ≤íÊêûÊáÇ" /><figcaption>ÈÄôÂÄã merge flow ÂæàË§áÈõúÔºåÊàë‰πüÈÇÑÊ≤íÊêûÊáÇ</figcaption>
</figure>
</section>
<section id="Âú®-archlinux-‰∏äÁ∑®Ë≠Ø" class="level2">
<h2>Âú® ArchLinux ‰∏äÁ∑®Ë≠Ø</h2>
<p>Âπ∏Â•ΩÊàë‰∏çÂøÖ‰∫ÜËß£‰ªñÂÄëÊòØÊÄéÈ∫º mergeÔºåÂè™ÈúÄË¶Å build Ëµ∑‰æÜËÉΩÊ∏¨Ë©¶ÂäüËÉΩÊòØÂê¶Ê≠£Â∏∏Âç≥ÂèØ„ÄÇ</p>
<ul>
<li>‰ΩøÁî® AUR ‰∏äÈù¢ÁöÑ <a href="https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=linux-drm-tip-git&amp;id=f2f3487589a22ee728472259f4bd79af75bd782b">linux-drm-tip-git</a> ÈÄôÂÄã package Á∑®Ë≠ØÊúÄÊñ∞ÁöÑÁâàÊú¨</li>
<li>ÈÅáÂà∞ <code>make prepare</code> Ë©¢ÂïèÂèÉÊï∏ÊòØÂõ†ÁÇ∫ <code>config.x86-64</code> ÁöÑÁâàÊú¨‰∏çÂ§†Êñ∞
<ul>
<li>ÊàëÁõ¥Êé•Êâæ‰∫Ü <a href="https://aur.archlinux.org/packages/linux-mainline/">linux-mainline</a> ÁöÑ‰æÜÁî®</li>
</ul></li>
<li>ÂÖàÁî® <code>makepkg -Asi</code> Á∑®Ë≠ØÂÆâË£ù‰∏ÄÈÅç„ÄÇ</li>
<li>ÁÑ∂Âæå‰ΩøÁî®ÈÄôÂÄãÁâàÊú¨ÁöÑ kernel ÂæåÁôºÁèæ„ÄÅÊÅ©„ÄÅÂïèÈ°å‰æùËàä</li>
</ul>
</section>
<section id="Âä†Âø´Á∑®Ë≠ØÈÄüÂ∫¶" class="level2">
<h2>Âä†Âø´Á∑®Ë≠ØÈÄüÂ∫¶</h2>
<p>ÊàëÁî®‰∫ÜÂÖ©ÂÄãÂ∑•ÂÖ∑‰æÜÂä†ÈÄüÁ∑®Ë≠ØÈÄüÂ∫¶Ôºö</p>
<ul>
<li><a href="https://wiki.archlinux.org/index.php/ccache">ccache</a>: Âπ´ gcc ÂÅöÂø´ÂèñÔºåÊîπÂñÑÈáçË§áÁ∑®Ë≠ØÊâÄÈúÄÁöÑÊôÇÈñì</li>
<li><a href="https://wiki.archlinux.org/index.php/Modprobed-db">modprobed-db</a>: Ê∏õÂ∞ëÊâÄÈúÄÁ∑®Ë≠ØÁöÑÊ®°ÁµÑÊï∏</li>
</ul>
</section>
<section id="bisect" class="level2">
<h2>bisect</h2>
<p>Ë¶ÅÂæûËá≥Â∞ë 27000 Á≠ÜÁöÑ commit ‰∏≠ÊâæÈåØË™§ÔºåÁï∂ÁÑ∂‰∏çÊúÉ‰∏ÄÁ≠Ü‰∏ÄÁ≠ÜÂòóË©¶„ÄÇÈÄôÈÇä‰ΩøÁî®ÁöÑ bisect Â∞±ÊòØÁî®Á∂ìÂÖ∏ÁöÑÊºîÁÆóÊ≥ï„Äå‰∫åÂàÜÊêúÂ∞ãÊ≥ï„Äç‰æÜÂä†Âø´Â∞ãÊâæÁöÑÈÄüÂ∫¶„ÄÇ</p>
<section id="Ê≠•È©ü" class="level3">
<h3>Ê≠•È©ü</h3>
<ul>
<li>Á∑®Ë≠ØÂÆå‰πãÂæåÔºåÈÄ≤ <code>src/drm-tip</code> Âü∑Ë°å <code>git bisect start</code></li>
<li>Á¢∫Ë™çÂïèÈ°åÈÇÑÂú®ÔºåÊ®ôË®òÁÇ∫ÊúâÂïèÈ°åÁöÑÁâàÊú¨ <code>git bisect bad</code></li>
<li><code>git checkout</code> Âà∞Ë™çÁÇ∫Ê≤íÂïèÈ°åÁöÑÁâàÊú¨ÔºàÂõ†ÁÇ∫ÊàëÁü•ÈÅì 4.12 Ê≤íÊúâÂïèÈ°åÔºåÊâÄ‰ª•ÊàëÊâæÂà∞Â∞çÊáâÁöÑ commit ÊòØ<code>6f7da29</code>Ôºâ</li>
<li><code>makepkg -esfi</code> Á∑®Ë≠Ø‰∏¶ÂÆâË£ùÊ≠§ÁâàÊú¨
<ul>
<li>Âõ†ÁÇ∫ <code>git bisect</code> ÊúÉ checkout Âà∞‰∏çÂêåÁöÑÁâàÊú¨ÔºåÊâÄ‰ª•ÈúÄË¶ÅÁî® <code>-e</code> ‰æÜÂëäË®¥ makepkg ‰∏çË¶ÅÈáçÊñ∞ checkout</li>
</ul></li>
<li><p>ÈáçÈñãÊ©üÊ™¢Êü•ÂïèÈ°åÊòØÂê¶ÈÇÑÂú®ÔºåÊ≤íÊúâÂïèÈ°åÔºåÁî® <code>git bisect good</code> Ê®ôË®ò</p>
<pre class="shell"><code>&gt; git bisect good
Bisecting: 13952 revisions left to test after this (roughly 14 steps)
[73adb8c5b0ea15e3942ab5781eb3e72d4e028ada] Merge tag &#39;for-4.13/dm-fixes-2&#39; of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm</code></pre></li>
</ul>
</section>
<section id="È†ê‰º∞ÈÇÑË¶ÅÂπæÊ¨°Êü•Ë©¢" class="level3">
<h3>È†ê‰º∞ÈÇÑË¶ÅÂπæÊ¨°Êü•Ë©¢</h3>
<ul>
<li><code>git rev-list drm-tip ^6f7da290413b --count</code> ÂëäË®¥ÊàëÈÄôÂÖ©ÂÄã‰∏≠ÈñìÂ∑Æ‰∫Ü 27906 ÂÄã commit</li>
<li>ÊâÄ‰ª•ÊàëÈ†êÊúüÊúÄÂ§öÈÇÑÈúÄË¶Å 16 Ê¨°ÁöÑÁØ©ÈÅ∏ (<span class="math inline">\(log_2(27906)+1 \approx 15.77\)</span>)</li>
</ul>
</section>
<section id="ÁπºÁ∫åÂ∞ãÊâæÂïèÈ°å" class="level3">
<h3>ÁπºÁ∫åÂ∞ãÊâæÂïèÈ°å</h3>
<p>ÈÄôÈÇäÂ∞±ÊòØ‰∏çÊñ∑ÁöÑÈáçË§áÔºö</p>
<ul>
<li>Á∑®Ë≠Ø</li>
<li>Ê∏¨Ë©¶</li>
<li><code>git bisect [good|bad]</code></li>
</ul>
<pre class="half-page"><code>&gt; git bisect bad 73adb8c5b0ea
Bisecting: 6975 revisions left to test after this (roughly 13 steps)
[4f5dfdd29065a0d1d0e61d9744e14d1d852518be] Merge tag &#39;leds_for_4.13&#39; of git://git.kernel.org/pub/scm/linux/kernel/git/j.anaszewski/linux-leds

&gt; git bisect good 4f5dfdd29065
Bisecting: 3487 revisions left to test after this (roughly 12 steps)
[8c03cc85a035ae7a208c28c4382ecfeb6adf79a6] fs/proc/task_mmu.c: remove obsolete comment in show_map_vma()

&gt; git bisect bad 8c03cc85a035
Bisecting: 1723 revisions left to test after this (roughly 11 steps)
[2ceedf97aef41d071d897a6e6aec8c05fb707ec4] Merge tag &#39;dmaengine-4.13-rc1&#39; of git://git.infradead.org/users/vkoul/slave-dma

&gt; git bisect good 2ceedf97aef4
Bisecting: 818 revisions left to test after this (roughly 10 steps)
[04d4fb5fa63876d8e7cf67f2788aecfafc6a28a7] Merge branch &#39;drm-next-4.13&#39; of git://people.freedesktop.org/~agd5f/linux into drm-next

&gt; git bisect good 04d4fb5fa638
Bisecting: 420 revisions left to test after this (roughly 9 steps)
[00fc2c26bc46a64545cdf95a1511461ea9acecb4] drm: Remove unused drm_file parameter to drm_syncobj_replace_fence()

&gt; git bisect bad 00fc2c26bc46
Bisecting: 222 revisions left to test after this (roughly 8 steps)
[eafae133e48c9e5f5537d5c6df34eab912336b9a] Merge tag &#39;drm-msm-next-2017-06-20&#39; of git://people.freedesktop.org/~robclark/linux into drm-next

&gt; git bisect good eafae133e48c
Bisecting: 111 revisions left to test after this (roughly 7 steps)
[fc59921178fd63f1dbe445c2fc86e6ca997a4744] drm/i915/perf: Add more OA configs for BDW, CHV, SKL + BXT

&gt; git bisect good fc59921178fd
Bisecting: 55 revisions left to test after this (roughly 6 steps)
[7dd4f6729f9243bd7046c6f04c107a456bda38eb] drm/i915: Async GPU relocation processing

&gt; git bisect bad 7dd4f6729f92
Bisecting: 34 revisions left to test after this (roughly 5 steps)
[615c16a9d8649b9894592d11bc393e684b11e2ea] drm/i915/gvt: Refine virtual reset function

&gt; git bisect good 615c16a9d864
Bisecting: 17 revisions left to test after this (roughly 4 steps)
[f6262bda462e81e959b80a96dac799bd9df27f73] drm/i915: Don&#39;t enable backlight at setup time.

&gt; git bisect good f6262bda462e
Bisecting: 8 revisions left to test after this (roughly 3 steps)
[4c9c0d09741deab0aac76b83961cfe95b24f3e6f] drm/i915: Fix retrieval of hangcheck stats

&gt; git bisect good 4c9c0d09741d
Bisecting: 4 revisions left to test after this (roughly 2 steps)
[2889caa9232109afc8881f29a2205abeb5709d0c] drm/i915: Eliminate lots of iterations over the execobjects array

&gt; git bisect bad 2889caa92321
Bisecting: 1 revision left to test after this (roughly 1 step)
[507d977ff965682a925ffe479c95136680fcb77b] drm/i915: Pass vma to relocate entry

&gt; git bisect good 507d977ff965
Bisecting: 0 revisions left to test after this (roughly 0 steps)
[071750e550af46b5d3a84ad56c2a108c3e136284] drm/i915: Disable EXEC_OBJECT_ASYNC when doing relocations</code></pre>
</section>
<section id="ÊâæÂá∫ÊúâÂïèÈ°åÁöÑ-commit" class="level3">
<h3>ÊâæÂá∫ÊúâÂïèÈ°åÁöÑ commit</h3>
<p>‰∏çÊñ∑ÈáçË§á‰∏äÈù¢ÁöÑÊ≠•È©üÔºåÊúÄÂæåÊâæÂá∫Á¨¨‰∏ÄÂÄãÊúâÂïèÈ°åÁöÑ commit</p>
<pre><code>&gt; git bisect good 071750e550af
2889caa9232109afc8881f29a2205abeb5709d0c is the first bad commit</code></pre>
</section>
</section>
</section>
<section id="ÂæåË®ò" class="level1">
<h1>ÂæåË®ò</h1>
<p>ÈÄôÂÄãÈÅéÁ®ã‰∏¶‰∏çÊòØÂæàËºïÈ¨ÜÔºàÁ∑®Ë≠Ø‰∏ÄÊ¨°Ëá≥Â∞ëÈúÄË¶Å 10minÔºåÈÇÑË¶ÅÈáçÈñãÊ©üÊ∏¨Ë©¶ÔºâÔºåÂ∞áÈÄôÂÄãÊâæÂà∞ÁöÑÈÄôÂÄã commit ÂõûÂ†±‰∏äÂéª‰πãÂæåÔºåÈñãÁôºËÄÖÂæàÂø´ÁöÑÂ∞±ËÉΩÊâæÂà∞ÂïèÈ°åÁöÑÈóúÈçµÈªû„ÄÇ</p>
<p>ÊúÄÂæåÂæóÂà∞ÁöÑÁµêË´ñÊòØÔºåÈÄôÂÄãÂïèÈ°åÊáâË©≤ÊòØ‰æÜËá™ user space driver Ê≤íÊúâÂØ¶‰ΩúÊ≠£Á¢∫ÔºåÊñºÊòØÊàëÂõûÂéªÊâæ‰∫Ü intel-vaapi-driver ÁöÑ issue trackerÔºåÊâçÁôºÁèæÂà∞Âéü‰æÜÊó©Âú® 3 ÂÄãÊòüÊúüÂâçÂ∞±Êúâ‰∫∫<a href="https://github.com/01org/intel-vaapi-driver/issues/262">ÂõûÂ†±</a>ÈÅéÔºåËÄå‰∏î‰πüÂ∑≤Á∂ì‰øÆÊ≠£‰∏¶ merge Âõû master ‰∫Ü„ÄÇÂõß</p>
<p>ÈõñÁÑ∂ÊúÄÂæåÁôºÁèæ‰∏çÊòØ linux kernel ÁöÑÂïèÈ°åÔºå‰∏çÈÅéÈÄô‰πü‰æùÁÑ∂ÊòØÂÄãÂãôÂØ¶ÁöÑÈô§ÈåØÁ∂ìÈ©ó„ÄÇ</p>
</section>
<section id="ÂèÉËÄÉË≥áÊñô" class="level1">
<h1>ÂèÉËÄÉË≥áÊñô</h1>
<p><strong>drm/i915</strong></p>
<ul>
<li><a href="https://01.org/linuxgraphics/documentation/how-report-bugs">how to report bugs</a></li>
<li><a href="https://01.org/linuxgraphics/gfx-docs/maintainer-tools/drm-intel.html">drm-intel</a></li>
</ul>
<p><strong>git bisect</strong></p>
<ul>
<li><a href="https://wiki.archlinux.org/index.php/Bisecting_bugs">Bisecting bugs</a></li>
<li><a href="https://project-insanity.org/blog/2013/02/13/how-i-found-a-kernel-regression-using-git-bisect/">How I fixed a kernel regression using git bisect</a></li>
</ul>
</section>]]></description>
    <pubDate>Thu, 05 Oct 2017 00:00:00 UT</pubDate>
    <guid>https://op8867555.github.io/posts/2017-10-05-bisecting-linux-kernel-bug.html</guid>
    <dc:creator>Alex Lu</dc:creator>
</item>
<item>
    <title>Áî® Python Ë®àÁÆóÁ∂ìÁ∑ØÂ∫¶Â∞çÊáâÁöÑÈÑâÈéÆÂ∏ÇÂçÄ</title>
    <link>https://op8867555.github.io/posts/2017-09-16-python-getting-town-from-gps-coord.html</link>
    <description><![CDATA[<section id="tldr" class="level3">
<h3>TL;DR</h3>
<p>ÈÄôÁØáÊñáÁ´†Á≠ÜË®òÊúÄËøëÊúãÂèãÂïèÁöÑ‰∏ÄÂÄãÂïèÈ°åÔºö Â¶Ç‰Ωï‰∏çÈù†Â§ñÈÉ® API ÂèñÂæó‰∏ÄÂÄãÁ∂ìÁ∑ØÂ∫¶Â∫ßÊ®ôËêΩÂú®Âì™‰∏ÄÂÄãÈÑâÈéÆÂ∏ÇÂçÄ„ÄÇ</p>
<p>ÈÄôÈÇäÊáâÁî®ÊîøÂ∫ú open data ÁöÑ <a href="https://data.gov.tw/dataset/7441">ÈÑâÈéÆÂ∏ÇÂçÄÁïåÁ∑ö</a> Ë≥áÊñôÔºåÂä†‰∏ä python ÁöÑ shapely ÂÅöÁØÑÂúçÂà§Êñ∑„ÄÅÁî® rtree Âª∫Á´ãÁ¥¢ÂºïÂä†ÈÄüÊü•Ë©¢„ÄÇ</p>
</section>
<section id="ÂØ¶‰ΩúÁ≠ÜË®ò" class="level1">
<h1>ÂØ¶‰ΩúÁ≠ÜË®ò</h1>
<p>ÊÉ≥Ê≥ïÂæàÂñÆÁ¥îÔºåÂ∞±ÊòØÈÄèÈÅéÂà§Êñ∑Â∫ßÊ®ô(Ëº∏ÂÖ•ÁöÑÁ∂ìÁ∑ØÂ∫¶)ÊúâÊ≤íÊúâËêΩÂú®Â§öÈÇäÂΩ¢(ÈÑâÈéÆÈÇäÁïå)ÁöÑÁØÑÂúçÂÖß„ÄÇ</p>
<section id="Ë≥áÊñô‰æÜÊ∫ê" class="level2">
<h2>Ë≥áÊñô‰æÜÊ∫ê</h2>
<p>ÊîøÂ∫úÊúâÊèê‰æõ<a href="https://data.gov.tw/dataset/7441">ÈÑâÈéÆÂ∏ÇÂçÄÁïåÁ∑ö</a>Ë≥áÊñôÔºåÊòØ‰∏ÄÂÄã <a href="https://en.wikipedia.org/wiki/Shapefile">Shapefile</a>„ÄÇ Python Ë¶ÅËÆÄÂèñ .shp Ê™î‰∏çÈõ£ÔºåÊúâÂæàÂ§ö library ÂèØ‰ª•ÂÅöÂà∞ÔºåÂèØ‰ª•ÂèÉËÄÉ<a href="https://gis.stackexchange.com/questions/113799/how-to-read-a-shapefile-in-python">ÈÄôÁØá</a>„ÄÇ</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode python"><code class="sourceCode python"><a class="sourceLine" id="cb1-1" data-line-number="1"><span class="im">import</span> fiona</a>
<a class="sourceLine" id="cb1-2" data-line-number="2"><span class="im">from</span> shapely.geometry <span class="im">import</span> shape, Point</a>
<a class="sourceLine" id="cb1-3" data-line-number="3"></a>
<a class="sourceLine" id="cb1-4" data-line-number="4">collection <span class="op">=</span> fiona.<span class="bu">open</span>(<span class="st">&#39;./TOWN_MOI_1060525.shp&#39;</span>)</a></code></pre></div>
</section>
<section id="Êü•Ë©¢" class="level2">
<h2>Êü•Ë©¢</h2>
<p>ÈÄôÈÇäÊàë‰ΩøÁî®ÁöÑÊòØ <code>shapely</code> ÈÄôÂÄãÂ•ó‰ª∂‰æÜË®àÁÆóÂ∫ßÊ®ôÊúâÁÑ°Â∫ßËêΩÊñºÊüêÂÄãÂ§öÈÇäÂΩ¢„ÄÇ ÊâÄ‰ª•ÂÖàÂ∞á .shp ÂÖßÁöÑ geometry Âª∫Á´ãÊàê shapely ÁöÑ Polygon Áâ©‰ª∂Ôºö</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode python"><code class="sourceCode python"><a class="sourceLine" id="cb2-1" data-line-number="1">shapes <span class="op">=</span> {}</a>
<a class="sourceLine" id="cb2-2" data-line-number="2">properties <span class="op">=</span> {}</a>
<a class="sourceLine" id="cb2-3" data-line-number="3"></a>
<a class="sourceLine" id="cb2-4" data-line-number="4"><span class="cf">for</span> f <span class="kw">in</span> collection:</a>
<a class="sourceLine" id="cb2-5" data-line-number="5">    town_id <span class="op">=</span> <span class="bu">int</span>(f[<span class="st">&#39;properties&#39;</span>][<span class="st">&#39;TOWNCODE&#39;</span>])</a>
<a class="sourceLine" id="cb2-6" data-line-number="6">    shapes[town_id] <span class="op">=</span> shape(f[<span class="st">&#39;geometry&#39;</span>])</a>
<a class="sourceLine" id="cb2-7" data-line-number="7">    properties[town_id] <span class="op">=</span> f[<span class="st">&#39;properties&#39;</span>]</a></code></pre></div>
<p>ÈÄôÊ®£Â∞±ÂèØ‰ª•Áî® <code class="sourceCode python">polygon.contains(Point(x, y))</code> Âà§Êñ∑‰∏ÄÂÄãÈªûÊúâÊ≤íÊúâÂ∫ßËêΩÊñºÂÖ∂‰∏≠„ÄÇÂ∞çÈÄôÊâÄÊúâÁöÑÂ§öÈÇäÂΩ¢Ëµ∞Ë®™‰∏ÄÈÅçÂ∞±ÂèØ‰ª•Áü•ÈÅìÂ∫ßËêΩÊñºÂì™Ë£°Ôºö</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode python"><code class="sourceCode python"><a class="sourceLine" id="cb3-1" data-line-number="1"><span class="kw">def</span> search(x, y):</a>
<a class="sourceLine" id="cb3-2" data-line-number="2">    <span class="cf">return</span> <span class="bu">next</span>((town_id</a>
<a class="sourceLine" id="cb3-3" data-line-number="3">                 <span class="cf">for</span> town_id <span class="kw">in</span> shapes</a>
<a class="sourceLine" id="cb3-4" data-line-number="4">                 <span class="cf">if</span> shapes[town_id].contains(Point(x, y))), <span class="va">None</span>)</a></code></pre></div>
</section>
<section id="Âä†ÈÄüÊü•Ë©¢" class="level2">
<h2>Âä†ÈÄüÊü•Ë©¢</h2>
<p>‰∏äÈù¢ÁöÑÊü•Ë©¢ÂæàÂñÆÁ¥îÂú∞Ê∏¨Ë©¶ÂÖ®Âè∞ÁÅ£ 368 ÂÄãÈÑâÈéÆÂ∏ÇÁöÑÂ§öÈÇäÂΩ¢‰∫Ü‰∏ÄÈÅçÔºåÂ¶ÇÊûúÊòØÂ∞èÈáèÁöÑËº∏ÂÖ•Ë≥áÊñôÊáâË©≤ÈÇÑÁÆóÊòØÂèØ‰ª•Êé•ÂèóÔºå‰∏çÈÅéÂ¶ÇÊûúÈúÄË¶ÅÊõ¥Á¥∞ÁöÑÊØîÂ∞çÔºàË®àÁÆóÂà∞ÊùëÈáåÔºâ„ÄÅÊàñÊòØÊúâÂ§ßÈáèË≥áÊñôË¶ÅË®àÁÆóÁöÑË©±ÔºåÈÄôÊ®£ÁöÑÊñπÊ≥ïÈÇÑÊòØ‰∏çÂ§†ÊúâÊïàÁéá„ÄÇ</p>
<p>Âõ†ÁÇ∫Âú®Êü•Ë©¢‰∏ÄÂÄãÂè∞ÂåóÁöÑÂ∫ßÊ®ôÊôÇÔºåÂÖ∂ÂØ¶‰∏çÁî®ËÄÉÊÖÆÈõ¢‰ªñÂ§™ÈÅ†ÁöÑÂè∞‰∏≠„ÄÅÂè∞Âçó‚Ä¶Á≠âÂÖ∂‰ªñÈÑâÈéÆÂ∏ÇÂçÄ„ÄÇ</p>
<p>Âü∫ÊñºÈÄôÊ®£ÁöÑÊÉ≥Ê≥ïÔºåÈÄôÈÇäÁî® R-Tree ÈÄôÂÄã<a href="https://en.wikipedia.org/wiki/R-tree">Ë≥áÊñôÁµêÊßã</a>‰æÜÂπ´ÈÄô‰∫õÂ§öÈÇäÂΩ¢ÁöÑ bounding boxÔºàÂ§öÈÇäÂΩ¢ÁöÑÊúÄÂ∞èÂ§ñÊé•Áü©ÂΩ¢ÔºâÂÅöÁ¥¢ÂºïÔºö</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode python"><code class="sourceCode python"><a class="sourceLine" id="cb4-1" data-line-number="1"><span class="im">from</span> rtree <span class="im">import</span> index</a>
<a class="sourceLine" id="cb4-2" data-line-number="2">idx <span class="op">=</span> index.Index()</a>
<a class="sourceLine" id="cb4-3" data-line-number="3"><span class="cf">for</span> town_id, shape <span class="kw">in</span> shapes.items():</a>
<a class="sourceLine" id="cb4-4" data-line-number="4">    idx.insert(town_id, shape.bounds)</a></code></pre></div>
<p>ÈÄôÊ®£Â∞±ÂèØ‰ª•ÈÄèÈÅé <code class="sourceCode python">idx.intersection((x, y))</code> ‰æÜÊâæÂá∫Ë∑üÂ∫ßÊ®ôÊúâ‰∫§ÈõÜÁöÑ bounding box„ÄÇÊàëÂÄëÂè™ÈúÄË¶ÅÊ™¢Êü•Â∫ßÊ®ôËêΩÂú®ÂÖ∂‰∏≠ÁöÑÂì™‰∏ÄÂÄãÁöÑÂ§öÈÇäÂΩ¢Âç≥ÂèØÔºö</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode python"><code class="sourceCode python"><a class="sourceLine" id="cb5-1" data-line-number="1"><span class="kw">def</span> search(x, y):</a>
<a class="sourceLine" id="cb5-2" data-line-number="2">    <span class="cf">return</span> <span class="bu">next</span>((town_id</a>
<a class="sourceLine" id="cb5-3" data-line-number="3">                 <span class="cf">for</span> town_id <span class="kw">in</span> idx.intersection((x, y))</a>
<a class="sourceLine" id="cb5-4" data-line-number="4">                 <span class="cf">if</span> shapes[town_id].contains(Point(x, y))), <span class="va">None</span>)</a></code></pre></div>
<p>ÈÄôÊ®£Êü•Ë©¢ÁöÑÊôÇÈñìÂ∞±ÂèØ‰ª•Âæû <span class="math inline">\(O(N)\)</span> Âä†Âø´Âà∞ <span class="math inline">\(O(log_M N + M)\)</span> ‰∫Ü„ÄÇ‰ª•ÈÑâÈéÆÂ∏ÇÂçÄ‰æÜË™™ÔºåÂú®ÊàëÁöÑÁ≠ÜÈõª‰∏äÔºåÂæûÊú¨‰æÜÊØèÊ¨°Âπ≥ÂùáÈúÄË¶Å 3.95ms ÊèêÂçáÂà∞ÊØèÊ¨°Âπ≥Âùá 223 ¬µsÔºåËá≥Â∞ëÂø´‰∫Ü 16 ÂÄç„ÄÇ</p>
<figure>
<img src="https://i.imgur.com/MDrOi7i.png" alt="‰ª•üáπüáºÁ∏ΩÁµ±Â∫ú‰æÜËàâ‰æãÔºåÂÆÉËêΩÂú®Ëê¨ËèØÂçÄË∑ü‰∏≠Ê≠£ÂçÄÂÖ©ÂÄã bounding boxes Ë£°Èù¢" /><figcaption>‰ª•üáπüáºÁ∏ΩÁµ±Â∫ú‰æÜËàâ‰æãÔºåÂÆÉËêΩÂú®Ëê¨ËèØÂçÄË∑ü‰∏≠Ê≠£ÂçÄÂÖ©ÂÄã bounding boxes Ë£°Èù¢</figcaption>
</figure>
</section>
</section>]]></description>
    <pubDate>Sat, 16 Sep 2017 00:00:00 UT</pubDate>
    <guid>https://op8867555.github.io/posts/2017-09-16-python-getting-town-from-gps-coord.html</guid>
    <dc:creator>Alex Lu</dc:creator>
</item>
<item>
    <title>ÊâãÂãïÁ∑®Ë≠Ø vs Á∑®Ë≠ØÂ•ΩÁöÑ tensorflow</title>
    <link>https://op8867555.github.io/posts/2017-09-09-tensorflow-prebuilt-vs-built-from-source.html</link>
    <description><![CDATA[<p>‰∫ÇÁúãÊñáÁ´†ÊôÇÁôºÁèæÂà∞ tensorflow prebuilt ÁâàË∑üËá™Â∑± build ÊïàËÉΩÊúâËêΩÂ∑ÆÔºàÁèæÂú®ÊÉ≥ÊÉ≥ÈÄô‰πüÊòØÁêÜÊâÄÁï∂ÁÑ∂ÁöÑ‰∫ãÔºâÔºåÊñºÊòØÂ∞±‰æÜËá™Â∑±Á∑®Á∑®ÁúãÂà∞Â∫ïÂ∑ÆÂ§öÂ∞ë‰∫Ü„ÄÇ</p>
<section id="ÂØ¶È©ó" class="level1">
<h1>ÂØ¶È©ó</h1>
<section id="‰ΩøÁî®ÁöÑÊ©üÂô®" class="level2">
<h2>‰ΩøÁî®ÁöÑÊ©üÂô®</h2>
<p>Thinkpad X1 Carbon 2017ÔºåÂÆÉÁöÑ CPU ÊòØ Intel ÁöÑ i7-7500UÔºàÂ∞çÔºåÈÄôÈ°ÜÁµïÂ∞ç‰∏çÈÅ©ÂêàÊãø‰æÜÁÆóÈÄôÂÄãÔºâ</p>
</section>
<section id="‰ΩøÁî®ÁöÑ‰∏çÂêåÁâàÊú¨" class="level2">
<h2>‰ΩøÁî®ÁöÑ‰∏çÂêåÁâàÊú¨</h2>
<ul>
<li><p><a href="https://pypi.python.org/pypi/tensorflow">PyPI ‰∏äÁöÑÁâàÊú¨</a>ÔºåÊ≤íÊúâÊ©üÂô®Áõ∏ÈóúÁöÑÊúÄ‰Ω≥Âåñ„ÄÇ</p></li>
<li><p><a href="https://software.intel.com/en-us/articles/tensorflow-optimizations-on-modern-intel-architecture">intel Êèê‰æõÁöÑÁâàÊú¨</a> ‰ΩøÁî® intel ÁöÑ Math Kernel libraryÔºå‰ΩÜÊòØÊ≤íÊúâÊ©üÂô®Áõ∏ÈóúÁöÑÊúÄ‰Ω≥Âåñ<span><label for="sn-1" class="margin-toggle sidenote-number"></label><input type="checkbox" id="sn-1" class="margin-toggle"/><span class="sidenote">Ê≤íÊúâÂÅöÊ©üÂô®Áõ∏ÈóúÁöÑÊúÄ‰Ω≥ÂåñÊôÇÊúÉÊúâÊèêÈÜí<br />
<br />
</span></span>„ÄÇ</p></li>
<li><p>Ëá™Â∑± build ÔºåÁî®ÁöÑÊòØ tensorflow ÂÆòÊñπ github repo ÁöÑ <a href="https://github.com/tensorflow/tensorflow/tree/32ffc5a81eee8c39bbe71536212a773b1ffd4eb2">32ffc5a81</a></p>
<ul>
<li><code>./configure</code> ÈÉΩÁî®È†êË®≠ÂÄº (<code>-march=native</code> ÈñãÂïüÁï∂‰∏ãÊ©üÂô®Êû∂ÊßãÁöÑÊúÄ‰Ω≥ÂåñÔºâ</li>
<li><code>--config=mkl</code> Âêå intel ÁâàÊú¨</li>
</ul></li>
</ul>
</section>
<section id="‰ΩøÁî®ÁöÑÊ∏¨Ë©¶Ê°à‰æã" class="level2">
<h2>‰ΩøÁî®ÁöÑÊ∏¨Ë©¶Ê°à‰æã</h2>
<p>‰ΩøÁî®‰∫Ü keras ÁöÑÂπæÂÄã <a href="https://github.com/fchollet/keras/tree/master/examples">example</a> ‰æÜÊ∏¨Ë©¶<span><label for="sn-2" class="margin-toggle sidenote-number"></label><input type="checkbox" id="sn-2" class="margin-toggle"/><span class="sidenote">ÂïèÊàëÁÇ∫‰ªÄÈ∫ºË¶ÅÁî® keras ËÄå‰∏çÁî® tensorflow Â∞±Â•ΩÔºüÂõ†ÁÇ∫ÊàëÈÇÑÊÉ≥Ê∏¨ theano Âïä‚Ä¶<br />
<br />
</span></span>ÔºåÂàÜÂà•ÊòØÔºö</p>
<ul>
<li>mnist-mlp</li>
<li>mnist-cnn</li>
<li>cifar10-cnn</li>
</ul>
</section>
<section id="Ê∏¨Ë©¶ÁµêÊûú" class="level2">
<h2>Ê∏¨Ë©¶ÁµêÊûú</h2>
<table>
<caption>ÂØ¶È©óÁµêÊûúÔºàÊï∏ÂÄºÊòØÊØèÊ¨° epoch ÊâÄËä±ÁöÑÊôÇÈñìÔºåË∂äÂ∞èË∂äÂ•ΩÔºâ</caption>
<thead>
<tr class="header">
<th style="text-align: left;">testcase</th>
<th style="text-align: right;">pip</th>
<th style="text-align: right;">intel</th>
<th style="text-align: right;">built</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">mnist-mlp</td>
<td style="text-align: right;">9.5s</td>
<td style="text-align: right;">10.5s</td>
<td style="text-align: right;">10.5s</td>
</tr>
<tr class="even">
<td style="text-align: left;">mnist-cnn</td>
<td style="text-align: right;">175.5s</td>
<td style="text-align: right;">63s</td>
<td style="text-align: right;">60s</td>
</tr>
<tr class="odd">
<td style="text-align: left;">cifar10-cnn[^1]</td>
<td style="text-align: right;">275s</td>
<td style="text-align: right;">200s</td>
<td style="text-align: right;">200s</td>
</tr>
</tbody>
</table>
<p><span><label for="sn-3" class="margin-toggle">&#8853;</label><input type="checkbox" id="sn-3" class="margin-toggle"/><span class="marginnote"> [^1] Âõ†ÁÇ∫Êúâ 200 ÂÄã epoch Ë¶ÅË∑ëÔºåÂØ¶Âú®Ë¶ÅËä±ÂæàÂ§öÊôÇÈñìÔºåÊâÄ‰ª•ÈÄôÈÇäÂ∞±ÈÉΩÂè™ÂèñÂ§ßÊ¶Ç 3~4 ÂÄã epoch ÁöÑÊôÇÈñì‰æÜÁÆó<br />
<br />
</span></span></p>
</section>
<section id="ÁµêË´ñ" class="level2">
<h2>ÁµêË´ñ</h2>
<ul>
<li>Â¶ÇÊûúÊòØÁúüÂøÉÊÉ≥Ë¶ÅÁî® Intel ÁöÑ CPU Ë∑ë tensorflow ‚Ä¶
<ul>
<li>‚Ä¶‰πüÈ°òÊÑèËá™Â∑±Ëä±ÊôÇÈñìÁ∑®Ë≠ØÔºåÈÇ£<strong>ÊâãÂãïÁ∑®Ë≠Ø</strong>ÊòØÔºàÂü∑Ë°åÊôÇÔºâÊúÄÂø´ÁöÑÈÅ∏È†Ö</li>
<li>‚Ä¶Âçª‰∏çÊÉ≥Ëá™Â∑±Á∑®Ôºå‰ΩÜÂèØ‰ª•Êé•Âèó‰∏çÊòØÊúÄÊñ∞ÁöÑÁâàÊú¨ÔºåÈÇ£Áõ¥Êé•‰ΩøÁî®<a href="https://software.intel.com/en-us/articles/tensorflow-optimizations-on-modern-intel-architecture"><strong>intel Êèê‰æõÁöÑÁâàÊú¨</strong></a></li>
</ul></li>
<li>Â¶ÇÊûúÊ≤íÈÇ£È∫ºÁúüÂøÉÊÉ≥Áî®ÔºåÂè™ÊòØÂÖàÁî® CPU Áé©Áé©ÁúãÔºåÈÇ£<a href="https://pypi.python.org/pypi/tensorflow"><strong>Áõ¥Êé•Áî® pip Ë£ù</strong></a>ÊòØÊúÄÁ∞°ÊòìÁöÑÈÅ∏È†Ö„ÄÇ</li>
<li><em>ÁúüÂøÉÊÉ≥Ë∑ë tensorflow ÈÇÑÊòØÂéªÂºÑÂÄãÊúâ GPU ÁöÑÁí∞Â¢ÉÂêß‚Ä¶</em>
<ul>
<li>Áî®‰∫Ü GTX 1060 6GB ÁöÑÊ°åÈõªË∑ë cifar10-cnn Ôºå‰∏ÄÂÄã epoch Âè™Ë¶Å 25s</li>
</ul></li>
</ul>
</section>
</section>]]></description>
    <pubDate>Sat, 09 Sep 2017 00:00:00 UT</pubDate>
    <guid>https://op8867555.github.io/posts/2017-09-09-tensorflow-prebuilt-vs-built-from-source.html</guid>
    <dc:creator>Alex Lu</dc:creator>
</item>
<item>
    <title>Á≠ÜË®òÔºö DS216j ÂÆâË£ù shadowsocks server</title>
    <link>https://op8867555.github.io/posts/2017-08-27-ds216j-shadowsocks.html</link>
    <description><![CDATA[<p>ÊúÄËøëË¶™ÊàöÂºÑ‰∫ÜÂè∞ Synology DS216j ÊÉ≥Êãø‰æÜÊû∂ shadowsocks ÁöÑ serverÔºåÈÄôÁØáÊñáÁ´†Á≠ÜË®òÊàëÊû∂ÈÄôÂÄã server ÊâÄËµ∞ÁöÑË∑Ø„ÄÇ</p>
<section id="changelogs" class="level3">
<h3>changelogs</h3>
<ul>
<li>2017-10-12 Á¥ÄÈåÑ‰∏Ä‰∏ãÔºåÁèæÂú®‰∏äÊ∏∏ÊúâÁ∑®Â•ΩÁöÑ package ËÉΩÁî®‰∫Ü</li>
</ul>
</section>
<section id="ÊäòÈ®∞ÈÅéÁ®ã" class="level1">
<h1>ÊäòÈ®∞ÈÅéÁ®ã</h1>
<p>ÊèêÂà∞Âú® NAS ‰∏äÊû∂ shadowsocksÔºåÂèØ‰ª•Êü•Âà∞ÂæàÂ§öÁî® docker ÁöÑËß£Ê±∫ÊñπÊ≥ïÔºå‰∏çÈÅéÁ∂≤Ë∑Ø‰∏äÁöÑÂπæÁØáÊñáÁ´†ÈÉΩË™™ÈÄôÂè∞Ê©üÂô®‰∏çËÉΩÁî® dockerÔºåÊâÄ‰ª•ÊàëÁõ¥Êé•ÂæÄ binary ÁöÑÊñπÊ≥ïÂâçÈÄ≤„ÄÇ</p>
<p>‰∏ÄÈñãÂßãÁúãÂà∞ÁöÑÊòØÈÄôÁØá <a href="http://jexbat.com/2016/NAS-Shadowsocks/">Synology DS216Play ÂÆâË£Ö ShadowSocks</a>ÔºåÂæûÈÄôÁØáÊñáÁ´†‰∏≠ÂæóÂá∫Ôºö</p>
<ul>
<li>Âéü‰æÜÊúâ package manager ÂèØ‰ª•Áî®</li>
<li>shadowsocks ÊúâÁî® python Ë∑ü libev ÁöÑÂØ¶‰ΩúÂèØ‰ª•ÈÅ∏</li>
</ul>
<section id="ÂÆâË£ùpackage-manager" class="level2">
<h2>ÂÆâË£ùpackage manager</h2>
<p>ÊúùËëóÂÆâË£ù package manager ÁöÑÊñπÂêëÂâçÈÄ≤ÂæåÊâæÂà∞‰∫ÜÈÄôÁØá<a href="https://ky0n.xyz/synology-ds216j-optware-ipkg-init/">Synology DS216j Optware IPKG ‰ªãÁ¥π</a>„ÄÇ<br />
Áúã‰∫ÜÁúãÁôºÁèæÈÄôÊòØÁØáÁøªË≠ØÊñáÔºåËÄåÂéüÊñáÊúâ‰∫ÜÊõ¥Êñ∞ÁöÑ<a href="http://jasmin.sakura.ne.jp/blog/0245">ÁâàÊú¨üáØüáµ</a>ÔºåÁôºÁèæÂà∞Êúâ <a href="https://github.com/Entware-ng/Entware-ng/">entware-ng</a> ÈÄôÂÄãÊØî ipkg Êõ¥Êñ∞ÁöÑ package manager ËÉΩÁî®ÔºåËÄå‰∏îÂ∑≤Á∂ìÊúâ shadowsocks ÁöÑ<a href="http://pkg.entware.net/binaries/armv7/Packages.html">Â•ó‰ª∂ËÉΩÁî®</a>„ÄÇ</p>
</section>
<section id="ÂÆâË£ù-entware-ng" class="level2">
<h2>ÂÆâË£ù entware-ng</h2>
<p>ÂÆâË£ùÁöÑÈÅéÁ®ã‰∏çÈõ£ÔºåÂ§ßËá¥‰∏äÂ∞±ÊòØÈñãÂ•ΩSSH„ÄÅÁÖßËëó<a href="https://github.com/Entware-ng/Entware-ng/wiki/Install-on-Synology-NAS">ÂÖ∂ wiki ‰∏äÂØ´ÁöÑÊ≠•È©ü</a>Â∞±Ë°å„ÄÇ</p>
<p>Á≠ÜË®ò‰∏Ä‰∏ãÊ≠•È©üÔºö</p>
<ul>
<li><p>Âª∫Á´ã‰∏ÄÂÄãÂ•ó‰ª∂ÁÆ°ÁêÜÁî®ÁöÑÁõÆÈåÑÔºåÂõ†ÁÇ∫ÈüåÈ´îÊõ¥Êñ∞ÊúÉÊ∏Ö /opt ÔºåÊâÄ‰ª•Ë¶ÅÂú®Â§ñÈù¢Âª∫‰∏¶ symlink ÂõûÂéªÔºö</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode bash"><code class="sourceCode bash"><a class="sourceLine" id="cb1-1" data-line-number="1"><span class="fu">mkdir</span> -p /volume1/@entware-ng/opt</a>
<a class="sourceLine" id="cb1-2" data-line-number="2"><span class="fu">rm</span> -rf /opt</a>
<a class="sourceLine" id="cb1-3" data-line-number="3"><span class="fu">ln</span> -sf /volume1/@entware-ng/opt /opt</a></code></pre></div></li>
<li><p>ÂÆâË£ù entware</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode bash"><code class="sourceCode bash"><a class="sourceLine" id="cb2-1" data-line-number="1"><span class="fu">wget</span> -O - http://pkg.entware.net/binaries/armv7/installer/entware_install.sh <span class="kw">|</span> <span class="ex">/bin/sh</span></a></code></pre></div></li>
<li><p>Ë®≠ÂÆöÂïüÂãïËÖ≥Êú¨ÔºàÈáçÈñãÊ©üÊôÇÊää entware Ë£ùÁöÑÊúçÂãô‰πüÂ∏∂Ëµ∑‰æÜÔºâ<br />
Á∑®ËºØ /usr/local/etc/rc.d/entware-startup.sh ÔºàÊïôÂ≠∏‰∏äÊ≤íÊúâÔºå‰ΩÜÊòØÊàëÊúâÈ†Ü‰æøÂÅö <code>chmod +x</code>Ôºâ</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode bash"><code class="sourceCode bash"><a class="sourceLine" id="cb3-1" data-line-number="1"><span class="co">#!/bin/sh</span></a>
<a class="sourceLine" id="cb3-2" data-line-number="2"></a>
<a class="sourceLine" id="cb3-3" data-line-number="3"><span class="kw">case</span> <span class="va">$1</span><span class="kw"> in</span></a>
<a class="sourceLine" id="cb3-4" data-line-number="4">    start<span class="kw">)</span></a>
<a class="sourceLine" id="cb3-5" data-line-number="5">    <span class="fu">mkdir</span> -p /opt</a>
<a class="sourceLine" id="cb3-6" data-line-number="6">    <span class="fu">mount</span> -o bind /volume1/@entware-ng/opt /opt</a>
<a class="sourceLine" id="cb3-7" data-line-number="7">    <span class="ex">/opt/etc/init.d/rc.unslung</span> start</a>
<a class="sourceLine" id="cb3-8" data-line-number="8">    <span class="kw">;;</span></a>
<a class="sourceLine" id="cb3-9" data-line-number="9">    stop<span class="kw">)</span></a>
<a class="sourceLine" id="cb3-10" data-line-number="10">    <span class="kw">;;</span></a>
<a class="sourceLine" id="cb3-11" data-line-number="11"><span class="kw">esac</span></a></code></pre></div></li>
<li><p>Âú®ÁôªÂÖ•ÊôÇËá™ÂãïÊää <code>/opt/bin</code> <code>/opt/sbin</code>Âä†Âà∞ <code>PATH</code> Ë£°Èù¢ÔºöÂú® /etc/profile ÂÖßÂä†‰∏ä‰∏ÄË°å</p>
<pre><code>. /opt/etc/profile</code></pre></li>
</ul>
<p>Ë£ùÂÆå‰πãÂæåÂ∞±ÊòØÈñãÂøÉÂú∞‰æÜË£ù shadowsocks</p>
<pre><code>opkg update
opkg install shadowsocks-libev</code></pre>
<p><del>‰ΩÜÊòØË£ùÂÆåÂçªÁôºÁèæÊ≤íÊúâ <code>ss-server</code> ÈÄôÂÄãÂü∑Ë°åÊ™îÔºÅÂéüÂõ†‰ºº‰πéÊòØÂõ†ÁÇ∫ entware-ng Ê≤íÊúâË∑ü‰∏äÊµÅÁöÑ openwrt ÂêåÊ≠• <span><label for="sn-1" class="margin-toggle sidenote-number"></label><input type="checkbox" id="sn-1" class="margin-toggle"/><span class="sidenote"><a href="https://github.com/Entware-ng/entware-packages/commit/e3793bbbde8b907842f84731bfec292ccb069114" class="uri">https://github.com/Entware-ng/entware-packages/commit/e3793bbbde8b907842f84731bfec292ccb069114</a><br />
<br />
</span></span>ÔºåËÄå‰∏çÁü•ÁÇ∫‰ΩïÁöÑÊòéÊòéÂ∞±ÊúâÊñ∞ÁöÑ Makefile ÔºåÈô§‰∫Ü mipsel ‰ª•Â§ñÂçªÊ≤íÊúâÊñ∞ÁöÑ binary package ËÉΩÁî®„ÄÇ</del></p>
<section id="Êõ¥Êñ∞" class="level3">
<h3>2017/10/12 Êõ¥Êñ∞</h3>
<p>Ââç‰∏ÄÈô£Â≠ê entware ÊúâË∑ü‰∏äÊ∏∏ÂêåÊ≠•ÈÅéÔºåÊâÄ‰ª•Áõ¥Êé•ÂÆâË£ù <code>shadowsocks-libev-ss-server</code> Ë∑ü <code>shadowsocks-libev-config</code> Â∞±Ë°å‰∫Ü</p>
<pre><code>opkg install shadowsocks-libev-config
opkg install shadowsocks-libev-ss-server</code></pre>
</section>
</section>
<section id="ÊâãÂãïÁ∑®Ë≠Ø" class="level2">
<h2>ÊâãÂãïÁ∑®Ë≠Ø</h2>
<p>Ê≤íËæ¶Ê≥ïÔºåÂè™Â•Ω‰æÜËá™Â∑±Á∑®„ÄÇÂπ∏Â•Ω entware ÁöÑ wiki È†Å‰∏ä‰πüÊúâ<a href="https://github.com/Entware-ng/Entware-ng/wiki/Compile-packages-from-sources">ÊïôÂ≠∏</a>Ôºå‰πüÊòØÁÖßËëóÂÅöÂ∞±Â•Ω„ÄÇ</p>
<p>Entware-ng Áî®ÁöÑÊòØ OpenWrt BuildrootÔºåÊâÄ‰ª•ÈúÄË¶ÅÂÖàË£ùÂ•Ω<a href="http://wiki.openwrt.org/doc/howto/buildroot.exigence#install_procedure_on_linux">ÂÆÉ‰æùË≥¥ÁöÑÂ•ó‰ª∂</a>„ÄÇ</p>
<p>ÁÇ∫‰∫Ü‰∏çÊää‰∏ªÂäõÊ©üÁöÑ Arch Linux Áµ¶ÊêûÈ´í‰∫ÜÔºåÊàëÊ±∫ÂÆöÁî®Êâæ docker ÁöÑÊñπÂºè‰æÜËß£Ê±∫„ÄÇ<br />
Á∂≤Ë∑Ø‰∏äÂèØ‰ª•ÊâæÂà∞‰∏ÄÂÄãÁî® arch ÁÇ∫Â∫ïÁöÑ Dockerfile(<a href="https://github.com/jannispinter/arch-openwrt-buildroot">arch-docker-buildroot</a>)Ôºå‰ΩÜÊòØÂØ¶ÈöõÁ∑®Ë≠ØÊôÇÊúÉÂá∫ÂÖà‰∏Ä‰∫õÁâàÊú¨‰∏äÁöÑ‰∏çÁõ∏ÂÆπÂïèÈ°åÔºåÊâÄ‰ª•ÊàëÈÇÑÊòØ‰πñ‰πñÁöÑÁî® ubuntu ÁöÑ image ‰æÜÂÅö„ÄÇ</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode dockerfile"><code class="sourceCode dockerfile"><a class="sourceLine" id="cb7-1" data-line-number="1"><span class="kw">FROM</span> ubuntu</a>
<a class="sourceLine" id="cb7-2" data-line-number="2"><span class="kw">RUN</span> apt-get update</a>
<a class="sourceLine" id="cb7-3" data-line-number="3"><span class="kw">RUN</span> DEBIAN_FRONTEND=noninteractive apt-get install -y build-essential subversion libncurses5-dev zlib1g-dev gawk gcc-multilib flex git-core gettext libssl-dev unzip python-dev python file wget sudo</a>
<a class="sourceLine" id="cb7-4" data-line-number="4"></a>
<a class="sourceLine" id="cb7-5" data-line-number="5"><span class="co"># Á∑®Ë≠ØÊôÇÈúÄË¶ÅÈùû root Â∏≥Ëôü</span></a>
<a class="sourceLine" id="cb7-6" data-line-number="6"><span class="kw">RUN</span> useradd -m openwrt &amp;&amp;\</a>
<a class="sourceLine" id="cb7-7" data-line-number="7">echo <span class="st">&#39;openwrt ALL=NOPASSWD: ALL&#39;</span> &gt; /etc/sudoers.d/openwrt</a>
<a class="sourceLine" id="cb7-8" data-line-number="8"><span class="kw">USER</span> openwrt</a>
<a class="sourceLine" id="cb7-9" data-line-number="9"><span class="kw">WORKDIR</span> /home/openwrt</a>
<a class="sourceLine" id="cb7-10" data-line-number="10"><span class="kw">CMD</span> [<span class="st">&quot;/bin/bash&quot;</span>]</a></code></pre></div>
<p>docker Áí∞Â¢ÉÊ∫ñÂÇôÂ•Ω„ÄÅÈÄ≤ÂÖ•ÂÖ∂ shell ‰πãÂæå<span><label for="sn-2" class="margin-toggle sidenote-number"></label><input type="checkbox" id="sn-2" class="margin-toggle"/><span class="sidenote">ÊàëÁî®‰∏çÂêåÁöÑÈ°èËâ≤‰æÜÂçÄÂà• docker Áí∞Â¢ÉÂÖßÁöÑÊìç‰Ωú<br />
<br />
</span></span></p>
<ul>
<li><p>Ê∫ñÂÇô entware Ë∑üÊõ¥Êñ∞ÂÖ∂ package feedsÔºö</p>
<div class="sourceCode" id="cb8"><pre class="sourceCode bash example"><code class="sourceCode bash"><a class="sourceLine" id="cb8-1" data-line-number="1"><span class="fu">git</span> clone https://github.com/Entware-ng/Entware-ng.git</a>
<a class="sourceLine" id="cb8-2" data-line-number="2"><span class="bu">cd</span> Entware-ng</a>
<a class="sourceLine" id="cb8-3" data-line-number="3"><span class="fu">make</span> package/symlinks</a>
<a class="sourceLine" id="cb8-4" data-line-number="4"><span class="fu">cp</span> configs/armv7.config .config</a></code></pre></div></li>
<li><p>ÂÆâË£ùÁ∑®Ë≠ØÈúÄË¶Å tools/toolchainÔºåÈÄô‰∏ÄÊ≠•È©üÈúÄË¶ÅÂæàÈï∑‰∏ÄÊÆµÊôÇÈñìÔºåÊàëÂ∞±Ë∑ëÂéªÊâì Splatoon ÁöÑ Salmon Run ‰∫Ü„ÄÇ</p>
<div class="sourceCode" id="cb9"><pre class="sourceCode bash example"><code class="sourceCode bash"><a class="sourceLine" id="cb9-1" data-line-number="1"><span class="fu">make</span> -j4 tools/install</a>
<a class="sourceLine" id="cb9-2" data-line-number="2"><span class="fu">make</span> -j4 toolchain/install</a></code></pre></div></li>
<li><p><strong>Á¢∫Ë™ç .config Ë£°Èù¢ÊúâÂïüÁî® <code>shadowsocks-libev</code> Ë∑ü <code>shadowsocks-libev-ss-server</code> ÂÖ©ÂÄãÂ•ó‰ª∂</strong>ÔºåÊàëÂú®Á∑®ÁöÑÊôÇÂÄôÊ≤íÁ¢∫Ë™çÂà∞ÈÄôÈªûÔºåËä±‰∫ÜÂ•Ω‰∏ÄÊÆµÊôÇÈñìÁ†îÁ©∂ÁÇ∫‰ªÄÈ∫ºÁ∑®ÂÆåÊ≤íÊúâ binary Ê™î„ÄÇ</p>
<div class="sourceCode" id="cb10"><pre class="sourceCode bash example"><code class="sourceCode bash"><a class="sourceLine" id="cb10-1" data-line-number="1"><span class="fu">make</span> menuconfig <span class="co"># ÈÅ∏Â•Ω shadowsocks ÔºàNetwork ÁöÑ Web Servers/Proxies Â∫ï‰∏ãÔºâ</span></a></code></pre></div>
<p>ÊàñÊòØÁõ¥Êé•Âú® .config Âä†‰∏ä</p>
<div class="sourceCode" id="cb11"><pre class="sourceCode bash example"><code class="sourceCode bash"><a class="sourceLine" id="cb11-1" data-line-number="1"><span class="ex">CONFIG_PACKAGE_shadowsocks-libev-config</span>=m</a>
<a class="sourceLine" id="cb11-2" data-line-number="2"><span class="ex">CONFIG_PACKAGE_shadowsocks-libev-ss-server</span>=m</a></code></pre></div></li>
<li><p>ÁÑ∂ÂæåÁ∑®Ë≠ØÈúÄË¶ÅÁöÑÂ•ó‰ª∂</p>
<div class="sourceCode" id="cb12"><pre class="sourceCode bash example"><code class="sourceCode bash"><a class="sourceLine" id="cb12-1" data-line-number="1"><span class="fu">make</span> -j4 package/shadowsocks-libev/compile</a></code></pre></div></li>
</ul>
<p>Á∑®Ë≠ØÂÆå‰πãÂæåÊúÉÂú® bin ‰∏ãÈù¢ÊâæÂà∞Â∞çÊáâÁöÑ .ipkg Ê™îÔºåÊé•ËëóÂ∞±ÊòØÂÇ≥Âà∞ NAS ‰∏ä</p>
<ul>
<li><p>Áî® opkg ÂÆâË£ùÔºö</p>
<pre><code>opkg install shadowsocks-libev-config_3.0.6-2_armv7soft.ipk
opkg install shadowsocks-libev-ss-server_3.0.6-2_armv7soft.ipk</code></pre></li>
<li><p>Ë®≠ÂÆöÂ•Ω <code>/opt/etc/shadowsocks.json</code> Ë∑ü <code>/opt/etc/init.d/S22shadowsocks</code>Ôºö</p>
<pre><code>sed -ir &#39;s/PROCS=ss-local/PROCS=ss-server/&#39; /opt/etc/init.d/S22shadowsocks</code></pre></li>
<li><p>Á¢∫Ë™ç shadowsocks-libev ÂèØ‰ª•ÂïüÂãï</p>
<pre><code>/opt/etc/init.d/S22shadowsocks start</code></pre></li>
</ul>
<p>Ë®≠ÂÆöÂ•Ω router ÁöÑ NATÔºåÁÑ∂ÂæåÁî®ÊâãÊ©ü‰πãÈ°ûÁöÑÊ∏¨Ë©¶ÊúÉÂãï‰πãÂæåÔºåÊî∂Â∑•„ÄÇ</p>
</section>
</section>]]></description>
    <pubDate>Sun, 27 Aug 2017 00:00:00 UT</pubDate>
    <guid>https://op8867555.github.io/posts/2017-08-27-ds216j-shadowsocks.html</guid>
    <dc:creator>Alex Lu</dc:creator>
</item>

    </channel>
</rss>
