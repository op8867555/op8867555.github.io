<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel>
        <title>Alex Lu's Blog Feed</title>
        <link>https://op8867555.github.io</link>
        <description><![CDATA[Alex Lu's Blog Feed]]></description>
        <atom:link href="https://op8867555.github.io/feed.xml" rel="self"
                   type="application/rss+xml" />
        <lastBuildDate>Tue, 22 Aug 2017 00:00:00 UT</lastBuildDate>
        <item>
    <title>[en] Notes on Thinkpad X1 Carbon 2017 + Arch Linux</title>
    <link>https://op8867555.github.io/posts/2017-06-11-X1C5-notes.html</link>
    <description><![CDATA[<h3 id="changelogs">changelogs</h3>
<ul>
<li>08/22 update kernel to 4.12; add a WWAN section.</li>
<li>07/22 rewrite the post in English, remove some outdated information.</li>
</ul>
<h1 id="quick-summary">Quick Summary</h1>
<p>I got a Thinkpad X1 Carbon 5th Gen (X1C5) and running Arch Linux (4.12) on it.</p>
<p>Most stuff works out of box,</p>
<ul>
<li>wifi</li>
<li>backlit keyboard</li>
<li>LEDs on keyboard (caps lock/mute/mic mute)</li>
<li><a href="#trackpoint">TrackPoint</a> - slow speed but works.</li>
<li><a href="#trackpad">TrackPad</a> - not so precise but works.</li>
<li>Thunderbolt 3 - USB-C to HDMI / USB-C Hub works.</li>
<li>Bluetooth - works with a FC30 game controller.</li>
<li><a href="#wwan">WWAN</a> - works with ModemManager.</li>
</ul>
<p>I haven’t tried,</p>
<ul>
<li>micro SD reader</li>
<li>mini-Ethernet - I don’t have the adapter.</li>
<li>hibernation - I don’t setup a swap partition.</li>
</ul>
<h1 id="topics">Topics</h1>
<h2 id="trackpoint">TrackPoint</h2>
<h3 id="alps-or-elantech">ALPS or Elantech</h3>
<p>X1C5 comes with two versions of TrackPoint: ALPS and Elantech<a href="#fn1" class="footnoteRef" id="fnref1"><sup>1</sup></a>.</p>
<p>I confirmed mine has an Elantech one using <a href="http://pcsupport.lenovo.com/tw/zh/products/laptops-and-netbooks/thinkpad-x-series-laptops/thinkpad-x1-carbon-type-20hr-20hq/downloads/ds122148">TrackPointDetect.exe</a>.</p>
<pre><code>TouchPad-Flash Utility
2017-06-08 20:42:27
Command Line: &quot;C:\Users\alexlu\Desktop\FW_Updater_1.0.0.9\TrackPointDetect.exe&quot; 
OS: 64-bit
Pst Vendor : Elan
[ERROR]: This TrackPoint is Elan (ID:03)</code></pre>
<h3 id="issues">Issues</h3>
<ul>
<li><p>Recognized as a “PS/2 Generic Mouse”<br />
⇒ No palm-detection during trackpoint use</p></li>
<li><p>Since kernel driver doesn’t support the new trackpoint, both of sensitivity and speed aren’t adjustable.<br />
⇒ The default speed/sensitivity is too slow to use.</p></li>
</ul>
<h3 id="mark-it-as-a-pointing-stick">Mark it as a pointing stick</h3>
<p>I found I can making libinput treat the “PS/2 Generic Mouse” as a trackpoint using a custom udev hwdb entry.</p>
<p><em>Note: this should not be used anymore once trackpoint gets kernel driver supports</em></p>
<pre><code>evdev:name:PS/2 Generic Mouse:dmi:*svnLENOVO*:pvrThinkPadX1Carbon5th*
  ID_INPUT_POINTINGSTICK=1</code></pre>
<h3 id="better-trackpoint-acceleration">Better TrackPoint Acceleration</h3>
<p>There is a <a href="https://bugs.freedesktop.org/show_bug.cgi?id=91369#c48">patch</a> which solves speed issue.</p>
<p>I get my trackpoint much usable by setting up:</p>
<ul>
<li><code>LIBINPUT_ATTR_TRACKPOINT_RANGE=10</code> in hwdb</li>
<li><code>xinput set-prop &quot;PS/2 Generic Mouse&quot; &quot;libinput Accel Speed&quot; -0.25</code> in my .xinitrc</li>
</ul>
<h2 id="trackpad">TrackPad</h2>
<p>The trackpad is <ins>able to</ins> use rmi4 over smbus for now(4.12).</p>
<p>Turn it on by creating a <code>psmouse.conf</code> in <code>/etc/modprobe.d/</code></p>
<pre><code>options psmouse synaptics_intertouch=1</code></pre>
<h3 id="palm-detection">Palm Detection</h3>
<ul>
<li>pressure-based palm-detection works great (libinput ≥ 1.8)</li>
<li>palm-detection during trackpoint use requires <a href="#mark-it-as-a-pointing-stick">mark it as a pointing stick</a>.</li>
</ul>
<h2 id="new-hotkeys">New Hotkeys</h2>
<p>Before linux-4.12, You needs <a href="https://patchwork.kernel.org/patch/9596129/">these</a> <a href="https://patchwork.kernel.org/patch/9596131/">patches</a> to get these buttons works.</p>
<h2 id="fingerprint-reader">Fingerprint Reader</h2>
<p>X1C5 have a Validity Sensor 138a:0097. There is no driver for it.</p>
<p>Furthermore,</p>
<ul>
<li><a href="https://github.com/nmikhailov/Validity90">Validity90</a> - an open source reverse engineered driver (WIP).</li>
<li><a href="https://bugs.freedesktop.org/show_bug.cgi?id=94536">a bug report of libfprint</a></li>
</ul>
<h2 id="wwan">WWAN</h2>
<p>X1C5 (WWAN) comes with a Sierra EM7455 LTE Modem (1199:9079).</p>
<p>It works out of box using latest ModemManager.</p>
<h3 id="connecting-without-networkmanager">connecting without NetworkManager</h3>
<p>I’m wondering if there is a better way to do this…</p>
<h4 id="connecting">connecting</h4>
<ul>
<li>find modem id: <code>mmcli -L</code></li>
<li>connect: <code>mmcli -m $MODEM --simple-connect=&quot;apn=internet&quot;</code></li>
<li>after a successful connect, find ip from bearer info
<ul>
<li><code>mmcli -m $MODEM</code> will show bearer id</li>
<li><code>mmcli -b $BEARER_ID</code> will show ip/gateway/broadcast…</li>
</ul></li>
<li>bring up the interface <code>ip link set $INTERFACE up</code></li>
<li>assign a static IP: <code>ip addr add $IP_ADDR/$PREFIX broadcast $BROADCAST_ADDR dev $IFACE</code></li>
<li>add a route: <code>ip route add default via $GATEWAY</code></li>
</ul>
<h4 id="disconnecting">disconnecting</h4>
<ul>
<li>bring the interface down</li>
<li>remove route for it</li>
<li>remove static IP assignment</li>
<li><code>mmcli -m $MODEM --simple-disconnect</code></li>
</ul>
<h1 id="references">References</h1>
<ul>
<li><a href="https://gist.github.com/gdamjan/141bb0def5f80257fae2b233ec16f3c2">gdamjan’s Note</a></li>
<li><a href="http://fredrik.wendt.se/2017/04/26/lenovo-thinkpad-x1-carbon-5th-generation/">Fredrik’s Note</a></li>
<li><a href="https://forums.lenovo.com/t5/forums/v3_1/forumtopicpage/board-id/tp02_en/thread-id/75464/page/29">discussion about TrackPad</a></li>
</ul>
<div class="footnotes">
<hr />
<ol>
<li id="fn1"><p><a href="https://patchwork.kernel.org/patch/9768231/" class="uri">https://patchwork.kernel.org/patch/9768231/</a><a href="#fnref1">↩</a></p></li>
</ol>
</div>]]></description>
    <pubDate>Tue, 22 Aug 2017 00:00:00 UT</pubDate>
    <guid>https://op8867555.github.io/posts/2017-06-11-X1C5-notes.html</guid>
    <dc:creator>Alex Lu</dc:creator>
</item>
<item>
    <title>用 VEGA 資料視覺化</title>
    <link>https://op8867555.github.io/posts/2017-08-11-vega.html</link>
    <description><![CDATA[<h3 id="tldr">tl;dr</h3>
<p><a href="https://vega.github.io/vega/">Vega</a> 是一個種描述互動視覺化的文法(JSON 規格)，相對於低階的 <a href="https://d3js.org/">d3.js</a>，提供了一個不用碰太多 JavaScript 就能編寫圖表的高階宣告式語法。 這篇文章簡述 <a href="https://vega.github.io/vega/">Vega</a> 的概念，然後以 COSCUP 2017 的議程表為題寫了一個 tutorial（<a href="https://vega.github.io/editor/#/gist/vega/op8867555/5af6189b957373bf0ff9969c8e3d426a">完成品</a>）。</p>
<p>另外，如果只有簡單的資料（csv, json…等），又只需要基本的幾種圖，可以考慮使用 <a href="https://vega.github.io/vega-lite/">vega-lite</a> 這個比 vega 還要高階的語言來做。</p>
<h1 id="vega">VEGA</h1>
<blockquote>
<p>Vega is a visualization grammar, a declarative language for creating, saving, and sharing interactive visualization designs. With Vega, you can describe the visual appearance and interactive behavior of a visualization in a JSON format, and generate web-based views using Canvas or SVG.</p>
</blockquote>
<p><a href="https://vega.github.io/vega/">Vega</a> 是 Washington Interactive Data Lab 的另一個專案(就是那個做 <a href="https://d3js.org/">d3.js</a> 的 IDL)，提出了一個 JSON 格式的文法，用來描述互動式的視覺化圖表，也一併給了 JavaScript 的 Runtime 實作。(背後很理所當然的用了 <a href="https://d3js.org/">d3.js</a> 作為 backend)</p>
<h2 id="為什麼不用-d3-就好">為什麼不用 d3 就好</h2>
<p>雖然不太一樣，但是可以先看看兩者實作 bar chart 的方式： <a href="https://bl.ocks.org/mbostock/3885304">d3</a>, <a href="https://vega.github.io/vega/examples/bar-chart/">vega</a>。</p>
<p>可以看到幾點：</p>
<ul>
<li>vega 的寫法少了很多來自 js 語法的雜訊，也不用讓變數名稱佔掉大腦可貴的記憶空間<a href="#fn1" class="footnoteRef" id="fnref1"><sup>1</sup></a></li>
<li>vega 用了一個 json 敘述來描述視覺化，但是 d3.js 的版本需要從 html/svg/canvas 等低階的實作細節開始考慮</li>
<li>比起 js ， JSON 格式更好自動生成，也就是更好串接在其他應用</li>
</ul>
<p>Vega 團隊<a href="https://github.com/vega/vega/wiki/Vega-and-D3">有講明</a> Vega 的目的並不是要取代 d3.js ，而是在 d3.js 的基礎上，建立更高層度的視覺化。</p>
<h2 id="長什麼樣子">長什麼樣子</h2>
<p>官網給的一個 bar chart 的範例長的像<a href="https://vega.github.io/vega/examples/bar-chart/">這樣</a>，可以發現幾乎看不到程式碼。</p>
<p>下面這個是從 <a href="https://vega.github.io/vega/docs/specification/">specification</a> 抄來的基本款 outline</p>
<ul>
<li>上半部是除了 <code>$schema</code> 之外，是一些關於整張圖的 top-level 設定</li>
<li>下半部 <code class="sourceCode javascript">[]</code> 分別還需要填入適當的內容。</li>
</ul>
<div class="sourceCode"><pre class="sourceCode json"><code class="sourceCode json"><span class="fu">{</span>
  <span class="dt">&quot;$schema&quot;</span><span class="fu">:</span> <span class="st">&quot;https://vega.github.io/schema/vega/v3.0.json&quot;</span><span class="fu">,</span>
  <span class="dt">&quot;description&quot;</span><span class="fu">:</span> <span class="st">&quot;A specification outline example.&quot;</span><span class="fu">,</span>
  <span class="dt">&quot;width&quot;</span><span class="fu">:</span> <span class="dv">500</span><span class="fu">,</span>
  <span class="dt">&quot;height&quot;</span><span class="fu">:</span> <span class="dv">200</span><span class="fu">,</span>
  <span class="dt">&quot;padding&quot;</span><span class="fu">:</span> <span class="dv">5</span><span class="fu">,</span>
  <span class="dt">&quot;autosize&quot;</span><span class="fu">:</span> <span class="st">&quot;pad&quot;</span><span class="fu">,</span>

  <span class="dt">&quot;signals&quot;</span><span class="fu">:</span> <span class="ot">[]</span><span class="fu">,</span>
  <span class="dt">&quot;data&quot;</span><span class="fu">:</span> <span class="ot">[]</span><span class="fu">,</span>
  <span class="dt">&quot;scales&quot;</span><span class="fu">:</span> <span class="ot">[]</span><span class="fu">,</span>
  <span class="dt">&quot;projections&quot;</span><span class="fu">:</span> <span class="ot">[]</span><span class="fu">,</span>
  <span class="dt">&quot;axes&quot;</span><span class="fu">:</span> <span class="ot">[]</span><span class="fu">,</span>
  <span class="dt">&quot;legends&quot;</span><span class="fu">:</span> <span class="ot">[]</span><span class="fu">,</span>
  <span class="dt">&quot;marks&quot;</span><span class="fu">:</span> <span class="ot">[]</span>
<span class="fu">}</span></code></pre></div>
<ul>
<li><code>signals</code> 提供一個 reactive 的方法來做互動事件： 滑鼠移動、內建的按鈕、範圍選擇器之類的</li>
<li><code>data</code> 用來載入、parse、轉換，一些簡單的資料處理 (filter, aggregation 之類的都可以在這裡做掉)。</li>
<li><code>scales</code> 用來映射資料的 domain 跟 輸出的 range (XY 座標/ 顏色等)。</li>
<li><code>projections</code> 用來將經緯度投影到座標平面。</li>
<li><code>axes</code> 可以指定圖的的座標軸的位置、刻度。</li>
<li><code>legends</code> 是圖的圖例。</li>
<li><code>marks</code> 用來畫出折線、面積、矩形…等所有表現資料的部份，是整張圖核心的部份。</li>
</ul>
<p>畫圖所需要的元素 VEGA 團隊都適當的設計了出來，剩下的就是使用者依照需求填空了。</p>
<h2 id="如何開始">如何開始</h2>
<p>如果想要開始使用，可以先看官方網站上的兩個 tutorials 寫的簡單好懂（當然還是需要看 documentation 就是了）</p>
<ul>
<li><a href="https://vega.github.io/vega/tutorials/bar-chart/">Let’s Make A Bar Chart</a> 介紹了最基本的幾個元素: data, scale, axes, marks, signals</li>
<li><a href="https://vega.github.io/vega/tutorials/airports/">Mapping Airport Connections</a> 進一步應用了 data transform, projections, signals</li>
</ul>
<p>除此之外，官方網站上也有一個線上的 WYSIWYG 編輯器： <a href="https://vega.github.io/editor">Vega Editor</a>，裡面有很多範例可以 <del>塗塗改改</del> 參考。</p>
<p>剩下的就是讀<a href="https://vega.github.io/vega/docs/">文件</a>啦。</p>
<h1 id="tutorial">tutorial</h1>
<p>因為這次 COSCUP 2017 官網最早沒有釋出時間線形式的議程表，但是有給足自幹需要的資料， 就發現<a href="https://docs.google.com/spreadsheets/d/1gVQtWEqOZLsDtk1j-_TrPqq_nWN5VcTtWLpme3yl3Zc/edit#gid=98295178">大家都自幹了一份</a>，於是我就用 vega 也兜了一個簡單的版本，也就順便以此為原形，寫了這篇 tutorial。</p>
<p><em>這篇 tutorial 會簡述怎麼從零開始到做出一個這樣議程表</em></p>
<div class="figure">
<img src="http://i.imgur.com/HUAwF8k.png" class="half-page center" />

</div>
<h2 id="準備">準備</h2>
<p>打開 <a href="https://vega.github.io/editor">Vega Editor</a>，就可以開始了。</p>
<h2 id="top-level">top-level</h2>
<p>首先要先有個最簡單的雛型，宣告 schema 版本、圖的大小等</p>
<div class="sourceCode"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span class="co">// vg.json</span>
<span class="op">{</span>
  <span class="st">&quot;$schema&quot;</span><span class="op">:</span> <span class="st">&quot;https://vega.github.io/schema/vega/v3.0.json&quot;</span><span class="op">,</span>
  <span class="st">&quot;width&quot;</span><span class="op">:</span> <span class="dv">480</span><span class="op">,</span>
  <span class="st">&quot;height&quot;</span><span class="op">:</span> <span class="dv">1600</span><span class="op">,</span>
  <span class="st">&quot;padding&quot;</span><span class="op">:</span> <span class="dv">50</span>
<span class="op">}</span></code></pre></div>
<h2 id="data">Data</h2>
<p>這次的資料是 COSCUP 2017 官網所使用的 <a href="https://coscup.org/2017-assets/json/submissions.json">submissions.json</a>，是一個 array of records ，如下：</p>
<div class="sourceCode"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span class="co">// submissions.json</span>
[
<span class="co">// 我隨便節錄了一個議程，兩天所有的議程都在這個 array 裡面</span>
  <span class="op">{</span>
    <span class="st">&quot;room&quot;</span><span class="op">:</span> <span class="st">&quot;202&quot;</span><span class="op">,</span>
    <span class="st">&quot;community&quot;</span><span class="op">:</span> <span class="st">&quot;Chinese 中文&quot;</span><span class="op">,</span>
    <span class="st">&quot;subject&quot;</span><span class="op">:</span> <span class="st">&quot;Unicode 不是年年更新嗎，2017 怎麼還在缺字？&quot;</span><span class="op">,</span>
    <span class="st">&quot;summary&quot;</span><span class="op">:</span> <span class="st">&quot;維基文庫是維基媒體基金會所屬計畫中有關原始文獻典藏的網站，而中文的維基文庫因此遇到其他維基計畫不曾遇到的問題–暴量的古籍缺字。台灣的維基分會在經手吳守禮國臺對 照活用辭典的現代數位化之計畫中，也遇到了嚴重的缺字問題，好在現在開源動態組字技術已經發展成熟，可以整合到維基網站裡，本議題將分享該專案運用此新式缺字處理技術的點滴、目前瓶頸、未來的展望。&quot;</span><span class="op">,</span>
    <span class="st">&quot;start&quot;</span><span class="op">:</span> <span class="st">&quot;2017-08-05T16:20:00+08:00&quot;</span><span class="op">,</span>
    <span class="st">&quot;end&quot;</span><span class="op">:</span> <span class="st">&quot;2017-08-05T17:00:00+08:00&quot;</span><span class="op">,</span>
    <span class="st">&quot;original_speakerpic&quot;</span><span class="op">:</span> <span class="st">&quot;http://imgur.com/q0j6fda&quot;</span><span class="op">,</span>
    <span class="st">&quot;lang&quot;</span><span class="op">:</span> <span class="st">&quot;ZH&quot;</span><span class="op">,</span>
    <span class="st">&quot;speaker&quot;</span><span class="op">:</span> <span class="op">{</span>
      <span class="st">&quot;name&quot;</span><span class="op">:</span> <span class="st">&quot;張正一&quot;</span><span class="op">,</span>
      <span class="st">&quot;avatar&quot;</span><span class="op">:</span> <span class="st">&quot;https://coscup.org/2017-assets/images/program/202-2017-08-05T1515.jpg&quot;</span><span class="op">,</span>
      <span class="st">&quot;bio&quot;</span><span class="op">:</span> <span class="st">&quot;維基協會理事，維基吳守禮台語辭典現代數位化計畫 PM，動態組字技術開發長期參與者&quot;</span>
    <span class="op">}</span>
  <span class="op">},</span>
<span class="co">// 還有更多...</span>
]</code></pre></div>
<p>Vega 支援讀取 array of records 的資料，我們可以直接將他讀進來，然後順便對時間欄位做 parse ：</p>
<div class="sourceCode"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span class="co">// vg.json</span>
<span class="op">{</span> <span class="co">// 前略</span>
  <span class="st">&quot;data&quot;</span><span class="op">:</span>[
    <span class="op">{</span> <span class="st">&quot;name&quot;</span><span class="op">:</span> <span class="st">&quot;table&quot;</span><span class="op">,</span>
       <span class="st">&quot;url&quot;</span><span class="op">:</span> <span class="st">&quot;https://coscup.org/2017-assets/json/submissions.json&quot;</span><span class="op">,</span>
       <span class="st">&quot;format&quot;</span><span class="op">:</span> <span class="op">{</span><span class="st">&quot;type&quot;</span><span class="op">:</span><span class="st">&quot;json&quot;</span><span class="op">,</span> <span class="st">&quot;parse&quot;</span><span class="op">:{</span><span class="st">&quot;start&quot;</span><span class="op">:</span><span class="st">&quot;date&quot;</span><span class="op">,</span> <span class="st">&quot;end&quot;</span><span class="op">:</span> <span class="st">&quot;date&quot;</span><span class="op">}}</span>
    <span class="op">}</span>
  ]
<span class="op">}</span></code></pre></div>
<p>如果用的是 Vega Editor 的話，可以打開 developer console (chrome 的話按 <key>Ctrl</key> + <key>Shift</key> + <key>J</key>) 執行：</p>
<div class="sourceCode"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span class="va">VEGA_DEBUG</span>.<span class="va">view</span>.<span class="at">data</span>(<span class="st">&#39;table&#39;</span>)
<span class="co">// (141) [Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, …]</span></code></pre></div>
<p>可以觀察到資料有正確載入。</p>
<h2 id="scale-axes">Scale, Axes</h2>
<p>載入資料之後、把圖畫出來之前，需要先將資料的範圍映射圖的X/Y座標：</p>
<div class="sourceCode"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span class="co">// vg.json 的片段</span>
  <span class="st">&quot;scales&quot;</span><span class="op">:</span> [
    <span class="op">{</span>
      <span class="st">&quot;name&quot;</span><span class="op">:</span> <span class="st">&quot;xscale&quot;</span><span class="op">,</span>
      <span class="st">&quot;type&quot;</span><span class="op">:</span> <span class="st">&quot;band&quot;</span><span class="op">,</span>
      <span class="st">&quot;domain&quot;</span><span class="op">:</span> <span class="op">{</span><span class="st">&quot;data&quot;</span><span class="op">:</span> <span class="st">&quot;table&quot;</span><span class="op">,</span> <span class="st">&quot;field&quot;</span><span class="op">:</span> <span class="st">&quot;room&quot;</span><span class="op">,</span> <span class="st">&quot;sort&quot;</span><span class="op">:</span> <span class="kw">true</span><span class="op">},</span>
      <span class="st">&quot;range&quot;</span><span class="op">:</span> <span class="st">&quot;width&quot;</span>
    <span class="op">},</span>
    <span class="op">{</span>
      <span class="st">&quot;name&quot;</span><span class="op">:</span> <span class="st">&quot;yscale&quot;</span><span class="op">,</span>
      <span class="st">&quot;type&quot;</span><span class="op">:</span> <span class="st">&quot;time&quot;</span><span class="op">,</span>
      <span class="st">&quot;domain&quot;</span><span class="op">:</span> <span class="op">{</span><span class="st">&quot;data&quot;</span><span class="op">:</span> <span class="st">&quot;table&quot;</span><span class="op">,</span> <span class="st">&quot;fields&quot;</span><span class="op">:</span> [<span class="st">&quot;start&quot;</span><span class="op">,</span> <span class="st">&quot;end&quot;</span>]<span class="op">},</span>
      <span class="st">&quot;range&quot;</span><span class="op">:</span> <span class="st">&quot;height&quot;</span><span class="op">,</span>
      <span class="st">&quot;reverse&quot;</span><span class="op">:</span> <span class="kw">true</span>
    <span class="op">}</span>
  ]</code></pre></div>
<p>每個 scale 都要有對應的名字 <code>name</code> 跟類型 <code>type</code> ，這邊我分別定義了：</p>
<p><code>xscale</code></p>
<ul>
<li><code>band</code> 可以做出 categorical 分段的效果(想像一下 bar chart，看一下<a href="https://vega.github.io/vega/docs/scales/#band">這張圖</a>)</li>
<li><code>sort</code> 好讓場地依照順序顯示</li>
<li><code>range</code> 設定成 <code>width</code> 指的是 top-level 的設定</li>
</ul>
<p><code>yscale</code></p>
<ul>
<li><code>time</code> 告訴 vega 我用的資料是個時間</li>
<li><code>fields</code> 指定 <code>domain</code> 的最小最大值來自哪個欄位</li>
<li><code>reverse</code> 用來反轉軸的大小，讓先發生的有比較高的值，顯示在圖的上方</li>
</ul>
<p>我們可以畫幾個座標軸（使用前面定義的scale）來觀察：</p>
<div class="sourceCode"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span class="co">// vg.json 的片段</span>
  <span class="st">&quot;axes&quot;</span><span class="op">:</span> [
    <span class="op">{</span> <span class="st">&quot;orient&quot;</span><span class="op">:</span> <span class="st">&quot;top&quot;</span><span class="op">,</span> <span class="st">&quot;scale&quot;</span><span class="op">:</span> <span class="st">&quot;xscale&quot;</span> <span class="op">},</span>
    <span class="op">{</span> <span class="st">&quot;orient&quot;</span><span class="op">:</span> <span class="st">&quot;bottom&quot;</span><span class="op">,</span> <span class="st">&quot;scale&quot;</span><span class="op">:</span> <span class="st">&quot;xscale&quot;</span> <span class="op">},</span>
    <span class="op">{</span> <span class="st">&quot;orient&quot;</span><span class="op">:</span> <span class="st">&quot;left&quot;</span><span class="op">,</span> <span class="st">&quot;scale&quot;</span><span class="op">:</span> <span class="st">&quot;yscale&quot;</span> <span class="op">}</span>
  ]</code></pre></div>
<h2 id="marks">Marks</h2>
<p>我希望將每個議程用方塊的方式畫出來，做出時間表的的效果。</p>
<div class="sourceCode"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span class="co">// vg.json 的片段</span>
  <span class="st">&quot;marks&quot;</span><span class="op">:</span> [
    <span class="op">{</span>
      <span class="st">&quot;type&quot;</span><span class="op">:</span> <span class="st">&quot;rect&quot;</span><span class="op">,</span>
      <span class="st">&quot;from&quot;</span><span class="op">:</span> <span class="op">{</span><span class="st">&quot;data&quot;</span><span class="op">:</span><span class="st">&quot;table&quot;</span><span class="op">},</span>
      <span class="st">&quot;encode&quot;</span><span class="op">:</span> <span class="op">{</span>
        <span class="st">&quot;update&quot;</span><span class="op">:</span> <span class="op">{</span>
          <span class="st">&quot;xc&quot;</span><span class="op">:</span> <span class="op">{</span><span class="st">&quot;scale&quot;</span><span class="op">:</span> <span class="st">&quot;xscale&quot;</span><span class="op">,</span> <span class="st">&quot;field&quot;</span><span class="op">:</span> <span class="st">&quot;room&quot;</span><span class="op">,</span> <span class="st">&quot;band&quot;</span><span class="op">:</span><span class="fl">0.5</span><span class="op">},</span>
          <span class="st">&quot;width&quot;</span><span class="op">:</span> <span class="op">{</span><span class="st">&quot;scale&quot;</span><span class="op">:</span> <span class="st">&quot;xscale&quot;</span><span class="op">,</span> <span class="st">&quot;band&quot;</span><span class="op">:</span> <span class="fl">0.5</span><span class="op">},</span>
          <span class="st">&quot;y&quot;</span><span class="op">:</span> <span class="op">{</span><span class="st">&quot;scale&quot;</span><span class="op">:</span> <span class="st">&quot;yscale&quot;</span><span class="op">,</span> <span class="st">&quot;field&quot;</span><span class="op">:</span> <span class="st">&quot;start&quot;</span><span class="op">},</span>
          <span class="st">&quot;y2&quot;</span><span class="op">:</span> <span class="op">{</span><span class="st">&quot;scale&quot;</span><span class="op">:</span> <span class="st">&quot;yscale&quot;</span><span class="op">,</span> <span class="st">&quot;field&quot;</span><span class="op">:</span> <span class="st">&quot;end&quot;</span><span class="op">}</span>
        <span class="op">}</span>
      <span class="op">}</span>
    <span class="op">}</span>
  ]</code></pre></div>
<ul>
<li>每個 mark 都要有對應的 <code>type</code>，這邊選用方塊(<code>rect</code>)</li>
<li>用 <code>from</code> 來指定資料來源</li>
</ul>
<p><code>encode</code> 的部份用來指定畫圖時的參數，建議先看一下<a href="https://vega.github.io/vega/docs/marks/">文件</a> 跟 <a href="https://bost.ocks.org/mike/join/">Thinking with Joins</a></p>
<ul>
<li><code>xc</code> 用來指定 整個方塊的中心座標，<code>band</code> 是為了調整方塊的位置，向右移動半個 band</li>
<li><code>width</code> 用半個 <code>band</code></li>
<li><code>y</code>, <code>y2</code> 指定方塊的上界跟下界，感謝 scale ，我們可以直接指定 <code>start</code> 跟 <code>end</code> 這兩個時間欄位</li>
</ul>
<p>看起來不糟，不過上點顏色應該會好看點。我用議程屬於的社群(<code>community</code>) 來上色。</p>
<ul>
<li>先建立一個 scale 從社群類型映射到顏色</li>
<li>在 marks 裡面使用這個 scale</li>
</ul>
<div class="sourceCode"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span class="co">// vg.json 的片段，scale 底下</span>
    <span class="op">{</span>
      <span class="st">&quot;name&quot;</span><span class="op">:</span> <span class="st">&quot;color&quot;</span><span class="op">,</span>
      <span class="st">&quot;type&quot;</span><span class="op">:</span> <span class="st">&quot;ordinal&quot;</span><span class="op">,</span>
      <span class="st">&quot;domain&quot;</span><span class="op">:</span> <span class="op">{</span><span class="st">&quot;data&quot;</span><span class="op">:</span> <span class="st">&quot;table&quot;</span><span class="op">,</span> <span class="st">&quot;field&quot;</span><span class="op">:</span> <span class="st">&quot;community&quot;</span><span class="op">},</span>
      <span class="st">&quot;range&quot;</span><span class="op">:</span> <span class="op">{</span><span class="st">&quot;scheme&quot;</span><span class="op">:</span> <span class="st">&quot;category20&quot;</span><span class="op">}</span>
    <span class="op">}</span></code></pre></div>
<div class="sourceCode"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span class="co">// vg.json 的片段，marks[0][&quot;encode&quot;] 底下</span>
    <span class="st">&quot;enter&quot;</span><span class="op">:</span> <span class="op">{</span>
      <span class="st">&quot;fill&quot;</span><span class="op">:</span> <span class="op">{</span><span class="st">&quot;scale&quot;</span><span class="op">:</span> <span class="st">&quot;color&quot;</span><span class="op">,</span> <span class="st">&quot;field&quot;</span><span class="op">:</span> <span class="st">&quot;community&quot;</span><span class="op">}</span>
    <span class="op">}</span></code></pre></div>
<p>另外，可以用 <code>tooltip</code> 屬性來顯示議程的主題：</p>
<div class="sourceCode"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span class="co">// vg.json 的片段，marks[0][&quot;encode&quot;][&quot;enter&quot;] 裡面</span>
  <span class="st">&quot;tooltip&quot;</span><span class="op">:</span> <span class="op">{</span><span class="st">&quot;field&quot;</span><span class="op">:</span> <span class="st">&quot;subject&quot;</span><span class="op">}</span></code></pre></div>
<h2 id="transform">Transform</h2>
<p>可以看到第一天議程結束到第二天議程結束有一大段空閒，可以用 transform 的 filter 來選擇只用哪一部分的資料。</p>
<div class="sourceCode"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span class="co">// vg.json 的片段，data 底下</span>
<span class="st">&quot;transform&quot;</span><span class="op">:</span> [
  <span class="op">{</span>
    <span class="st">&quot;type&quot;</span><span class="op">:</span> <span class="st">&quot;filter&quot;</span><span class="op">,</span>
    <span class="st">&quot;expr&quot;</span><span class="op">:</span> <span class="st">&quot;datum.start &gt;= datetime(2017, 8-1, 5) &amp;&amp; datum.end &lt; datetime(2017, 8-1, 5+1)&quot;</span>
  <span class="op">}</span>
]</code></pre></div>
<p><code>expr</code> 吃一個 vega 精簡過的 javascript subset，用來給 <code>filter</code> 決定保留與否。</p>
<h2 id="signals">Signals</h2>
<p>我不會永遠只想看其中一天，也不希望要看隔天的議程還要做修改這份 vega json。 好在 vega 提供了一些方便的 signal，我這邊選用了他現成的 radio input：會在圖上面加上一個互動的 radio button，然後綁定成一個 signal。</p>
<div class="sourceCode"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span class="co">// vg.json 的片段</span>
<span class="st">&quot;signals&quot;</span><span class="op">:</span> [
    <span class="op">{</span>
      <span class="st">&quot;name&quot;</span><span class="op">:</span> <span class="st">&quot;day&quot;</span><span class="op">,</span>
      <span class="st">&quot;value&quot;</span><span class="op">:</span> <span class="dv">5</span><span class="op">,</span>
      <span class="st">&quot;bind&quot;</span><span class="op">:</span> <span class="op">{</span><span class="st">&quot;input&quot;</span><span class="op">:</span> <span class="st">&quot;radio&quot;</span><span class="op">,</span> <span class="st">&quot;options&quot;</span><span class="op">:</span> [<span class="dv">5</span><span class="op">,</span> <span class="dv">6</span>]<span class="op">}</span>
    <span class="op">}</span>
]</code></pre></div>
<p>綁定過的 signal 可以作為 <code>expr</code> 內的變數使用</p>
<div class="sourceCode"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span class="co">// vg.json 的片段，修改 data[&quot;transform&quot;][0][&quot;expr&quot;]</span>
<span class="st">&quot;expr&quot;</span><span class="op">:</span> <span class="st">&quot;datum.start &gt;= datetime(2017, 8-1, day) &amp;&amp; datum.end &lt; datetime(2017, 8-1, day)&quot;</span></code></pre></div>
<h2 id="完成">完成</h2>
<p>一個簡單的<a href="https://vega.github.io/editor/#/gist/vega/op8867555/5af6189b957373bf0ff9969c8e3d426a">議程時間表</a>就完成啦！ 當然還有很多可以增加/改進的地方，像是：</p>
<ul>
<li>顯示更多情報：講者、議程摘要…</li>
<li>讓圖更漂亮：調整滑鼠 hover 時的 style …</li>
<li>加上 Scale Break ，直接省去切換兩天的動作</li>
<li>想辦法支援行動瀏覽器，手機版的 chrome 就不支援顯示 tooltip</li>
<li>…</li>
</ul>
<h1 id="總結">總結</h1>
<p>我最後的成果放在<a href="https://op8867555.github.io/coscup2017-submissions/index.html">這邊</a>，雖然不完美，但是也讓我在很短的時間內完成了一個堪用的成品。</p>
<p><em>利用 Vega 這個工具，可以迅速得做出簡單好讀寫（相對於 d3.js），但又不失彈性的視覺化成果。</em></p>
<p>題外話，雖然 JSON 還算是好讀寫，但是實際還是不太適合人類直接編寫，要的話用 YAML 或是再幹一個 DSL 可能會比較方便。</p>
<div class="footnotes">
<hr />
<ol>
<li id="fn1"><p><a href="https://www.kernel.org/doc/html/v4.10/process/coding-style.html#functions" class="uri">https://www.kernel.org/doc/html/v4.10/process/coding-style.html#functions</a><a href="#fnref1">↩</a></p></li>
</ol>
</div>]]></description>
    <pubDate>Fri, 11 Aug 2017 00:00:00 UT</pubDate>
    <guid>https://op8867555.github.io/posts/2017-08-11-vega.html</guid>
    <dc:creator>Alex Lu</dc:creator>
</item>
<item>
    <title>ADAM CASA Hub A01 在 Linux 使用狀況＆個人心得</title>
    <link>https://op8867555.github.io/posts/2017-07-21-adam-usb-c-dock.html</link>
    <description><![CDATA[<h1 id="tldr">TL;DR</h1>
<p>我買了一個 ADAM CASA Hub A01 ，用來搭配 X1C5 使用，環境是 Arch Linux + Kernel 4.11，我測試了下列項目都正常運作：</p>
<ul>
<li>1080p 外接螢幕</li>
<li>USB 鍵盤、滑鼠</li>
<li>USB 3 外接 HDD</li>
<li>Type C Power Delivery 充電</li>
<li>網路孔</li>
</ul>
<h1 id="使用心得">使用心得</h1>
<p>上個月買了新筆電，因為 USB 孔比之前的少，也少了網路孔，HDMI 的位置也落在比較不方便的左手邊，就一直想找款 USB-c hub 來當成 dock 用。 可能是因為 usb c 相對還算新玩意兒，網路上找不太到這類產品的資源。 找了一圈之後，最後決定訂了這隻台廠的 hub，主要的原因是：</p>
<ul>
<li>滿足我的需求：
<ul>
<li>不能是專為蘋果設計的 <em>(yuck)</em></li>
<li>至少一個 USB port</li>
<li>網路孔</li>
<li>HDMI 輸出</li>
<li>可以的話有 type c 的 PowerDelivery</li>
</ul></li>
<li>官方網站有寫<strong>支援 Linux</strong><br />
身為一個 linux user ，這點的加分實在很大。其他類似的產品都只寫支援 mac / chromebook。</li>
</ul>
<h2 id="批評">批評</h2>
<p>這邊來談談我個人體感的幾個缺點</p>
<ul>
<li><p><strong>線的長度太短</strong><br />
這個產品設計應該沒有考慮到平放於桌上以外的狀況， 我只是將筆電墊高了約 5cm，就可以明顯感受到這個問題。</p>
<div class="figure">
<img src="http://i.imgur.com/Kc6ECEA.jpg" />

</div>
<p>我得再花個幾百 NTD 買條延長線或是想辦法架高 hub 來解決這個問題。</p></li>
<li><p><strong>開口方向設計不實用</strong><br />
當像我一樣，usb c port 在筆電左方時，有幾個擺放方式：</p>
<ol style="list-style-type: lower-alpha">
<li>橫著正放（開口向正面）： HDMI 跟 PD 面對正面 ⇒ NO</li>
<li>橫著倒放（開口向背面）： SD 卡 ⇒ NO</li>
<li>直著放（開口向左）： 網路孔面對正面 ⇒ NO</li>
</ol>
<p>沒有一個辦法是完美的，不過市面上的其他場品也有類似的問題。</p></li>
</ul>
<h1 id="一些-log">一些 log</h1>
<h2 id="usb-裝置">USB 裝置</h2>
<p><code>lsusb</code> 會多出下列裝置</p>
<pre><code>Bus 004 Device 003: ID 0bda:8153 Realtek Semiconductor Corp. RTL8153 Gigabit Ethernet Adapter
Bus 004 Device 002: ID 2109:0813 VIA Labs, Inc. 
Bus 004 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub
Bus 003 Device 008: ID 2109:0100 VIA Labs, Inc. 
Bus 003 Device 006: ID 05e3:0752 Genesys Logic, Inc. 
Bus 003 Device 004: ID 05e3:0618 Genesys Logic, Inc. 
Bus 003 Device 002: ID 2109:2813 VIA Labs, Inc. 
Bus 003 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub</code></pre>
<h2 id="xrandr">xRandr</h2>
<ul>
<li>HDMI 接上螢幕之後，會在接在 DP1 或是 DP2 輸出。</li>
<li>EDID 跟原本的一樣不變 (會 passthrough)。</li>
</ul>
<pre class="half-page"><code>Screen 0: minimum 8 x 8, current 3000 x 1920, maximum 32767 x 32767
DP1 disconnected (normal left inverted right x axis y axis)
DP2 connected 1080x1920+1920+0 right (normal left inverted right x axis y axis) 480mm x 270mm
   1920x1080     60.00*+  50.00    59.94  
   1920x1080i    60.00    50.00    59.94  
   1680x1050     59.88  
   1600x900      60.00  
   1280x1024     60.02  
   1280x800      59.91  
   1280x720      60.00    50.00    59.94  
   1024x768      60.00  
   800x600       60.32  
   720x576       50.00  
   720x480       60.00    59.94  
   640x480       60.00    59.94  
HDMI1 disconnected (normal left inverted right x axis y axis)
VIRTUAL1 disconnected (normal left inverted right x axis y axis)</code></pre>
<h2 id="dmesg">Dmesg</h2>
<pre class="half-page"><code>[388483.356326] ucsi_acpi USBC000:00: ucsi_connector_change: failed to read connector status (-110)
[388485.016551] pci 0000:06:00.0: [8086:15d3] type 01 class 0x060400
[388485.016800] pci 0000:06:00.0: supports D1 D2
[388485.016803] pci 0000:06:00.0: PME# supported from D0 D1 D2 D3hot D3cold
[388485.017256] pci 0000:07:00.0: [8086:15d3] type 01 class 0x060400
[388485.017402] pci 0000:07:00.0: supports D1 D2
[388485.017404] pci 0000:07:00.0: PME# supported from D0 D1 D2 D3hot D3cold
[388485.017525] pci 0000:07:01.0: [8086:15d3] type 01 class 0x060400
[388485.017665] pci 0000:07:01.0: supports D1 D2
[388485.017667] pci 0000:07:01.0: PME# supported from D0 D1 D2 D3hot D3cold
[388485.017788] pci 0000:07:02.0: [8086:15d3] type 01 class 0x060400
[388485.017929] pci 0000:07:02.0: supports D1 D2
[388485.017930] pci 0000:07:02.0: PME# supported from D0 D1 D2 D3hot D3cold
[388485.018053] pci 0000:07:04.0: [8086:15d3] type 01 class 0x060400
[388485.018194] pci 0000:07:04.0: supports D1 D2
[388485.018196] pci 0000:07:04.0: PME# supported from D0 D1 D2 D3hot D3cold
[388485.018336] pci 0000:06:00.0: PCI bridge to [bus 07-70]
[388485.018348] pci 0000:06:00.0:   bridge window [mem 0xbc000000-0xea0fffff]
[388485.018357] pci 0000:06:00.0:   bridge window [mem 0x70000000-0xb9ffffff 64bit pref]
[388485.018431] pci 0000:07:00.0: PCI bridge to [bus 08]
[388485.018442] pci 0000:07:00.0:   bridge window [mem 0xea000000-0xea0fffff]
[388485.018515] pci 0000:07:01.0: PCI bridge to [bus 09-3b]
[388485.018526] pci 0000:07:01.0:   bridge window [mem 0xbc000000-0xd3efffff]
[388485.018534] pci 0000:07:01.0:   bridge window [mem 0x70000000-0x8fffffff 64bit pref]
[388485.018637] pci 0000:3c:00.0: [8086:15d4] type 00 class 0x0c0330
[388485.018663] pci 0000:3c:00.0: reg 0x10: [mem 0xd3f00000-0xd3f0ffff]
[388485.018858] pci 0000:3c:00.0: supports D1 D2
[388485.018860] pci 0000:3c:00.0: PME# supported from D0 D1 D2 D3hot D3cold
[388485.019054] pci 0000:07:02.0: PCI bridge to [bus 3c]
[388485.019066] pci 0000:07:02.0:   bridge window [mem 0xd3f00000-0xd3ffffff]
[388485.019141] pci 0000:07:04.0: PCI bridge to [bus 3d-70]
[388485.019152] pci 0000:07:04.0:   bridge window [mem 0xd4000000-0xe9ffffff]
[388485.019160] pci 0000:07:04.0:   bridge window [mem 0x90000000-0xb9ffffff 64bit pref]
[388485.019194] pci_bus 0000:07: Allocating resources
[388485.019235] pci 0000:07:01.0: bridge window [io  0x1000-0x0fff] to [bus 09-3b] add_size 1000
[388485.019246] pci 0000:07:02.0: bridge window [io  0x1000-0x0fff] to [bus 3c] add_size 1000
[388485.019249] pci 0000:07:02.0: bridge window [mem 0x00100000-0x000fffff 64bit pref] to [bus 3c] add_size 200000 add_align 100000
[388485.019260] pci 0000:07:04.0: bridge window [io  0x1000-0x0fff] to [bus 3d-70] add_size 1000
[388485.019272] pci 0000:06:00.0: bridge window [io  0x1000-0x0fff] to [bus 07-70] add_size 3000
[388485.019277] pci 0000:06:00.0: BAR 13: no space for [io  size 0x3000]
[388485.019279] pci 0000:06:00.0: BAR 13: failed to assign [io  size 0x3000]
[388485.019283] pci 0000:06:00.0: BAR 13: no space for [io  size 0x3000]
[388485.019285] pci 0000:06:00.0: BAR 13: failed to assign [io  size 0x3000]
[388485.019293] pci 0000:07:02.0: BAR 15: no space for [mem size 0x00200000 64bit pref]
[388485.019295] pci 0000:07:02.0: BAR 15: failed to assign [mem size 0x00200000 64bit pref]
[388485.019297] pci 0000:07:01.0: BAR 13: no space for [io  size 0x1000]
[388485.019298] pci 0000:07:01.0: BAR 13: failed to assign [io  size 0x1000]
[388485.019301] pci 0000:07:02.0: BAR 13: no space for [io  size 0x1000]
[388485.019302] pci 0000:07:02.0: BAR 13: failed to assign [io  size 0x1000]
[388485.019304] pci 0000:07:04.0: BAR 13: no space for [io  size 0x1000]
[388485.019306] pci 0000:07:04.0: BAR 13: failed to assign [io  size 0x1000]
[388485.019309] pci 0000:07:04.0: BAR 13: no space for [io  size 0x1000]
[388485.019311] pci 0000:07:04.0: BAR 13: failed to assign [io  size 0x1000]
[388485.019315] pci 0000:07:02.0: BAR 15: no space for [mem size 0x00200000 64bit pref]
[388485.019317] pci 0000:07:02.0: BAR 15: failed to assign [mem size 0x00200000 64bit pref]
[388485.019318] pci 0000:07:02.0: BAR 13: no space for [io  size 0x1000]
[388485.019320] pci 0000:07:02.0: BAR 13: failed to assign [io  size 0x1000]
[388485.019322] pci 0000:07:01.0: BAR 13: no space for [io  size 0x1000]
[388485.019324] pci 0000:07:01.0: BAR 13: failed to assign [io  size 0x1000]
[388485.019327] pci 0000:07:00.0: PCI bridge to [bus 08]
[388485.019334] pci 0000:07:00.0:   bridge window [mem 0xea000000-0xea0fffff]
[388485.019369] pci 0000:07:01.0: PCI bridge to [bus 09-3b]
[388485.019375] pci 0000:07:01.0:   bridge window [mem 0xbc000000-0xd3efffff]
[388485.019380] pci 0000:07:01.0:   bridge window [mem 0x70000000-0x8fffffff 64bit pref]
[388485.019389] pci 0000:07:02.0: PCI bridge to [bus 3c]
[388485.019395] pci 0000:07:02.0:   bridge window [mem 0xd3f00000-0xd3ffffff]
[388485.019404] pci 0000:07:04.0: PCI bridge to [bus 3d-70]
[388485.019409] pci 0000:07:04.0:   bridge window [mem 0xd4000000-0xe9ffffff]
[388485.019413] pci 0000:07:04.0:   bridge window [mem 0x90000000-0xb9ffffff 64bit pref]
[388485.019420] pci 0000:06:00.0: PCI bridge to [bus 07-70]
[388485.019425] pci 0000:06:00.0:   bridge window [mem 0xbc000000-0xea0fffff]
[388485.019429] pci 0000:06:00.0:   bridge window [mem 0x70000000-0xb9ffffff 64bit pref]
[388485.021125] xhci_hcd 0000:3c:00.0: xHCI Host Controller
[388485.021134] xhci_hcd 0000:3c:00.0: new USB bus registered, assigned bus number 3
[388485.022313] xhci_hcd 0000:3c:00.0: hcc params 0x200077c1 hci version 0x110 quirks 0x00009810
[388485.024330] hub 3-0:1.0: USB hub found
[388485.024341] hub 3-0:1.0: 2 ports detected
[388485.024949] xhci_hcd 0000:3c:00.0: xHCI Host Controller
[388485.024955] xhci_hcd 0000:3c:00.0: new USB bus registered, assigned bus number 4
[388485.025136] hub 4-0:1.0: USB hub found
[388485.025146] hub 4-0:1.0: 2 ports detected
[388485.342798] usb 3-1: new high-speed USB device number 2 using xhci_hcd
[388485.480782] hub 3-1:1.0: USB hub found
[388485.481599] hub 3-1:1.0: 4 ports detected
[388485.627543] usb 4-1: new SuperSpeed USB device number 2 using xhci_hcd
[388485.730586] hub 4-1:1.0: USB hub found
[388485.730871] hub 4-1:1.0: 4 ports detected
[388485.812902] usb 3-1.3: new high-speed USB device number 3 using xhci_hcd
[388485.922630] hub 3-1.3:1.0: USB hub found
[388485.922928] hub 3-1.3:1.0: 4 ports detected
[388486.112908] usb 4-1.4: new SuperSpeed USB device number 3 using xhci_hcd
[388486.202794] usb 3-1.3.1: new high-speed USB device number 4 using xhci_hcd
[388486.298596] usb-storage 3-1.3.1:1.0: USB Mass Storage device detected
[388486.298988] scsi host0: usb-storage 3-1.3.1:1.0
[388486.366550] usb 4-1.4: reset SuperSpeed USB device number 3 using xhci_hcd
[388486.440411] r8152 4-1.4:1.0 eth0: v1.08.9
[388486.772835] usb 3-1.3.3: new high-speed USB device number 5 using xhci_hcd
[388486.989538] r8152 4-1.4:1.0 enp60s0u1u4: renamed from eth0
[388487.321672] scsi 0:0:0:0: Direct-Access     Generic  STORAGE DEVICE   0233 PQ: 0 ANSI: 0
[388487.325495] sd 0:0:0:0: [sda] Attached SCSI removable disk</code></pre>]]></description>
    <pubDate>Fri, 21 Jul 2017 00:00:00 UT</pubDate>
    <guid>https://op8867555.github.io/posts/2017-07-21-adam-usb-c-dock.html</guid>
    <dc:creator>Alex Lu</dc:creator>
</item>
<item>
    <title>Hello World</title>
    <link>https://op8867555.github.io/posts/2017-06-11-hello-world.html</link>
    <description><![CDATA[<p>Hello World!</p>]]></description>
    <pubDate>Sun, 11 Jun 2017 00:00:00 UT</pubDate>
    <guid>https://op8867555.github.io/posts/2017-06-11-hello-world.html</guid>
    <dc:creator>Alex Lu</dc:creator>
</item>

    </channel>
</rss>
